/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 112.0, "minX": 0.0, "maxY": 2860.0, "series": [{"data": [[0.0, 112.0], [0.1, 145.0], [0.2, 161.0], [0.3, 161.0], [0.4, 173.0], [0.5, 175.0], [0.6, 176.0], [0.7, 183.0], [0.8, 195.0], [0.9, 213.0], [1.0, 221.0], [1.1, 231.0], [1.2, 248.0], [1.3, 269.0], [1.4, 277.0], [1.5, 284.0], [1.6, 295.0], [1.7, 304.0], [1.8, 315.0], [1.9, 332.0], [2.0, 342.0], [2.1, 354.0], [2.2, 374.0], [2.3, 384.0], [2.4, 438.0], [2.5, 445.0], [2.6, 472.0], [2.7, 508.0], [2.8, 514.0], [2.9, 520.0], [3.0, 555.0], [3.1, 581.0], [3.2, 589.0], [3.3, 622.0], [3.4, 644.0], [3.5, 656.0], [3.6, 666.0], [3.7, 688.0], [3.8, 703.0], [3.9, 707.0], [4.0, 716.0], [4.1, 721.0], [4.2, 744.0], [4.3, 752.0], [4.4, 788.0], [4.5, 800.0], [4.6, 810.0], [4.7, 819.0], [4.8, 836.0], [4.9, 838.0], [5.0, 840.0], [5.1, 846.0], [5.2, 860.0], [5.3, 867.0], [5.4, 880.0], [5.5, 886.0], [5.6, 887.0], [5.7, 897.0], [5.8, 902.0], [5.9, 905.0], [6.0, 916.0], [6.1, 953.0], [6.2, 969.0], [6.3, 973.0], [6.4, 981.0], [6.5, 985.0], [6.6, 991.0], [6.7, 998.0], [6.8, 1003.0], [6.9, 1007.0], [7.0, 1009.0], [7.1, 1013.0], [7.2, 1013.0], [7.3, 1015.0], [7.4, 1023.0], [7.5, 1030.0], [7.6, 1034.0], [7.7, 1038.0], [7.8, 1040.0], [7.9, 1047.0], [8.0, 1049.0], [8.1, 1053.0], [8.2, 1056.0], [8.3, 1059.0], [8.4, 1061.0], [8.5, 1064.0], [8.6, 1068.0], [8.7, 1072.0], [8.8, 1077.0], [8.9, 1078.0], [9.0, 1099.0], [9.1, 1106.0], [9.2, 1124.0], [9.3, 1137.0], [9.4, 1145.0], [9.5, 1150.0], [9.6, 1152.0], [9.7, 1155.0], [9.8, 1170.0], [9.9, 1173.0], [10.0, 1175.0], [10.1, 1177.0], [10.2, 1179.0], [10.3, 1182.0], [10.4, 1184.0], [10.5, 1186.0], [10.6, 1190.0], [10.7, 1193.0], [10.8, 1195.0], [10.9, 1196.0], [11.0, 1200.0], [11.1, 1201.0], [11.2, 1213.0], [11.3, 1217.0], [11.4, 1218.0], [11.5, 1220.0], [11.6, 1222.0], [11.7, 1222.0], [11.8, 1225.0], [11.9, 1226.0], [12.0, 1228.0], [12.1, 1229.0], [12.2, 1230.0], [12.3, 1231.0], [12.4, 1232.0], [12.5, 1232.0], [12.6, 1233.0], [12.7, 1238.0], [12.8, 1241.0], [12.9, 1242.0], [13.0, 1242.0], [13.1, 1243.0], [13.2, 1244.0], [13.3, 1245.0], [13.4, 1246.0], [13.5, 1248.0], [13.6, 1249.0], [13.7, 1250.0], [13.8, 1252.0], [13.9, 1252.0], [14.0, 1254.0], [14.1, 1254.0], [14.2, 1256.0], [14.3, 1257.0], [14.4, 1257.0], [14.5, 1257.0], [14.6, 1258.0], [14.7, 1258.0], [14.8, 1258.0], [14.9, 1258.0], [15.0, 1259.0], [15.1, 1259.0], [15.2, 1259.0], [15.3, 1261.0], [15.4, 1262.0], [15.5, 1262.0], [15.6, 1263.0], [15.7, 1264.0], [15.8, 1265.0], [15.9, 1266.0], [16.0, 1266.0], [16.1, 1267.0], [16.2, 1268.0], [16.3, 1269.0], [16.4, 1270.0], [16.5, 1270.0], [16.6, 1270.0], [16.7, 1273.0], [16.8, 1273.0], [16.9, 1274.0], [17.0, 1274.0], [17.1, 1275.0], [17.2, 1276.0], [17.3, 1276.0], [17.4, 1279.0], [17.5, 1280.0], [17.6, 1281.0], [17.7, 1282.0], [17.8, 1283.0], [17.9, 1285.0], [18.0, 1286.0], [18.1, 1286.0], [18.2, 1287.0], [18.3, 1288.0], [18.4, 1288.0], [18.5, 1288.0], [18.6, 1289.0], [18.7, 1289.0], [18.8, 1290.0], [18.9, 1290.0], [19.0, 1291.0], [19.1, 1291.0], [19.2, 1292.0], [19.3, 1293.0], [19.4, 1293.0], [19.5, 1294.0], [19.6, 1295.0], [19.7, 1295.0], [19.8, 1296.0], [19.9, 1296.0], [20.0, 1297.0], [20.1, 1297.0], [20.2, 1298.0], [20.3, 1298.0], [20.4, 1300.0], [20.5, 1300.0], [20.6, 1300.0], [20.7, 1301.0], [20.8, 1302.0], [20.9, 1302.0], [21.0, 1302.0], [21.1, 1303.0], [21.2, 1303.0], [21.3, 1304.0], [21.4, 1305.0], [21.5, 1306.0], [21.6, 1306.0], [21.7, 1306.0], [21.8, 1308.0], [21.9, 1310.0], [22.0, 1310.0], [22.1, 1310.0], [22.2, 1311.0], [22.3, 1311.0], [22.4, 1312.0], [22.5, 1312.0], [22.6, 1313.0], [22.7, 1313.0], [22.8, 1313.0], [22.9, 1314.0], [23.0, 1315.0], [23.1, 1315.0], [23.2, 1316.0], [23.3, 1317.0], [23.4, 1317.0], [23.5, 1317.0], [23.6, 1318.0], [23.7, 1319.0], [23.8, 1320.0], [23.9, 1321.0], [24.0, 1322.0], [24.1, 1322.0], [24.2, 1323.0], [24.3, 1323.0], [24.4, 1323.0], [24.5, 1323.0], [24.6, 1324.0], [24.7, 1324.0], [24.8, 1324.0], [24.9, 1324.0], [25.0, 1325.0], [25.1, 1326.0], [25.2, 1326.0], [25.3, 1327.0], [25.4, 1327.0], [25.5, 1328.0], [25.6, 1328.0], [25.7, 1328.0], [25.8, 1329.0], [25.9, 1330.0], [26.0, 1330.0], [26.1, 1331.0], [26.2, 1331.0], [26.3, 1331.0], [26.4, 1332.0], [26.5, 1332.0], [26.6, 1332.0], [26.7, 1332.0], [26.8, 1332.0], [26.9, 1332.0], [27.0, 1333.0], [27.1, 1334.0], [27.2, 1334.0], [27.3, 1336.0], [27.4, 1337.0], [27.5, 1337.0], [27.6, 1338.0], [27.7, 1338.0], [27.8, 1339.0], [27.9, 1339.0], [28.0, 1340.0], [28.1, 1340.0], [28.2, 1341.0], [28.3, 1341.0], [28.4, 1342.0], [28.5, 1342.0], [28.6, 1343.0], [28.7, 1343.0], [28.8, 1343.0], [28.9, 1344.0], [29.0, 1344.0], [29.1, 1345.0], [29.2, 1345.0], [29.3, 1345.0], [29.4, 1346.0], [29.5, 1346.0], [29.6, 1346.0], [29.7, 1347.0], [29.8, 1347.0], [29.9, 1347.0], [30.0, 1348.0], [30.1, 1348.0], [30.2, 1348.0], [30.3, 1349.0], [30.4, 1349.0], [30.5, 1350.0], [30.6, 1350.0], [30.7, 1350.0], [30.8, 1351.0], [30.9, 1351.0], [31.0, 1351.0], [31.1, 1352.0], [31.2, 1352.0], [31.3, 1353.0], [31.4, 1354.0], [31.5, 1354.0], [31.6, 1354.0], [31.7, 1354.0], [31.8, 1355.0], [31.9, 1355.0], [32.0, 1357.0], [32.1, 1357.0], [32.2, 1357.0], [32.3, 1358.0], [32.4, 1358.0], [32.5, 1359.0], [32.6, 1359.0], [32.7, 1360.0], [32.8, 1360.0], [32.9, 1361.0], [33.0, 1361.0], [33.1, 1361.0], [33.2, 1362.0], [33.3, 1362.0], [33.4, 1362.0], [33.5, 1362.0], [33.6, 1363.0], [33.7, 1364.0], [33.8, 1365.0], [33.9, 1366.0], [34.0, 1366.0], [34.1, 1367.0], [34.2, 1367.0], [34.3, 1367.0], [34.4, 1367.0], [34.5, 1367.0], [34.6, 1368.0], [34.7, 1368.0], [34.8, 1369.0], [34.9, 1369.0], [35.0, 1370.0], [35.1, 1371.0], [35.2, 1371.0], [35.3, 1372.0], [35.4, 1372.0], [35.5, 1372.0], [35.6, 1373.0], [35.7, 1373.0], [35.8, 1373.0], [35.9, 1374.0], [36.0, 1375.0], [36.1, 1375.0], [36.2, 1375.0], [36.3, 1375.0], [36.4, 1376.0], [36.5, 1376.0], [36.6, 1376.0], [36.7, 1377.0], [36.8, 1378.0], [36.9, 1378.0], [37.0, 1378.0], [37.1, 1378.0], [37.2, 1378.0], [37.3, 1379.0], [37.4, 1379.0], [37.5, 1379.0], [37.6, 1380.0], [37.7, 1380.0], [37.8, 1380.0], [37.9, 1381.0], [38.0, 1381.0], [38.1, 1382.0], [38.2, 1382.0], [38.3, 1382.0], [38.4, 1383.0], [38.5, 1384.0], [38.6, 1384.0], [38.7, 1384.0], [38.8, 1385.0], [38.9, 1385.0], [39.0, 1385.0], [39.1, 1386.0], [39.2, 1386.0], [39.3, 1387.0], [39.4, 1387.0], [39.5, 1387.0], [39.6, 1387.0], [39.7, 1387.0], [39.8, 1388.0], [39.9, 1388.0], [40.0, 1389.0], [40.1, 1389.0], [40.2, 1389.0], [40.3, 1390.0], [40.4, 1390.0], [40.5, 1390.0], [40.6, 1390.0], [40.7, 1391.0], [40.8, 1391.0], [40.9, 1391.0], [41.0, 1392.0], [41.1, 1392.0], [41.2, 1392.0], [41.3, 1393.0], [41.4, 1393.0], [41.5, 1393.0], [41.6, 1393.0], [41.7, 1394.0], [41.8, 1394.0], [41.9, 1394.0], [42.0, 1394.0], [42.1, 1395.0], [42.2, 1395.0], [42.3, 1395.0], [42.4, 1395.0], [42.5, 1395.0], [42.6, 1396.0], [42.7, 1396.0], [42.8, 1396.0], [42.9, 1396.0], [43.0, 1397.0], [43.1, 1397.0], [43.2, 1397.0], [43.3, 1398.0], [43.4, 1398.0], [43.5, 1399.0], [43.6, 1399.0], [43.7, 1399.0], [43.8, 1399.0], [43.9, 1399.0], [44.0, 1400.0], [44.1, 1400.0], [44.2, 1400.0], [44.3, 1401.0], [44.4, 1401.0], [44.5, 1401.0], [44.6, 1402.0], [44.7, 1402.0], [44.8, 1403.0], [44.9, 1403.0], [45.0, 1403.0], [45.1, 1403.0], [45.2, 1404.0], [45.3, 1404.0], [45.4, 1404.0], [45.5, 1404.0], [45.6, 1404.0], [45.7, 1405.0], [45.8, 1405.0], [45.9, 1405.0], [46.0, 1406.0], [46.1, 1406.0], [46.2, 1406.0], [46.3, 1408.0], [46.4, 1408.0], [46.5, 1409.0], [46.6, 1409.0], [46.7, 1409.0], [46.8, 1409.0], [46.9, 1410.0], [47.0, 1410.0], [47.1, 1410.0], [47.2, 1411.0], [47.3, 1411.0], [47.4, 1412.0], [47.5, 1412.0], [47.6, 1412.0], [47.7, 1412.0], [47.8, 1413.0], [47.9, 1413.0], [48.0, 1414.0], [48.1, 1414.0], [48.2, 1414.0], [48.3, 1415.0], [48.4, 1415.0], [48.5, 1415.0], [48.6, 1415.0], [48.7, 1415.0], [48.8, 1416.0], [48.9, 1416.0], [49.0, 1417.0], [49.1, 1417.0], [49.2, 1417.0], [49.3, 1418.0], [49.4, 1419.0], [49.5, 1420.0], [49.6, 1421.0], [49.7, 1421.0], [49.8, 1421.0], [49.9, 1421.0], [50.0, 1422.0], [50.1, 1422.0], [50.2, 1422.0], [50.3, 1422.0], [50.4, 1423.0], [50.5, 1424.0], [50.6, 1424.0], [50.7, 1424.0], [50.8, 1425.0], [50.9, 1425.0], [51.0, 1425.0], [51.1, 1425.0], [51.2, 1426.0], [51.3, 1427.0], [51.4, 1427.0], [51.5, 1428.0], [51.6, 1428.0], [51.7, 1428.0], [51.8, 1429.0], [51.9, 1431.0], [52.0, 1431.0], [52.1, 1432.0], [52.2, 1432.0], [52.3, 1432.0], [52.4, 1432.0], [52.5, 1433.0], [52.6, 1434.0], [52.7, 1434.0], [52.8, 1434.0], [52.9, 1434.0], [53.0, 1434.0], [53.1, 1435.0], [53.2, 1435.0], [53.3, 1436.0], [53.4, 1436.0], [53.5, 1437.0], [53.6, 1437.0], [53.7, 1438.0], [53.8, 1438.0], [53.9, 1438.0], [54.0, 1438.0], [54.1, 1439.0], [54.2, 1439.0], [54.3, 1439.0], [54.4, 1440.0], [54.5, 1440.0], [54.6, 1440.0], [54.7, 1440.0], [54.8, 1440.0], [54.9, 1441.0], [55.0, 1441.0], [55.1, 1442.0], [55.2, 1443.0], [55.3, 1443.0], [55.4, 1443.0], [55.5, 1443.0], [55.6, 1444.0], [55.7, 1444.0], [55.8, 1444.0], [55.9, 1445.0], [56.0, 1445.0], [56.1, 1445.0], [56.2, 1446.0], [56.3, 1446.0], [56.4, 1446.0], [56.5, 1446.0], [56.6, 1447.0], [56.7, 1447.0], [56.8, 1448.0], [56.9, 1448.0], [57.0, 1448.0], [57.1, 1448.0], [57.2, 1448.0], [57.3, 1448.0], [57.4, 1449.0], [57.5, 1449.0], [57.6, 1449.0], [57.7, 1451.0], [57.8, 1451.0], [57.9, 1452.0], [58.0, 1452.0], [58.1, 1452.0], [58.2, 1452.0], [58.3, 1453.0], [58.4, 1453.0], [58.5, 1453.0], [58.6, 1454.0], [58.7, 1454.0], [58.8, 1454.0], [58.9, 1455.0], [59.0, 1455.0], [59.1, 1456.0], [59.2, 1456.0], [59.3, 1457.0], [59.4, 1457.0], [59.5, 1457.0], [59.6, 1457.0], [59.7, 1458.0], [59.8, 1459.0], [59.9, 1459.0], [60.0, 1459.0], [60.1, 1461.0], [60.2, 1461.0], [60.3, 1461.0], [60.4, 1462.0], [60.5, 1463.0], [60.6, 1463.0], [60.7, 1463.0], [60.8, 1464.0], [60.9, 1464.0], [61.0, 1464.0], [61.1, 1465.0], [61.2, 1466.0], [61.3, 1466.0], [61.4, 1466.0], [61.5, 1466.0], [61.6, 1467.0], [61.7, 1468.0], [61.8, 1468.0], [61.9, 1469.0], [62.0, 1469.0], [62.1, 1470.0], [62.2, 1470.0], [62.3, 1471.0], [62.4, 1471.0], [62.5, 1472.0], [62.6, 1473.0], [62.7, 1474.0], [62.8, 1474.0], [62.9, 1475.0], [63.0, 1476.0], [63.1, 1476.0], [63.2, 1477.0], [63.3, 1477.0], [63.4, 1478.0], [63.5, 1478.0], [63.6, 1479.0], [63.7, 1479.0], [63.8, 1480.0], [63.9, 1480.0], [64.0, 1481.0], [64.1, 1481.0], [64.2, 1483.0], [64.3, 1485.0], [64.4, 1486.0], [64.5, 1486.0], [64.6, 1486.0], [64.7, 1486.0], [64.8, 1487.0], [64.9, 1487.0], [65.0, 1487.0], [65.1, 1488.0], [65.2, 1488.0], [65.3, 1488.0], [65.4, 1490.0], [65.5, 1490.0], [65.6, 1490.0], [65.7, 1491.0], [65.8, 1491.0], [65.9, 1492.0], [66.0, 1493.0], [66.1, 1494.0], [66.2, 1494.0], [66.3, 1494.0], [66.4, 1494.0], [66.5, 1494.0], [66.6, 1495.0], [66.7, 1496.0], [66.8, 1497.0], [66.9, 1498.0], [67.0, 1499.0], [67.1, 1499.0], [67.2, 1500.0], [67.3, 1500.0], [67.4, 1500.0], [67.5, 1500.0], [67.6, 1501.0], [67.7, 1502.0], [67.8, 1503.0], [67.9, 1504.0], [68.0, 1504.0], [68.1, 1504.0], [68.2, 1504.0], [68.3, 1505.0], [68.4, 1506.0], [68.5, 1506.0], [68.6, 1506.0], [68.7, 1508.0], [68.8, 1508.0], [68.9, 1509.0], [69.0, 1509.0], [69.1, 1510.0], [69.2, 1510.0], [69.3, 1510.0], [69.4, 1510.0], [69.5, 1510.0], [69.6, 1510.0], [69.7, 1511.0], [69.8, 1512.0], [69.9, 1512.0], [70.0, 1513.0], [70.1, 1513.0], [70.2, 1514.0], [70.3, 1514.0], [70.4, 1514.0], [70.5, 1515.0], [70.6, 1515.0], [70.7, 1516.0], [70.8, 1517.0], [70.9, 1517.0], [71.0, 1518.0], [71.1, 1519.0], [71.2, 1520.0], [71.3, 1520.0], [71.4, 1520.0], [71.5, 1521.0], [71.6, 1521.0], [71.7, 1522.0], [71.8, 1522.0], [71.9, 1522.0], [72.0, 1523.0], [72.1, 1523.0], [72.2, 1523.0], [72.3, 1523.0], [72.4, 1525.0], [72.5, 1525.0], [72.6, 1526.0], [72.7, 1526.0], [72.8, 1527.0], [72.9, 1528.0], [73.0, 1528.0], [73.1, 1529.0], [73.2, 1529.0], [73.3, 1530.0], [73.4, 1530.0], [73.5, 1530.0], [73.6, 1530.0], [73.7, 1531.0], [73.8, 1531.0], [73.9, 1531.0], [74.0, 1532.0], [74.1, 1532.0], [74.2, 1533.0], [74.3, 1534.0], [74.4, 1535.0], [74.5, 1535.0], [74.6, 1535.0], [74.7, 1535.0], [74.8, 1536.0], [74.9, 1536.0], [75.0, 1537.0], [75.1, 1538.0], [75.2, 1538.0], [75.3, 1538.0], [75.4, 1539.0], [75.5, 1539.0], [75.6, 1540.0], [75.7, 1541.0], [75.8, 1541.0], [75.9, 1541.0], [76.0, 1542.0], [76.1, 1542.0], [76.2, 1543.0], [76.3, 1543.0], [76.4, 1543.0], [76.5, 1544.0], [76.6, 1545.0], [76.7, 1545.0], [76.8, 1546.0], [76.9, 1547.0], [77.0, 1547.0], [77.1, 1548.0], [77.2, 1548.0], [77.3, 1548.0], [77.4, 1549.0], [77.5, 1549.0], [77.6, 1549.0], [77.7, 1550.0], [77.8, 1550.0], [77.9, 1550.0], [78.0, 1551.0], [78.1, 1551.0], [78.2, 1551.0], [78.3, 1552.0], [78.4, 1552.0], [78.5, 1552.0], [78.6, 1552.0], [78.7, 1553.0], [78.8, 1553.0], [78.9, 1554.0], [79.0, 1554.0], [79.1, 1555.0], [79.2, 1555.0], [79.3, 1555.0], [79.4, 1556.0], [79.5, 1556.0], [79.6, 1557.0], [79.7, 1558.0], [79.8, 1558.0], [79.9, 1558.0], [80.0, 1559.0], [80.1, 1560.0], [80.2, 1560.0], [80.3, 1560.0], [80.4, 1561.0], [80.5, 1561.0], [80.6, 1562.0], [80.7, 1562.0], [80.8, 1564.0], [80.9, 1564.0], [81.0, 1564.0], [81.1, 1565.0], [81.2, 1566.0], [81.3, 1566.0], [81.4, 1567.0], [81.5, 1568.0], [81.6, 1568.0], [81.7, 1568.0], [81.8, 1568.0], [81.9, 1569.0], [82.0, 1570.0], [82.1, 1570.0], [82.2, 1570.0], [82.3, 1570.0], [82.4, 1571.0], [82.5, 1572.0], [82.6, 1573.0], [82.7, 1574.0], [82.8, 1574.0], [82.9, 1574.0], [83.0, 1575.0], [83.1, 1575.0], [83.2, 1575.0], [83.3, 1576.0], [83.4, 1576.0], [83.5, 1577.0], [83.6, 1577.0], [83.7, 1577.0], [83.8, 1577.0], [83.9, 1579.0], [84.0, 1580.0], [84.1, 1580.0], [84.2, 1581.0], [84.3, 1581.0], [84.4, 1582.0], [84.5, 1583.0], [84.6, 1584.0], [84.7, 1584.0], [84.8, 1584.0], [84.9, 1585.0], [85.0, 1585.0], [85.1, 1585.0], [85.2, 1586.0], [85.3, 1586.0], [85.4, 1586.0], [85.5, 1587.0], [85.6, 1587.0], [85.7, 1588.0], [85.8, 1589.0], [85.9, 1589.0], [86.0, 1590.0], [86.1, 1590.0], [86.2, 1591.0], [86.3, 1593.0], [86.4, 1594.0], [86.5, 1594.0], [86.6, 1596.0], [86.7, 1596.0], [86.8, 1597.0], [86.9, 1598.0], [87.0, 1599.0], [87.1, 1600.0], [87.2, 1600.0], [87.3, 1601.0], [87.4, 1601.0], [87.5, 1603.0], [87.6, 1604.0], [87.7, 1606.0], [87.8, 1608.0], [87.9, 1609.0], [88.0, 1610.0], [88.1, 1611.0], [88.2, 1613.0], [88.3, 1613.0], [88.4, 1613.0], [88.5, 1615.0], [88.6, 1616.0], [88.7, 1617.0], [88.8, 1618.0], [88.9, 1619.0], [89.0, 1621.0], [89.1, 1621.0], [89.2, 1623.0], [89.3, 1624.0], [89.4, 1625.0], [89.5, 1625.0], [89.6, 1626.0], [89.7, 1628.0], [89.8, 1629.0], [89.9, 1630.0], [90.0, 1630.0], [90.1, 1632.0], [90.2, 1635.0], [90.3, 1636.0], [90.4, 1637.0], [90.5, 1637.0], [90.6, 1638.0], [90.7, 1639.0], [90.8, 1639.0], [90.9, 1640.0], [91.0, 1641.0], [91.1, 1641.0], [91.2, 1642.0], [91.3, 1642.0], [91.4, 1643.0], [91.5, 1646.0], [91.6, 1646.0], [91.7, 1647.0], [91.8, 1648.0], [91.9, 1648.0], [92.0, 1649.0], [92.1, 1649.0], [92.2, 1650.0], [92.3, 1651.0], [92.4, 1651.0], [92.5, 1654.0], [92.6, 1654.0], [92.7, 1654.0], [92.8, 1655.0], [92.9, 1656.0], [93.0, 1657.0], [93.1, 1660.0], [93.2, 1660.0], [93.3, 1661.0], [93.4, 1661.0], [93.5, 1663.0], [93.6, 1664.0], [93.7, 1666.0], [93.8, 1668.0], [93.9, 1668.0], [94.0, 1669.0], [94.1, 1669.0], [94.2, 1671.0], [94.3, 1671.0], [94.4, 1672.0], [94.5, 1672.0], [94.6, 1675.0], [94.7, 1676.0], [94.8, 1678.0], [94.9, 1680.0], [95.0, 1681.0], [95.1, 1682.0], [95.2, 1682.0], [95.3, 1686.0], [95.4, 1686.0], [95.5, 1686.0], [95.6, 1687.0], [95.7, 1688.0], [95.8, 1690.0], [95.9, 1690.0], [96.0, 1691.0], [96.1, 1693.0], [96.2, 1694.0], [96.3, 1695.0], [96.4, 1696.0], [96.5, 1697.0], [96.6, 1698.0], [96.7, 1700.0], [96.8, 1701.0], [96.9, 1703.0], [97.0, 1705.0], [97.1, 1707.0], [97.2, 1711.0], [97.3, 1717.0], [97.4, 1720.0], [97.5, 1726.0], [97.6, 1735.0], [97.7, 1745.0], [97.8, 1748.0], [97.9, 1749.0], [98.0, 1754.0], [98.1, 1756.0], [98.2, 1762.0], [98.3, 1763.0], [98.4, 1765.0], [98.5, 1772.0], [98.6, 1784.0], [98.7, 1789.0], [98.8, 1807.0], [98.9, 1812.0], [99.0, 1840.0], [99.1, 1857.0], [99.2, 1866.0], [99.3, 1940.0], [99.4, 2020.0], [99.5, 2113.0], [99.6, 2474.0], [99.7, 2664.0], [99.8, 2687.0], [99.9, 2712.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 472.0, "series": [{"data": [[600.0, 11.0], [700.0, 14.0], [800.0, 26.0], [900.0, 19.0], [1000.0, 46.0], [1100.0, 38.0], [1200.0, 188.0], [1300.0, 472.0], [1400.0, 464.0], [1500.0, 399.0], [100.0, 17.0], [1600.0, 191.0], [1700.0, 43.0], [1800.0, 10.0], [1900.0, 2.0], [2000.0, 2.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 2.0], [200.0, 15.0], [300.0, 15.0], [400.0, 7.0], [500.0, 11.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2800.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 54.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1297.0, "series": [{"data": [[0.0, 54.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1297.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 649.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 4.5, "minX": 1.667318317E12, "maxY": 200.0, "series": [{"data": [[1.6673183182E12, 200.0], [1.6673183223E12, 200.0], [1.6673183304E12, 164.25], [1.6673183181E12, 200.0], [1.6673183222E12, 200.0], [1.6673183263E12, 200.0], [1.6673183224E12, 200.0], [1.6673183265E12, 200.0], [1.6673183306E12, 149.28571428571428], [1.6673183183E12, 200.0], [1.6673183264E12, 200.0], [1.6673183305E12, 157.33333333333334], [1.6673183184E12, 200.0], [1.6673183225E12, 200.0], [1.6673183266E12, 200.0], [1.6673183307E12, 134.8518518518519], [1.6673183185E12, 200.0], [1.6673183226E12, 200.0], [1.6673183267E12, 200.0], [1.6673183308E12, 116.83333333333334], [1.6673183187E12, 200.0], [1.6673183228E12, 200.0], [1.6673183269E12, 200.0], [1.667318331E12, 93.5], [1.6673183186E12, 200.0], [1.6673183227E12, 200.0], [1.6673183268E12, 200.0], [1.6673183309E12, 104.2], [1.6673183188E12, 200.0], [1.6673183229E12, 200.0], [1.667318327E12, 200.0], [1.6673183311E12, 78.95833333333334], [1.6673183312E12, 61.53333333333334], [1.6673183189E12, 200.0], [1.667318323E12, 200.0], [1.6673183271E12, 200.0], [1.6673183191E12, 200.0], [1.6673183272E12, 200.0], [1.6673183313E12, 49.5], [1.667318319E12, 200.0], [1.6673183231E12, 200.0], [1.6673183171E12, 154.55555555555554], [1.6673183212E12, 200.0], [1.6673183253E12, 200.0], [1.6673183294E12, 197.0], [1.6673183173E12, 196.375], [1.6673183214E12, 200.0], [1.6673183255E12, 200.0], [1.6673183172E12, 177.79999999999998], [1.6673183213E12, 200.0], [1.6673183254E12, 200.0], [1.6673183295E12, 197.0], [1.6673183256E12, 200.0], [1.6673183297E12, 195.36363636363637], [1.6673183174E12, 200.0], [1.6673183215E12, 200.0], [1.6673183296E12, 197.0], [1.6673183216E12, 200.0], [1.6673183257E12, 200.0], [1.6673183298E12, 193.42857142857142], [1.6673183175E12, 200.0], [1.6673183176E12, 200.0], [1.6673183217E12, 200.0], [1.6673183258E12, 200.0], [1.6673183299E12, 189.77272727272728], [1.6673183178E12, 200.0], [1.6673183219E12, 200.0], [1.667318326E12, 200.0], [1.6673183301E12, 179.05263157894737], [1.6673183177E12, 200.0], [1.6673183218E12, 200.0], [1.6673183259E12, 200.0], [1.66731833E12, 185.14285714285717], [1.6673183179E12, 200.0], [1.667318322E12, 200.0], [1.6673183261E12, 200.0], [1.6673183302E12, 177.0], [1.667318318E12, 200.0], [1.6673183221E12, 200.0], [1.6673183262E12, 200.0], [1.6673183303E12, 173.8235294117647], [1.6673183202E12, 200.0], [1.6673183243E12, 200.0], [1.6673183284E12, 200.0], [1.6673183203E12, 200.0], [1.6673183244E12, 200.0], [1.6673183285E12, 199.6], [1.6673183205E12, 200.0], [1.6673183246E12, 200.0], [1.6673183287E12, 198.0], [1.6673183204E12, 200.0], [1.6673183245E12, 200.0], [1.6673183286E12, 198.0], [1.6673183288E12, 198.0], [1.6673183206E12, 200.0], [1.6673183247E12, 200.0], [1.6673183248E12, 200.0], [1.6673183289E12, 198.0], [1.6673183207E12, 200.0], [1.6673183208E12, 200.0], [1.6673183249E12, 200.0], [1.667318329E12, 198.0], [1.667318321E12, 200.0], [1.6673183251E12, 200.0], [1.6673183292E12, 197.66666666666669], [1.6673183209E12, 200.0], [1.667318325E12, 200.0], [1.6673183291E12, 198.0], [1.667318317E12, 128.5], [1.6673183211E12, 200.0], [1.6673183252E12, 200.0], [1.6673183293E12, 197.0], [1.6673183192E12, 200.0], [1.6673183233E12, 200.0], [1.6673183274E12, 200.0], [1.6673183315E12, 19.545454545454547], [1.6673183232E12, 200.0], [1.6673183273E12, 200.0], [1.6673183314E12, 36.5], [1.6673183193E12, 200.0], [1.6673183234E12, 200.0], [1.6673183275E12, 200.0], [1.6673183316E12, 4.5], [1.6673183194E12, 200.0], [1.6673183235E12, 200.0], [1.6673183276E12, 200.0], [1.6673183196E12, 200.0], [1.6673183237E12, 200.0], [1.6673183278E12, 200.0], [1.6673183195E12, 200.0], [1.6673183236E12, 200.0], [1.6673183277E12, 200.0], [1.6673183197E12, 200.0], [1.6673183238E12, 200.0], [1.6673183279E12, 200.0], [1.667318328E12, 200.0], [1.6673183198E12, 200.0], [1.6673183239E12, 200.0], [1.667318324E12, 200.0], [1.6673183281E12, 200.0], [1.6673183199E12, 200.0], [1.6673183201E12, 200.0], [1.6673183242E12, 200.0], [1.6673183283E12, 200.0], [1.66731832E12, 200.0], [1.6673183241E12, 200.0], [1.6673183282E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673183316E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 112.0, "minX": 1.0, "maxY": 1950.5, "series": [{"data": [[2.0, 112.0], [3.0, 1053.0], [4.0, 1077.0], [5.0, 438.0], [6.0, 512.0], [7.0, 886.0], [8.0, 1056.0], [9.0, 351.0], [10.0, 1061.0], [11.0, 716.0], [12.0, 864.0], [13.0, 294.0], [14.0, 791.0], [15.0, 335.0], [17.0, 1506.0], [18.0, 1245.0], [19.0, 1242.0], [20.0, 567.0], [21.0, 1238.0], [22.0, 1238.0], [23.0, 1100.0], [24.0, 1025.0], [25.0, 1070.0], [27.0, 1201.0], [28.0, 1055.6666666666667], [29.0, 1305.0], [30.0, 1050.0], [31.0, 1311.0], [33.0, 1486.0], [32.0, 1195.0], [35.0, 1478.0], [34.0, 1291.0], [37.0, 1077.0], [36.0, 1243.0], [39.0, 1256.0], [38.0, 1427.0], [41.0, 1249.0], [40.0, 1143.0], [43.0, 1231.0], [42.0, 1244.0], [45.0, 1200.0], [44.0, 1201.0], [47.0, 1412.0], [46.0, 1195.0], [49.0, 1196.0], [48.0, 1193.0], [51.0, 1170.0], [50.0, 1176.0], [53.0, 1252.0], [52.0, 1233.0], [55.0, 1254.0], [54.0, 1232.0], [57.0, 1283.0], [56.0, 1311.0], [58.0, 1421.0], [61.0, 1275.0], [60.0, 1228.0], [63.0, 1950.5], [62.0, 1246.0], [67.0, 1435.0], [66.0, 1449.0], [65.0, 1262.0], [64.0, 1254.5], [71.0, 1459.0], [70.0, 1359.0], [75.0, 1217.0], [74.0, 1208.5], [73.0, 1190.0], [72.0, 1394.0], [79.0, 1531.0], [78.0, 1328.0], [77.0, 1522.0], [76.0, 1340.0], [83.0, 1461.0], [81.0, 1514.0], [80.0, 1441.0], [87.0, 1388.0], [86.0, 1409.0], [85.0, 1287.0], [84.0, 1466.0], [91.0, 1476.0], [90.0, 1454.5], [89.0, 1291.0], [88.0, 1376.0], [95.0, 1415.0], [94.0, 1422.0], [93.0, 1388.0], [92.0, 1412.0], [99.0, 1491.5], [98.0, 1625.0], [97.0, 1357.0], [96.0, 1362.0], [103.0, 1333.0], [102.0, 1438.0], [101.0, 1355.0], [100.0, 1589.0], [106.0, 1392.0], [105.0, 1327.0], [104.0, 1423.0], [111.0, 174.0], [110.0, 1337.0], [109.0, 1414.0], [108.0, 1342.5], [115.0, 1444.0], [114.0, 1417.0], [113.0, 1371.0], [112.0, 1351.0], [119.0, 1529.0], [118.0, 1439.0], [117.0, 1424.0], [123.0, 1630.0], [122.0, 1505.0], [121.0, 1518.0], [120.0, 1586.0], [126.0, 471.0], [127.0, 1462.0], [125.0, 1456.0], [124.0, 1482.0], [128.0, 363.8571428571429], [131.0, 827.75], [134.0, 846.0], [135.0, 1535.0], [133.0, 1535.0], [129.0, 1430.5], [142.0, 677.3333333333333], [143.0, 1569.0], [141.0, 1448.0], [140.0, 1562.0], [139.0, 1510.0], [138.0, 1518.5], [136.0, 1583.0], [150.0, 1523.0], [149.0, 1518.0], [148.0, 1487.0], [147.0, 1506.0], [145.0, 1510.0], [144.0, 1720.0], [155.0, 1052.3333333333333], [157.0, 693.6666666666666], [159.0, 1504.0], [158.0, 1532.3333333333333], [156.0, 1510.0], [153.0, 1501.0], [152.0, 1450.5], [162.0, 761.6666666666667], [167.0, 945.25], [165.0, 1600.6666666666667], [164.0, 1593.0], [163.0, 1655.5], [161.0, 1627.5], [160.0, 1552.0], [168.0, 936.0], [171.0, 707.0], [175.0, 1422.0], [174.0, 1427.0], [173.0, 1457.0], [172.0, 1552.0], [170.0, 1539.0], [169.0, 1429.0], [178.0, 1229.75], [183.0, 1563.5], [182.0, 1499.5], [181.0, 1504.0], [180.0, 1552.75], [179.0, 1296.6], [177.0, 1501.5], [176.0, 1552.2857142857142], [189.0, 626.8], [190.0, 1403.0], [191.0, 1263.4285714285713], [188.0, 1549.3333333333333], [187.0, 1573.0], [186.0, 1517.6666666666665], [185.0, 1589.6666666666667], [184.0, 1396.0], [199.0, 469.0], [198.0, 1393.7826086956522], [197.0, 1490.7547169811326], [196.0, 1477.6666666666667], [195.0, 1550.6666666666667], [194.0, 1465.4], [193.0, 1500.2], [192.0, 1521.0], [200.0, 1407.9602864583348], [1.0, 1314.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[187.80800000000025, 1388.8034999999993]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 14370.0, "minX": 1.667318317E12, "maxY": 237710.0, "series": [{"data": [[1.6673183182E12, 108640.0], [1.6673183223E12, 67930.0], [1.6673183304E12, 103730.0], [1.6673183181E12, 135510.0], [1.6673183222E12, 113110.0], [1.6673183263E12, 60150.0], [1.6673183224E12, 97230.0], [1.6673183265E12, 100770.0], [1.6673183306E12, 66040.0], [1.6673183183E12, 107070.0], [1.6673183264E12, 210440.0], [1.6673183305E12, 127570.0], [1.6673183184E12, 116380.0], [1.6673183225E12, 130210.0], [1.6673183266E12, 149620.0], [1.6673183307E12, 236700.0], [1.6673183185E12, 143770.0], [1.6673183226E12, 105180.0], [1.6673183267E12, 75420.0], [1.6673183308E12, 104060.0], [1.6673183187E12, 114690.0], [1.6673183228E12, 114050.0], [1.6673183269E12, 115670.0], [1.667318331E12, 65140.0], [1.6673183186E12, 119790.0], [1.6673183227E12, 125930.0], [1.6673183268E12, 197040.0], [1.6673183309E12, 137380.0], [1.6673183188E12, 157560.0], [1.6673183229E12, 94250.0], [1.667318327E12, 129770.0], [1.6673183311E12, 213890.0], [1.6673183312E12, 128950.0], [1.6673183189E12, 110240.0], [1.667318323E12, 118350.0], [1.6673183271E12, 97780.0], [1.6673183191E12, 115600.0], [1.6673183272E12, 168730.0], [1.6673183313E12, 106410.0], [1.667318319E12, 118720.0], [1.6673183231E12, 101200.0], [1.6673183171E12, 84160.0], [1.6673183212E12, 112280.0], [1.6673183253E12, 137360.0], [1.6673183294E12, 39180.0], [1.6673183173E12, 70170.0], [1.6673183214E12, 41230.0], [1.6673183255E12, 69360.0], [1.6673183172E12, 91510.0], [1.6673183213E12, 139350.0], [1.6673183254E12, 123670.0], [1.6673183295E12, 98320.0], [1.6673183256E12, 194170.0], [1.6673183297E12, 89630.0], [1.6673183174E12, 70540.0], [1.6673183215E12, 168320.0], [1.6673183296E12, 189370.0], [1.6673183216E12, 106610.0], [1.6673183257E12, 83170.0], [1.6673183298E12, 61190.0], [1.6673183175E12, 110580.0], [1.6673183176E12, 132790.0], [1.6673183217E12, 130590.0], [1.6673183258E12, 129120.0], [1.6673183299E12, 199760.0], [1.6673183178E12, 101550.0], [1.6673183219E12, 115650.0], [1.667318326E12, 164500.0], [1.6673183301E12, 176590.0], [1.6673183177E12, 129270.0], [1.6673183218E12, 80790.0], [1.6673183259E12, 97770.0], [1.66731833E12, 127000.0], [1.6673183179E12, 81270.0], [1.667318322E12, 107880.0], [1.6673183261E12, 105520.0], [1.6673183302E12, 27810.0], [1.667318318E12, 237710.0], [1.6673183221E12, 115890.0], [1.6673183262E12, 165020.0], [1.6673183303E12, 159140.0], [1.6673183202E12, 53890.0], [1.6673183243E12, 137050.0], [1.6673183284E12, 173170.0], [1.6673183203E12, 205720.0], [1.6673183244E12, 70960.0], [1.6673183285E12, 86680.0], [1.6673183205E12, 117110.0], [1.6673183246E12, 93350.0], [1.6673183287E12, 123260.0], [1.6673183204E12, 122030.0], [1.6673183245E12, 185630.0], [1.6673183286E12, 164180.0], [1.6673183288E12, 110890.0], [1.6673183206E12, 38770.0], [1.6673183247E12, 141530.0], [1.6673183248E12, 105020.0], [1.6673183289E12, 91690.0], [1.6673183207E12, 117640.0], [1.6673183208E12, 99750.0], [1.6673183249E12, 175370.0], [1.667318329E12, 114510.0], [1.667318321E12, 69710.0], [1.6673183251E12, 146750.0], [1.6673183292E12, 101280.0], [1.6673183209E12, 171610.0], [1.667318325E12, 113620.0], [1.6673183291E12, 126510.0], [1.667318317E12, 107690.0], [1.6673183211E12, 178370.0], [1.6673183252E12, 126600.0], [1.6673183293E12, 124160.0], [1.6673183192E12, 129690.0], [1.6673183233E12, 96870.0], [1.6673183274E12, 102490.0], [1.6673183315E12, 197600.0], [1.6673183232E12, 96020.0], [1.6673183273E12, 138590.0], [1.6673183314E12, 123670.0], [1.6673183193E12, 130590.0], [1.6673183234E12, 115310.0], [1.6673183275E12, 118300.0], [1.6673183316E12, 73150.0], [1.6673183194E12, 119540.0], [1.6673183235E12, 95780.0], [1.6673183276E12, 180500.0], [1.6673183196E12, 129120.0], [1.6673183237E12, 64430.0], [1.6673183278E12, 59610.0], [1.6673183195E12, 158980.0], [1.6673183236E12, 108290.0], [1.6673183277E12, 127940.0], [1.6673183197E12, 109500.0], [1.6673183238E12, 169920.0], [1.6673183279E12, 202360.0], [1.667318328E12, 152840.0], [1.6673183198E12, 144840.0], [1.6673183239E12, 153020.0], [1.667318324E12, 109270.0], [1.6673183281E12, 83390.0], [1.6673183199E12, 129590.0], [1.6673183201E12, 58400.0], [1.6673183242E12, 142030.0], [1.6673183283E12, 176030.0], [1.66731832E12, 113460.0], [1.6673183241E12, 130330.0], [1.6673183282E12, 82600.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6673183182E12, 57480.0], [1.6673183223E12, 38320.0], [1.6673183304E12, 57480.0], [1.6673183181E12, 71850.0], [1.6673183222E12, 62270.0], [1.6673183263E12, 33530.0], [1.6673183224E12, 52690.0], [1.6673183265E12, 57480.0], [1.6673183306E12, 33530.0], [1.6673183183E12, 57480.0], [1.6673183264E12, 114960.0], [1.6673183305E12, 71850.0], [1.6673183184E12, 67060.0], [1.6673183225E12, 67060.0], [1.6673183266E12, 86220.0], [1.6673183307E12, 129330.0], [1.6673183185E12, 76640.0], [1.6673183226E12, 57480.0], [1.6673183267E12, 43110.0], [1.6673183308E12, 57480.0], [1.6673183187E12, 62270.0], [1.6673183228E12, 57480.0], [1.6673183269E12, 62270.0], [1.667318331E12, 38320.0], [1.6673183186E12, 62270.0], [1.6673183227E12, 67060.0], [1.6673183268E12, 105380.0], [1.6673183309E12, 71850.0], [1.6673183188E12, 81430.0], [1.6673183229E12, 52690.0], [1.667318327E12, 67060.0], [1.6673183311E12, 114960.0], [1.6673183312E12, 71850.0], [1.6673183189E12, 62270.0], [1.667318323E12, 57480.0], [1.6673183271E12, 52690.0], [1.6673183191E12, 57480.0], [1.6673183272E12, 91010.0], [1.6673183313E12, 57480.0], [1.667318319E12, 62270.0], [1.6673183231E12, 52690.0], [1.6673183171E12, 43110.0], [1.6673183212E12, 57480.0], [1.6673183253E12, 71850.0], [1.6673183294E12, 19160.0], [1.6673183173E12, 38320.0], [1.6673183214E12, 19160.0], [1.6673183255E12, 38320.0], [1.6673183172E12, 47900.0], [1.6673183213E12, 71850.0], [1.6673183254E12, 67060.0], [1.6673183295E12, 52690.0], [1.6673183256E12, 105380.0], [1.6673183297E12, 52690.0], [1.6673183174E12, 38320.0], [1.6673183215E12, 91010.0], [1.6673183296E12, 95800.0], [1.6673183216E12, 57480.0], [1.6673183257E12, 47900.0], [1.6673183298E12, 33530.0], [1.6673183175E12, 62270.0], [1.6673183176E12, 71850.0], [1.6673183217E12, 67060.0], [1.6673183258E12, 71850.0], [1.6673183299E12, 105380.0], [1.6673183178E12, 52690.0], [1.6673183219E12, 62270.0], [1.667318326E12, 91010.0], [1.6673183301E12, 91010.0], [1.6673183177E12, 67060.0], [1.6673183218E12, 43110.0], [1.6673183259E12, 52690.0], [1.66731833E12, 67060.0], [1.6673183179E12, 47900.0], [1.667318322E12, 57480.0], [1.6673183261E12, 57480.0], [1.6673183302E12, 14370.0], [1.667318318E12, 124540.0], [1.6673183221E12, 62270.0], [1.6673183262E12, 91010.0], [1.6673183303E12, 81430.0], [1.6673183202E12, 33530.0], [1.6673183243E12, 71850.0], [1.6673183284E12, 91010.0], [1.6673183203E12, 110170.0], [1.6673183244E12, 38320.0], [1.6673183285E12, 47900.0], [1.6673183205E12, 62270.0], [1.6673183246E12, 47900.0], [1.6673183287E12, 67060.0], [1.6673183204E12, 67060.0], [1.6673183245E12, 100590.0], [1.6673183286E12, 86220.0], [1.6673183288E12, 62270.0], [1.6673183206E12, 19160.0], [1.6673183247E12, 76640.0], [1.6673183248E12, 52690.0], [1.6673183289E12, 47900.0], [1.6673183207E12, 62270.0], [1.6673183208E12, 57480.0], [1.6673183249E12, 91010.0], [1.667318329E12, 62270.0], [1.667318321E12, 38320.0], [1.6673183251E12, 81430.0], [1.6673183292E12, 57480.0], [1.6673183209E12, 91010.0], [1.667318325E12, 62270.0], [1.6673183291E12, 67060.0], [1.667318317E12, 57480.0], [1.6673183211E12, 95800.0], [1.6673183252E12, 67060.0], [1.6673183293E12, 67060.0], [1.6673183192E12, 67060.0], [1.6673183233E12, 52690.0], [1.6673183274E12, 57480.0], [1.6673183315E12, 105380.0], [1.6673183232E12, 52690.0], [1.6673183273E12, 81430.0], [1.6673183314E12, 67060.0], [1.6673183193E12, 71850.0], [1.6673183234E12, 67060.0], [1.6673183275E12, 71850.0], [1.6673183316E12, 38320.0], [1.6673183194E12, 67060.0], [1.6673183235E12, 52690.0], [1.6673183276E12, 95800.0], [1.6673183196E12, 67060.0], [1.6673183237E12, 33530.0], [1.6673183278E12, 33530.0], [1.6673183195E12, 86220.0], [1.6673183236E12, 57480.0], [1.6673183277E12, 67060.0], [1.6673183197E12, 62270.0], [1.6673183238E12, 86220.0], [1.6673183279E12, 105380.0], [1.667318328E12, 81430.0], [1.6673183198E12, 81430.0], [1.6673183239E12, 81430.0], [1.667318324E12, 57480.0], [1.6673183281E12, 43110.0], [1.6673183199E12, 71850.0], [1.6673183201E12, 33530.0], [1.6673183242E12, 76640.0], [1.6673183283E12, 95800.0], [1.66731832E12, 62270.0], [1.6673183241E12, 71850.0], [1.6673183282E12, 43110.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673183316E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 168.91666666666666, "minX": 1.667318317E12, "maxY": 1734.5714285714287, "series": [{"data": [[1.6673183182E12, 1084.25], [1.6673183223E12, 1553.625], [1.6673183304E12, 1614.0833333333333], [1.6673183181E12, 1065.1999999999998], [1.6673183222E12, 1523.1538461538457], [1.6673183263E12, 1349.7142857142858], [1.6673183224E12, 1550.7272727272727], [1.6673183265E12, 1384.5833333333335], [1.6673183306E12, 1491.5714285714284], [1.6673183183E12, 1189.4999999999998], [1.6673183264E12, 1385.5416666666665], [1.6673183305E12, 1516.6000000000004], [1.6673183184E12, 1247.9285714285716], [1.6673183225E12, 1623.5714285714284], [1.6673183266E12, 1374.0], [1.6673183307E12, 1531.4814814814815], [1.6673183185E12, 1339.5625], [1.6673183226E12, 1611.5], [1.6673183267E12, 1382.5555555555557], [1.6673183308E12, 1452.0833333333333], [1.6673183187E12, 1417.923076923077], [1.6673183228E12, 1632.5833333333333], [1.6673183269E12, 1314.769230769231], [1.667318331E12, 1414.125], [1.6673183186E12, 1402.1538461538462], [1.6673183227E12, 1702.5], [1.6673183268E12, 1368.1363636363635], [1.6673183309E12, 1338.3333333333333], [1.6673183188E12, 1442.2941176470588], [1.6673183229E12, 1647.818181818182], [1.667318327E12, 1311.9285714285713], [1.6673183311E12, 1374.8750000000002], [1.6673183312E12, 1388.7333333333336], [1.6673183189E12, 1383.5384615384614], [1.667318323E12, 1661.5833333333333], [1.6673183271E12, 1363.272727272727], [1.6673183191E12, 1390.9166666666667], [1.6673183272E12, 1344.8947368421052], [1.6673183313E12, 1226.1666666666667], [1.667318319E12, 1358.153846153846], [1.6673183231E12, 1629.9090909090908], [1.6673183171E12, 272.8888888888889], [1.6673183212E12, 1529.5833333333335], [1.6673183253E12, 1399.9333333333332], [1.6673183294E12, 1472.75], [1.6673183173E12, 450.49999999999994], [1.6673183214E12, 1585.0], [1.6673183255E12, 1400.75], [1.6673183172E12, 350.8], [1.6673183213E12, 1440.2666666666667], [1.6673183254E12, 1369.2142857142858], [1.6673183295E12, 1515.0], [1.6673183256E12, 1530.3636363636363], [1.6673183297E12, 1489.0909090909092], [1.6673183174E12, 545.75], [1.6673183215E12, 1549.578947368421], [1.6673183296E12, 1528.8], [1.6673183216E12, 1617.7500000000002], [1.6673183257E12, 1415.6000000000001], [1.6673183298E12, 1490.857142857143], [1.6673183175E12, 640.230769230769], [1.6673183176E12, 750.2], [1.6673183217E12, 1515.7857142857142], [1.6673183258E12, 1572.4], [1.6673183299E12, 1581.590909090909], [1.6673183178E12, 895.9090909090908], [1.6673183219E12, 1558.4615384615386], [1.667318326E12, 1420.6315789473686], [1.6673183301E12, 1464.2105263157894], [1.6673183177E12, 847.0], [1.6673183218E12, 1497.0], [1.6673183259E12, 1385.2727272727273], [1.66731833E12, 1519.5000000000002], [1.6673183179E12, 988.8000000000001], [1.667318322E12, 1570.25], [1.6673183261E12, 1415.5833333333335], [1.6673183302E12, 1502.0], [1.667318318E12, 1017.7307692307693], [1.6673183221E12, 1641.076923076923], [1.6673183262E12, 1374.263157894737], [1.6673183303E12, 1508.6470588235295], [1.6673183202E12, 1445.5714285714287], [1.6673183243E12, 1582.4000000000003], [1.6673183284E12, 1351.8421052631581], [1.6673183203E12, 1483.8260869565215], [1.6673183244E12, 1208.25], [1.6673183285E12, 1325.5], [1.6673183205E12, 1426.5384615384614], [1.6673183246E12, 1582.5], [1.6673183287E12, 1345.3571428571431], [1.6673183204E12, 1455.571428571429], [1.6673183245E12, 1529.9999999999998], [1.6673183286E12, 1358.9999999999998], [1.6673183288E12, 1329.2307692307688], [1.6673183206E12, 1455.5], [1.6673183247E12, 1335.25], [1.6673183248E12, 1449.4545454545455], [1.6673183289E12, 1480.9], [1.6673183207E12, 1549.8461538461543], [1.6673183208E12, 1535.9166666666667], [1.6673183249E12, 1451.6315789473686], [1.667318329E12, 1406.923076923077], [1.667318321E12, 1512.25], [1.6673183251E12, 1377.3529411764705], [1.6673183292E12, 1474.9166666666667], [1.6673183209E12, 1503.2105263157894], [1.667318325E12, 1419.1538461538462], [1.6673183291E12, 1430.8571428571427], [1.667318317E12, 168.91666666666666], [1.6673183211E12, 1537.25], [1.6673183252E12, 1376.9285714285716], [1.6673183293E12, 1437.7857142857144], [1.6673183192E12, 1403.1428571428573], [1.6673183233E12, 1687.181818181818], [1.6673183274E12, 1292.4166666666667], [1.6673183315E12, 991.909090909091], [1.6673183232E12, 1637.1818181818182], [1.6673183273E12, 1291.1176470588234], [1.6673183314E12, 1262.9285714285716], [1.6673183193E12, 1441.866666666667], [1.6673183234E12, 1714.4285714285716], [1.6673183275E12, 1329.6666666666665], [1.6673183316E12, 806.0], [1.6673183194E12, 1407.0714285714287], [1.6673183235E12, 1675.7272727272727], [1.6673183276E12, 1316.3500000000001], [1.6673183196E12, 1410.214285714286], [1.6673183237E12, 1734.5714285714287], [1.6673183278E12, 1314.0], [1.6673183195E12, 1426.5], [1.6673183236E12, 1654.0], [1.6673183277E12, 1197.0000000000002], [1.6673183197E12, 1393.7692307692307], [1.6673183238E12, 1696.7777777777778], [1.6673183279E12, 1310.2727272727273], [1.667318328E12, 1313.5294117647059], [1.6673183198E12, 1406.0588235294117], [1.6673183239E12, 1690.4705882352941], [1.667318324E12, 1623.3333333333333], [1.6673183281E12, 1297.2222222222222], [1.6673183199E12, 1406.6666666666667], [1.6673183201E12, 1425.2857142857142], [1.6673183242E12, 1604.75], [1.6673183283E12, 1362.4500000000003], [1.66731832E12, 1376.1538461538462], [1.6673183241E12, 1589.1999999999998], [1.6673183282E12, 1344.6666666666665]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673183316E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 166.41666666666666, "minX": 1.667318317E12, "maxY": 1734.4285714285713, "series": [{"data": [[1.6673183182E12, 1084.1666666666667], [1.6673183223E12, 1553.25], [1.6673183304E12, 1614.0833333333333], [1.6673183181E12, 1064.9333333333336], [1.6673183222E12, 1523.0769230769226], [1.6673183263E12, 1349.2857142857142], [1.6673183224E12, 1550.5454545454545], [1.6673183265E12, 1384.5833333333335], [1.6673183306E12, 1491.5714285714284], [1.6673183183E12, 1189.0833333333333], [1.6673183264E12, 1384.4166666666665], [1.6673183305E12, 1516.6000000000004], [1.6673183184E12, 1247.7142857142858], [1.6673183225E12, 1623.5], [1.6673183266E12, 1373.8333333333333], [1.6673183307E12, 1530.5555555555557], [1.6673183185E12, 1338.75], [1.6673183226E12, 1611.25], [1.6673183267E12, 1382.3333333333333], [1.6673183308E12, 1451.6666666666665], [1.6673183187E12, 1417.769230769231], [1.6673183228E12, 1632.3333333333333], [1.6673183269E12, 1314.5384615384617], [1.667318331E12, 1414.125], [1.6673183186E12, 1401.8461538461536], [1.6673183227E12, 1702.4285714285716], [1.6673183268E12, 1367.7727272727275], [1.6673183309E12, 1338.0666666666666], [1.6673183188E12, 1442.235294117647], [1.6673183229E12, 1647.181818181818], [1.667318327E12, 1311.857142857143], [1.6673183311E12, 1374.6249999999998], [1.6673183312E12, 1388.6], [1.6673183189E12, 1383.3076923076922], [1.667318323E12, 1661.5], [1.6673183271E12, 1363.272727272727], [1.6673183191E12, 1390.9166666666667], [1.6673183272E12, 1344.7894736842106], [1.6673183313E12, 1225.9166666666667], [1.667318319E12, 1358.0], [1.6673183231E12, 1629.8181818181818], [1.6673183171E12, 272.77777777777777], [1.6673183212E12, 1529.3333333333335], [1.6673183253E12, 1399.9333333333332], [1.6673183294E12, 1472.75], [1.6673183173E12, 450.49999999999994], [1.6673183214E12, 1585.0], [1.6673183255E12, 1399.625], [1.6673183172E12, 350.7], [1.6673183213E12, 1440.1333333333332], [1.6673183254E12, 1368.7857142857144], [1.6673183295E12, 1514.9090909090908], [1.6673183256E12, 1530.0], [1.6673183297E12, 1488.8181818181818], [1.6673183174E12, 545.625], [1.6673183215E12, 1549.4210526315792], [1.6673183296E12, 1528.3000000000002], [1.6673183216E12, 1617.3333333333333], [1.6673183257E12, 1415.1000000000001], [1.6673183298E12, 1490.4285714285716], [1.6673183175E12, 639.8461538461539], [1.6673183176E12, 750.1333333333334], [1.6673183217E12, 1515.7857142857142], [1.6673183258E12, 1572.2], [1.6673183299E12, 1581.3636363636365], [1.6673183178E12, 895.7272727272727], [1.6673183219E12, 1558.4615384615386], [1.667318326E12, 1420.5789473684208], [1.6673183301E12, 1463.5263157894738], [1.6673183177E12, 846.9285714285716], [1.6673183218E12, 1496.888888888889], [1.6673183259E12, 1385.0], [1.66731833E12, 1519.2857142857144], [1.6673183179E12, 988.8000000000001], [1.667318322E12, 1570.25], [1.6673183261E12, 1415.5], [1.6673183302E12, 1502.0], [1.667318318E12, 1017.4615384615385], [1.6673183221E12, 1640.9999999999998], [1.6673183262E12, 1374.052631578947], [1.6673183303E12, 1508.1176470588234], [1.6673183202E12, 1445.5714285714287], [1.6673183243E12, 1582.2], [1.6673183284E12, 1351.7368421052633], [1.6673183203E12, 1483.8260869565215], [1.6673183244E12, 1207.625], [1.6673183285E12, 1325.2999999999997], [1.6673183205E12, 1426.5384615384614], [1.6673183246E12, 1582.4], [1.6673183287E12, 1345.0], [1.6673183204E12, 1455.4285714285716], [1.6673183245E12, 1529.7619047619046], [1.6673183286E12, 1358.9444444444443], [1.6673183288E12, 1329.2307692307688], [1.6673183206E12, 1455.5], [1.6673183247E12, 1335.1875], [1.6673183248E12, 1449.3636363636363], [1.6673183289E12, 1480.9], [1.6673183207E12, 1549.8461538461543], [1.6673183208E12, 1535.75], [1.6673183249E12, 1451.5789473684208], [1.667318329E12, 1406.6923076923076], [1.667318321E12, 1512.125], [1.6673183251E12, 1376.8235294117649], [1.6673183292E12, 1474.6666666666665], [1.6673183209E12, 1503.0], [1.667318325E12, 1418.6923076923076], [1.6673183291E12, 1430.7142857142858], [1.667318317E12, 166.41666666666666], [1.6673183211E12, 1535.9499999999998], [1.6673183252E12, 1375.7857142857142], [1.6673183293E12, 1437.7142857142858], [1.6673183192E12, 1403.1428571428573], [1.6673183233E12, 1687.0909090909092], [1.6673183274E12, 1292.0833333333335], [1.6673183315E12, 991.7727272727276], [1.6673183232E12, 1637.090909090909], [1.6673183273E12, 1290.8235294117646], [1.6673183314E12, 1262.714285714286], [1.6673183193E12, 1441.0000000000002], [1.6673183234E12, 1714.3571428571427], [1.6673183275E12, 1329.4666666666665], [1.6673183316E12, 806.0], [1.6673183194E12, 1406.9285714285713], [1.6673183235E12, 1675.6363636363635], [1.6673183276E12, 1316.3], [1.6673183196E12, 1410.0], [1.6673183237E12, 1734.4285714285713], [1.6673183278E12, 1314.0], [1.6673183195E12, 1426.3888888888891], [1.6673183236E12, 1653.8333333333333], [1.6673183277E12, 1196.7142857142856], [1.6673183197E12, 1393.4615384615386], [1.6673183238E12, 1696.222222222222], [1.6673183279E12, 1310.1363636363637], [1.667318328E12, 1313.5294117647059], [1.6673183198E12, 1406.0000000000002], [1.6673183239E12, 1690.4117647058824], [1.667318324E12, 1623.3333333333333], [1.6673183281E12, 1297.2222222222222], [1.6673183199E12, 1406.6000000000001], [1.6673183201E12, 1425.2857142857142], [1.6673183242E12, 1604.6875], [1.6673183283E12, 1362.4500000000003], [1.66731832E12, 1376.0769230769229], [1.6673183241E12, 1587.2000000000003], [1.6673183282E12, 1344.6666666666665]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673183316E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.667318317E12, "maxY": 29.76923076923077, "series": [{"data": [[1.6673183182E12, 1.3333333333333333], [1.6673183223E12, 0.0], [1.6673183304E12, 0.0], [1.6673183181E12, 0.7333333333333335], [1.6673183222E12, 0.0], [1.6673183263E12, 0.0], [1.6673183224E12, 0.0], [1.6673183265E12, 0.0], [1.6673183306E12, 0.0], [1.6673183183E12, 0.9166666666666666], [1.6673183264E12, 0.0], [1.6673183305E12, 0.0], [1.6673183184E12, 0.6428571428571428], [1.6673183225E12, 0.0], [1.6673183266E12, 0.0], [1.6673183307E12, 0.0], [1.6673183185E12, 3.4375], [1.6673183226E12, 0.0], [1.6673183267E12, 0.0], [1.6673183308E12, 0.0], [1.6673183187E12, 0.5384615384615385], [1.6673183228E12, 0.0], [1.6673183269E12, 0.0], [1.667318331E12, 0.0], [1.6673183186E12, 0.7692307692307692], [1.6673183227E12, 0.0], [1.6673183268E12, 0.0], [1.6673183309E12, 0.0], [1.6673183188E12, 0.1764705882352941], [1.6673183229E12, 0.0], [1.667318327E12, 0.0], [1.6673183311E12, 0.0], [1.6673183312E12, 0.0], [1.6673183189E12, 0.0], [1.667318323E12, 0.0], [1.6673183271E12, 0.0], [1.6673183191E12, 0.0], [1.6673183272E12, 0.0], [1.6673183313E12, 0.0], [1.667318319E12, 0.0], [1.6673183231E12, 0.0], [1.6673183171E12, 18.444444444444446], [1.6673183212E12, 0.0], [1.6673183253E12, 0.0], [1.6673183294E12, 0.0], [1.6673183173E12, 27.125], [1.6673183214E12, 0.0], [1.6673183255E12, 0.0], [1.6673183172E12, 17.3], [1.6673183213E12, 0.0], [1.6673183254E12, 0.0], [1.6673183295E12, 0.0], [1.6673183256E12, 0.0], [1.6673183297E12, 0.0], [1.6673183174E12, 27.375], [1.6673183215E12, 0.0], [1.6673183296E12, 0.0], [1.6673183216E12, 0.0], [1.6673183257E12, 0.0], [1.6673183298E12, 0.0], [1.6673183175E12, 29.76923076923077], [1.6673183176E12, 28.46666666666667], [1.6673183217E12, 0.0], [1.6673183258E12, 0.0], [1.6673183299E12, 0.0], [1.6673183178E12, 12.636363636363637], [1.6673183219E12, 0.0], [1.667318326E12, 0.0], [1.6673183301E12, 0.0], [1.6673183177E12, 18.999999999999996], [1.6673183218E12, 0.0], [1.6673183259E12, 0.0], [1.66731833E12, 0.0], [1.6673183179E12, 6.3999999999999995], [1.667318322E12, 0.0], [1.6673183261E12, 0.0], [1.6673183302E12, 0.0], [1.667318318E12, 3.038461538461538], [1.6673183221E12, 0.0], [1.6673183262E12, 0.0], [1.6673183303E12, 0.0], [1.6673183202E12, 0.0], [1.6673183243E12, 0.0], [1.6673183284E12, 0.0], [1.6673183203E12, 0.0], [1.6673183244E12, 0.0], [1.6673183285E12, 0.0], [1.6673183205E12, 0.0], [1.6673183246E12, 0.0], [1.6673183287E12, 0.0], [1.6673183204E12, 0.0], [1.6673183245E12, 0.0], [1.6673183286E12, 0.0], [1.6673183288E12, 0.0], [1.6673183206E12, 0.0], [1.6673183247E12, 0.0], [1.6673183248E12, 0.0], [1.6673183289E12, 0.0], [1.6673183207E12, 0.0], [1.6673183208E12, 0.0], [1.6673183249E12, 0.0], [1.667318329E12, 0.0], [1.667318321E12, 0.0], [1.6673183251E12, 0.0], [1.6673183292E12, 0.0], [1.6673183209E12, 0.0], [1.667318325E12, 0.0], [1.6673183291E12, 0.0], [1.667318317E12, 23.583333333333332], [1.6673183211E12, 0.0], [1.6673183252E12, 0.0], [1.6673183293E12, 0.0], [1.6673183192E12, 0.0], [1.6673183233E12, 0.0], [1.6673183274E12, 0.0], [1.6673183315E12, 0.0], [1.6673183232E12, 0.0], [1.6673183273E12, 0.0], [1.6673183314E12, 0.0], [1.6673183193E12, 0.0], [1.6673183234E12, 0.0], [1.6673183275E12, 0.0], [1.6673183316E12, 0.0], [1.6673183194E12, 0.0], [1.6673183235E12, 0.0], [1.6673183276E12, 0.0], [1.6673183196E12, 0.0], [1.6673183237E12, 0.0], [1.6673183278E12, 0.0], [1.6673183195E12, 0.0], [1.6673183236E12, 0.0], [1.6673183277E12, 0.0], [1.6673183197E12, 0.0], [1.6673183238E12, 0.0], [1.6673183279E12, 0.0], [1.667318328E12, 0.0], [1.6673183198E12, 0.0], [1.6673183239E12, 0.0], [1.667318324E12, 0.0], [1.6673183281E12, 0.0], [1.6673183199E12, 0.0], [1.6673183201E12, 0.0], [1.6673183242E12, 0.0], [1.6673183283E12, 0.0], [1.66731832E12, 0.0], [1.6673183241E12, 0.0], [1.6673183282E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673183316E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 112.0, "minX": 1.667318317E12, "maxY": 2860.0, "series": [{"data": [[1.6673183182E12, 1228.0], [1.6673183223E12, 1575.0], [1.6673183304E12, 1687.0], [1.6673183181E12, 1124.0], [1.6673183222E12, 1604.0], [1.6673183263E12, 1387.0], [1.6673183224E12, 1577.0], [1.6673183265E12, 1532.0], [1.6673183306E12, 1523.0], [1.6673183183E12, 1226.0], [1.6673183264E12, 1514.0], [1.6673183305E12, 1570.0], [1.6673183184E12, 1288.0], [1.6673183225E12, 2020.0], [1.6673183266E12, 1510.0], [1.6673183307E12, 1940.0], [1.6673183185E12, 1726.0], [1.6673183226E12, 1755.0], [1.6673183267E12, 1531.0], [1.6673183308E12, 1586.0], [1.6673183187E12, 1486.0], [1.6673183228E12, 1762.0], [1.6673183269E12, 1445.0], [1.667318331E12, 1481.0], [1.6673183186E12, 1453.0], [1.6673183227E12, 2860.0], [1.6673183268E12, 1527.0], [1.6673183309E12, 1625.0], [1.6673183188E12, 1566.0], [1.6673183229E12, 1812.0], [1.667318327E12, 1443.0], [1.6673183311E12, 1531.0], [1.6673183312E12, 2603.0], [1.6673183189E12, 1556.0], [1.667318323E12, 1822.0], [1.6673183271E12, 1498.0], [1.6673183191E12, 1522.0], [1.6673183272E12, 1491.0], [1.6673183313E12, 1412.0], [1.667318319E12, 1403.0], [1.6673183231E12, 1682.0], [1.6673183171E12, 304.0], [1.6673183212E12, 1571.0], [1.6673183253E12, 1647.0], [1.6673183294E12, 1512.0], [1.6673183173E12, 533.0], [1.6673183214E12, 1669.0], [1.6673183255E12, 1506.0], [1.6673183172E12, 434.0], [1.6673183213E12, 1564.0], [1.6673183254E12, 1447.0], [1.6673183295E12, 1598.0], [1.6673183256E12, 2712.0], [1.6673183297E12, 1672.0], [1.6673183174E12, 589.0], [1.6673183215E12, 1624.0], [1.6673183296E12, 1654.0], [1.6673183216E12, 1700.0], [1.6673183257E12, 1461.0], [1.6673183298E12, 1610.0], [1.6673183175E12, 734.0], [1.6673183176E12, 822.0], [1.6673183217E12, 1735.0], [1.6673183258E12, 2673.0], [1.6673183299E12, 1695.0], [1.6673183178E12, 916.0], [1.6673183219E12, 1579.0], [1.667318326E12, 1502.0], [1.6673183301E12, 1643.0], [1.6673183177E12, 893.0], [1.6673183218E12, 1535.0], [1.6673183259E12, 1416.0], [1.66731833E12, 1639.0], [1.6673183179E12, 1060.0], [1.667318322E12, 1601.0], [1.6673183261E12, 1641.0], [1.6673183302E12, 1578.0], [1.667318318E12, 1115.0], [1.6673183221E12, 1772.0], [1.6673183262E12, 1497.0], [1.6673183303E12, 1623.0], [1.6673183202E12, 1522.0], [1.6673183243E12, 1713.0], [1.6673183284E12, 1807.0], [1.6673183203E12, 1626.0], [1.6673183244E12, 1570.0], [1.6673183285E12, 1463.0], [1.6673183205E12, 1454.0], [1.6673183246E12, 1660.0], [1.6673183287E12, 1408.0], [1.6673183204E12, 1567.0], [1.6673183245E12, 1701.0], [1.6673183286E12, 1461.0], [1.6673183288E12, 1458.0], [1.6673183206E12, 1474.0], [1.6673183247E12, 1656.0], [1.6673183248E12, 1488.0], [1.6673183289E12, 2474.0], [1.6673183207E12, 2687.0], [1.6673183208E12, 1840.0], [1.6673183249E12, 1674.0], [1.667318329E12, 1577.0], [1.667318321E12, 1690.0], [1.6673183251E12, 1763.0], [1.6673183292E12, 1756.0], [1.6673183209E12, 1679.0], [1.667318325E12, 1627.0], [1.6673183291E12, 1569.0], [1.667318317E12, 195.0], [1.6673183211E12, 1636.0], [1.6673183252E12, 1554.0], [1.6673183293E12, 1584.0], [1.6673183192E12, 1702.0], [1.6673183233E12, 1860.0], [1.6673183274E12, 1373.0], [1.6673183315E12, 1982.0], [1.6673183232E12, 1668.0], [1.6673183273E12, 1449.0], [1.6673183314E12, 1486.0], [1.6673183193E12, 1581.0], [1.6673183234E12, 2113.0], [1.6673183275E12, 1446.0], [1.6673183316E12, 1314.0], [1.6673183194E12, 2296.0], [1.6673183235E12, 1707.0], [1.6673183276E12, 1462.0], [1.6673183196E12, 1494.0], [1.6673183237E12, 2083.0], [1.6673183278E12, 1353.0], [1.6673183195E12, 1516.0], [1.6673183236E12, 1684.0], [1.6673183277E12, 1338.0], [1.6673183197E12, 1530.0], [1.6673183238E12, 1871.0], [1.6673183279E12, 1440.0], [1.667318328E12, 1411.0], [1.6673183198E12, 1613.0], [1.6673183239E12, 1785.0], [1.667318324E12, 1762.0], [1.6673183281E12, 1328.0], [1.6673183199E12, 1514.0], [1.6673183201E12, 1495.0], [1.6673183242E12, 1777.0], [1.6673183283E12, 1510.0], [1.66731832E12, 1469.0], [1.6673183241E12, 1655.0], [1.6673183282E12, 1384.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6673183182E12, 1225.3], [1.6673183223E12, 1575.0], [1.6673183304E12, 1686.7], [1.6673183181E12, 1109.0], [1.6673183222E12, 1586.8], [1.6673183263E12, 1387.0], [1.6673183224E12, 1576.2], [1.6673183265E12, 1499.9], [1.6673183306E12, 1523.0], [1.6673183183E12, 1223.6], [1.6673183264E12, 1473.0], [1.6673183305E12, 1564.0], [1.6673183184E12, 1285.5], [1.6673183225E12, 1884.0], [1.6673183266E12, 1465.9], [1.6673183307E12, 1657.2], [1.6673183185E12, 1499.2000000000003], [1.6673183226E12, 1751.4], [1.6673183267E12, 1531.0], [1.6673183308E12, 1568.9], [1.6673183187E12, 1466.8], [1.6673183228E12, 1732.3000000000002], [1.6673183269E12, 1426.6], [1.667318331E12, 1481.0], [1.6673183186E12, 1452.6], [1.6673183227E12, 2335.5], [1.6673183268E12, 1464.2], [1.6673183309E12, 1622.6], [1.6673183188E12, 1560.4], [1.6673183229E12, 1782.6000000000001], [1.667318327E12, 1406.0], [1.6673183311E12, 1518.0], [1.6673183312E12, 1910.6000000000004], [1.6673183189E12, 1553.2], [1.667318323E12, 1783.6000000000001], [1.6673183271E12, 1486.2], [1.6673183191E12, 1519.9], [1.6673183272E12, 1425.0], [1.6673183313E12, 1364.6000000000001], [1.667318319E12, 1399.0], [1.6673183231E12, 1674.0], [1.6673183171E12, 304.0], [1.6673183212E12, 1568.3], [1.6673183253E12, 1536.6000000000001], [1.6673183294E12, 1512.0], [1.6673183173E12, 533.0], [1.6673183214E12, 1669.0], [1.6673183255E12, 1506.0], [1.6673183172E12, 429.1], [1.6673183213E12, 1556.8], [1.6673183254E12, 1440.5], [1.6673183295E12, 1593.6], [1.6673183256E12, 2345.399999999999], [1.6673183297E12, 1648.2], [1.6673183174E12, 589.0], [1.6673183215E12, 1605.0], [1.6673183296E12, 1606.6000000000001], [1.6673183216E12, 1695.8], [1.6673183257E12, 1460.3], [1.6673183298E12, 1610.0], [1.6673183175E12, 727.6], [1.6673183176E12, 814.8], [1.6673183217E12, 1647.0], [1.6673183258E12, 2667.6], [1.6673183299E12, 1671.0], [1.6673183178E12, 915.2], [1.6673183219E12, 1578.2], [1.667318326E12, 1491.0], [1.6673183301E12, 1615.0], [1.6673183177E12, 886.5], [1.6673183218E12, 1535.0], [1.6673183259E12, 1414.0], [1.66731833E12, 1624.5], [1.6673183179E12, 1059.7], [1.667318322E12, 1596.5], [1.6673183261E12, 1608.0], [1.6673183302E12, 1578.0], [1.667318318E12, 1073.8], [1.6673183221E12, 1770.4], [1.6673183262E12, 1424.0], [1.6673183303E12, 1611.0], [1.6673183202E12, 1522.0], [1.6673183243E12, 1711.2], [1.6673183284E12, 1512.0], [1.6673183203E12, 1548.0], [1.6673183244E12, 1570.0], [1.6673183285E12, 1462.0], [1.6673183205E12, 1453.6], [1.6673183246E12, 1659.1], [1.6673183287E12, 1400.5], [1.6673183204E12, 1561.5], [1.6673183245E12, 1678.8], [1.6673183286E12, 1440.3], [1.6673183288E12, 1415.2], [1.6673183206E12, 1474.0], [1.6673183247E12, 1562.9], [1.6673183248E12, 1483.6], [1.6673183289E12, 2376.0000000000005], [1.6673183207E12, 2202.9999999999995], [1.6673183208E12, 1788.7000000000003], [1.6673183249E12, 1672.0], [1.667318329E12, 1510.2], [1.667318321E12, 1690.0], [1.6673183251E12, 1600.6], [1.6673183292E12, 1692.1000000000001], [1.6673183209E12, 1650.0], [1.667318325E12, 1595.8], [1.6673183291E12, 1555.0], [1.667318317E12, 191.4], [1.6673183211E12, 1610.6000000000001], [1.6673183252E12, 1501.0], [1.6673183293E12, 1514.5], [1.6673183192E12, 1611.0], [1.6673183233E12, 1859.4], [1.6673183274E12, 1356.8], [1.6673183315E12, 1287.0], [1.6673183232E12, 1667.2], [1.6673183273E12, 1434.6], [1.6673183314E12, 1482.0], [1.6673183193E12, 1578.6], [1.6673183234E12, 1983.0], [1.6673183275E12, 1442.4], [1.6673183316E12, 1314.0], [1.6673183194E12, 1882.5], [1.6673183235E12, 1706.4], [1.6673183276E12, 1442.7], [1.6673183196E12, 1479.0], [1.6673183237E12, 2083.0], [1.6673183278E12, 1353.0], [1.6673183195E12, 1510.6], [1.6673183236E12, 1681.3], [1.6673183277E12, 1335.0], [1.6673183197E12, 1483.2], [1.6673183238E12, 1866.5], [1.6673183279E12, 1421.8999999999999], [1.667318328E12, 1403.0], [1.6673183198E12, 1590.6], [1.6673183239E12, 1757.0], [1.667318324E12, 1722.1000000000001], [1.6673183281E12, 1328.0], [1.6673183199E12, 1508.0], [1.6673183201E12, 1495.0], [1.6673183242E12, 1767.9], [1.6673183283E12, 1492.6000000000001], [1.66731832E12, 1465.8], [1.6673183241E12, 1645.4], [1.6673183282E12, 1384.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6673183182E12, 1228.0], [1.6673183223E12, 1575.0], [1.6673183304E12, 1687.0], [1.6673183181E12, 1124.0], [1.6673183222E12, 1604.0], [1.6673183263E12, 1387.0], [1.6673183224E12, 1577.0], [1.6673183265E12, 1532.0], [1.6673183306E12, 1523.0], [1.6673183183E12, 1226.0], [1.6673183264E12, 1514.0], [1.6673183305E12, 1570.0], [1.6673183184E12, 1288.0], [1.6673183225E12, 2020.0], [1.6673183266E12, 1510.0], [1.6673183307E12, 1940.0], [1.6673183185E12, 1726.0], [1.6673183226E12, 1755.0], [1.6673183267E12, 1531.0], [1.6673183308E12, 1586.0], [1.6673183187E12, 1486.0], [1.6673183228E12, 1762.0], [1.6673183269E12, 1445.0], [1.667318331E12, 1481.0], [1.6673183186E12, 1453.0], [1.6673183227E12, 2860.0], [1.6673183268E12, 1527.0], [1.6673183309E12, 1625.0], [1.6673183188E12, 1566.0], [1.6673183229E12, 1812.0], [1.667318327E12, 1443.0], [1.6673183311E12, 1531.0], [1.6673183312E12, 2603.0], [1.6673183189E12, 1556.0], [1.667318323E12, 1822.0], [1.6673183271E12, 1498.0], [1.6673183191E12, 1522.0], [1.6673183272E12, 1491.0], [1.6673183313E12, 1412.0], [1.667318319E12, 1403.0], [1.6673183231E12, 1682.0], [1.6673183171E12, 304.0], [1.6673183212E12, 1571.0], [1.6673183253E12, 1647.0], [1.6673183294E12, 1512.0], [1.6673183173E12, 533.0], [1.6673183214E12, 1669.0], [1.6673183255E12, 1506.0], [1.6673183172E12, 434.0], [1.6673183213E12, 1564.0], [1.6673183254E12, 1447.0], [1.6673183295E12, 1598.0], [1.6673183256E12, 2712.0], [1.6673183297E12, 1672.0], [1.6673183174E12, 589.0], [1.6673183215E12, 1624.0], [1.6673183296E12, 1654.0], [1.6673183216E12, 1700.0], [1.6673183257E12, 1461.0], [1.6673183298E12, 1610.0], [1.6673183175E12, 734.0], [1.6673183176E12, 822.0], [1.6673183217E12, 1735.0], [1.6673183258E12, 2673.0], [1.6673183299E12, 1695.0], [1.6673183178E12, 916.0], [1.6673183219E12, 1579.0], [1.667318326E12, 1502.0], [1.6673183301E12, 1643.0], [1.6673183177E12, 893.0], [1.6673183218E12, 1535.0], [1.6673183259E12, 1416.0], [1.66731833E12, 1639.0], [1.6673183179E12, 1060.0], [1.667318322E12, 1601.0], [1.6673183261E12, 1641.0], [1.6673183302E12, 1578.0], [1.667318318E12, 1115.0], [1.6673183221E12, 1772.0], [1.6673183262E12, 1497.0], [1.6673183303E12, 1623.0], [1.6673183202E12, 1522.0], [1.6673183243E12, 1713.0], [1.6673183284E12, 1807.0], [1.6673183203E12, 1626.0], [1.6673183244E12, 1570.0], [1.6673183285E12, 1463.0], [1.6673183205E12, 1454.0], [1.6673183246E12, 1660.0], [1.6673183287E12, 1408.0], [1.6673183204E12, 1567.0], [1.6673183245E12, 1701.0], [1.6673183286E12, 1461.0], [1.6673183288E12, 1458.0], [1.6673183206E12, 1474.0], [1.6673183247E12, 1656.0], [1.6673183248E12, 1488.0], [1.6673183289E12, 2474.0], [1.6673183207E12, 2687.0], [1.6673183208E12, 1840.0], [1.6673183249E12, 1674.0], [1.667318329E12, 1577.0], [1.667318321E12, 1690.0], [1.6673183251E12, 1763.0], [1.6673183292E12, 1756.0], [1.6673183209E12, 1679.0], [1.667318325E12, 1627.0], [1.6673183291E12, 1569.0], [1.667318317E12, 195.0], [1.6673183211E12, 1636.0], [1.6673183252E12, 1554.0], [1.6673183293E12, 1584.0], [1.6673183192E12, 1702.0], [1.6673183233E12, 1860.0], [1.6673183274E12, 1373.0], [1.6673183315E12, 1982.0], [1.6673183232E12, 1668.0], [1.6673183273E12, 1449.0], [1.6673183314E12, 1486.0], [1.6673183193E12, 1581.0], [1.6673183234E12, 2113.0], [1.6673183275E12, 1446.0], [1.6673183316E12, 1314.0], [1.6673183194E12, 2296.0], [1.6673183235E12, 1707.0], [1.6673183276E12, 1462.0], [1.6673183196E12, 1494.0], [1.6673183237E12, 2083.0], [1.6673183278E12, 1353.0], [1.6673183195E12, 1516.0], [1.6673183236E12, 1684.0], [1.6673183277E12, 1338.0], [1.6673183197E12, 1530.0], [1.6673183238E12, 1871.0], [1.6673183279E12, 1440.0], [1.667318328E12, 1411.0], [1.6673183198E12, 1613.0], [1.6673183239E12, 1785.0], [1.667318324E12, 1762.0], [1.6673183281E12, 1328.0], [1.6673183199E12, 1514.0], [1.6673183201E12, 1495.0], [1.6673183242E12, 1777.0], [1.6673183283E12, 1510.0], [1.66731832E12, 1469.0], [1.6673183241E12, 1655.0], [1.6673183282E12, 1384.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6673183182E12, 1228.0], [1.6673183223E12, 1575.0], [1.6673183304E12, 1687.0], [1.6673183181E12, 1124.0], [1.6673183222E12, 1604.0], [1.6673183263E12, 1387.0], [1.6673183224E12, 1577.0], [1.6673183265E12, 1532.0], [1.6673183306E12, 1523.0], [1.6673183183E12, 1226.0], [1.6673183264E12, 1504.0], [1.6673183305E12, 1570.0], [1.6673183184E12, 1288.0], [1.6673183225E12, 2020.0], [1.6673183266E12, 1510.0], [1.6673183307E12, 1839.9999999999995], [1.6673183185E12, 1726.0], [1.6673183226E12, 1755.0], [1.6673183267E12, 1531.0], [1.6673183308E12, 1586.0], [1.6673183187E12, 1486.0], [1.6673183228E12, 1762.0], [1.6673183269E12, 1445.0], [1.667318331E12, 1481.0], [1.6673183186E12, 1453.0], [1.6673183227E12, 2860.0], [1.6673183268E12, 1519.6499999999999], [1.6673183309E12, 1625.0], [1.6673183188E12, 1566.0], [1.6673183229E12, 1812.0], [1.667318327E12, 1443.0], [1.6673183311E12, 1528.75], [1.6673183312E12, 2603.0], [1.6673183189E12, 1556.0], [1.667318323E12, 1822.0], [1.6673183271E12, 1498.0], [1.6673183191E12, 1522.0], [1.6673183272E12, 1491.0], [1.6673183313E12, 1412.0], [1.667318319E12, 1403.0], [1.6673183231E12, 1682.0], [1.6673183171E12, 304.0], [1.6673183212E12, 1571.0], [1.6673183253E12, 1647.0], [1.6673183294E12, 1512.0], [1.6673183173E12, 533.0], [1.6673183214E12, 1669.0], [1.6673183255E12, 1506.0], [1.6673183172E12, 434.0], [1.6673183213E12, 1564.0], [1.6673183254E12, 1447.0], [1.6673183295E12, 1598.0], [1.6673183256E12, 2710.65], [1.6673183297E12, 1672.0], [1.6673183174E12, 589.0], [1.6673183215E12, 1624.0], [1.6673183296E12, 1651.7], [1.6673183216E12, 1700.0], [1.6673183257E12, 1461.0], [1.6673183298E12, 1610.0], [1.6673183175E12, 734.0], [1.6673183176E12, 822.0], [1.6673183217E12, 1735.0], [1.6673183258E12, 2673.0], [1.6673183299E12, 1691.3999999999999], [1.6673183178E12, 916.0], [1.6673183219E12, 1579.0], [1.667318326E12, 1502.0], [1.6673183301E12, 1643.0], [1.6673183177E12, 893.0], [1.6673183218E12, 1535.0], [1.6673183259E12, 1416.0], [1.66731833E12, 1639.0], [1.6673183179E12, 1060.0], [1.667318322E12, 1601.0], [1.6673183261E12, 1641.0], [1.6673183302E12, 1578.0], [1.667318318E12, 1102.05], [1.6673183221E12, 1772.0], [1.6673183262E12, 1497.0], [1.6673183303E12, 1623.0], [1.6673183202E12, 1522.0], [1.6673183243E12, 1713.0], [1.6673183284E12, 1807.0], [1.6673183203E12, 1612.7999999999997], [1.6673183244E12, 1570.0], [1.6673183285E12, 1463.0], [1.6673183205E12, 1454.0], [1.6673183246E12, 1660.0], [1.6673183287E12, 1408.0], [1.6673183204E12, 1567.0], [1.6673183245E12, 1699.6], [1.6673183286E12, 1461.0], [1.6673183288E12, 1458.0], [1.6673183206E12, 1474.0], [1.6673183247E12, 1656.0], [1.6673183248E12, 1488.0], [1.6673183289E12, 2474.0], [1.6673183207E12, 2687.0], [1.6673183208E12, 1840.0], [1.6673183249E12, 1674.0], [1.667318329E12, 1577.0], [1.667318321E12, 1690.0], [1.6673183251E12, 1763.0], [1.6673183292E12, 1756.0], [1.6673183209E12, 1679.0], [1.667318325E12, 1627.0], [1.6673183291E12, 1569.0], [1.667318317E12, 195.0], [1.6673183211E12, 1634.9], [1.6673183252E12, 1554.0], [1.6673183293E12, 1584.0], [1.6673183192E12, 1702.0], [1.6673183233E12, 1860.0], [1.6673183274E12, 1373.0], [1.6673183315E12, 1880.4499999999985], [1.6673183232E12, 1668.0], [1.6673183273E12, 1449.0], [1.6673183314E12, 1486.0], [1.6673183193E12, 1581.0], [1.6673183234E12, 2113.0], [1.6673183275E12, 1446.0], [1.6673183316E12, 1314.0], [1.6673183194E12, 2296.0], [1.6673183235E12, 1707.0], [1.6673183276E12, 1461.25], [1.6673183196E12, 1494.0], [1.6673183237E12, 2083.0], [1.6673183278E12, 1353.0], [1.6673183195E12, 1516.0], [1.6673183236E12, 1684.0], [1.6673183277E12, 1338.0], [1.6673183197E12, 1530.0], [1.6673183238E12, 1871.0], [1.6673183279E12, 1439.85], [1.667318328E12, 1411.0], [1.6673183198E12, 1613.0], [1.6673183239E12, 1785.0], [1.667318324E12, 1762.0], [1.6673183281E12, 1328.0], [1.6673183199E12, 1514.0], [1.6673183201E12, 1495.0], [1.6673183242E12, 1777.0], [1.6673183283E12, 1509.2], [1.66731832E12, 1469.0], [1.6673183241E12, 1655.0], [1.6673183282E12, 1384.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6673183182E12, 257.0], [1.6673183223E12, 1528.0], [1.6673183304E12, 1548.0], [1.6673183181E12, 1038.0], [1.6673183222E12, 1373.0], [1.6673183263E12, 1282.0], [1.6673183224E12, 1535.0], [1.6673183265E12, 1252.0], [1.6673183306E12, 1414.0], [1.6673183183E12, 1152.0], [1.6673183264E12, 1173.0], [1.6673183305E12, 1387.0], [1.6673183184E12, 1155.0], [1.6673183225E12, 1542.0], [1.6673183266E12, 1276.0], [1.6673183307E12, 1380.0], [1.6673183185E12, 1221.0], [1.6673183226E12, 1548.0], [1.6673183267E12, 1242.0], [1.6673183308E12, 1351.0], [1.6673183187E12, 1392.0], [1.6673183228E12, 1497.0], [1.6673183269E12, 1257.0], [1.667318331E12, 1357.0], [1.6673183186E12, 1332.0], [1.6673183227E12, 1566.0], [1.6673183268E12, 1248.0], [1.6673183309E12, 174.0], [1.6673183188E12, 1342.0], [1.6673183229E12, 1542.0], [1.667318327E12, 1179.0], [1.6673183311E12, 1175.0], [1.6673183312E12, 1227.0], [1.6673183189E12, 1332.0], [1.667318323E12, 1470.0], [1.6673183271E12, 1286.0], [1.6673183191E12, 1257.0], [1.6673183272E12, 1197.0], [1.6673183313E12, 1170.0], [1.667318319E12, 1287.0], [1.6673183231E12, 1584.0], [1.6673183171E12, 226.0], [1.6673183212E12, 1488.0], [1.6673183253E12, 1313.0], [1.6673183294E12, 1454.0], [1.6673183173E12, 383.0], [1.6673183214E12, 1535.0], [1.6673183255E12, 1343.0], [1.6673183172E12, 302.0], [1.6673183213E12, 242.0], [1.6673183254E12, 1222.0], [1.6673183295E12, 1411.0], [1.6673183256E12, 1325.0], [1.6673183297E12, 1391.0], [1.6673183174E12, 508.0], [1.6673183215E12, 1516.0], [1.6673183296E12, 1343.0], [1.6673183216E12, 1519.0], [1.6673183257E12, 1347.0], [1.6673183298E12, 1394.0], [1.6673183175E12, 332.0], [1.6673183176E12, 675.0], [1.6673183217E12, 1464.0], [1.6673183258E12, 1318.0], [1.6673183299E12, 1490.0], [1.6673183178E12, 867.0], [1.6673183219E12, 1531.0], [1.667318326E12, 1355.0], [1.6673183301E12, 231.0], [1.6673183177E12, 811.0], [1.6673183218E12, 1476.0], [1.6673183259E12, 1315.0], [1.66731833E12, 1393.0], [1.6673183179E12, 921.0], [1.667318322E12, 1543.0], [1.6673183261E12, 1262.0], [1.6673183302E12, 1408.0], [1.667318318E12, 969.0], [1.6673183221E12, 1574.0], [1.6673183262E12, 1258.0], [1.6673183303E12, 1413.0], [1.6673183202E12, 1366.0], [1.6673183243E12, 1414.0], [1.6673183284E12, 1186.0], [1.6673183203E12, 1385.0], [1.6673183244E12, 191.0], [1.6673183285E12, 1262.0], [1.6673183205E12, 1399.0], [1.6673183246E12, 1505.0], [1.6673183287E12, 1273.0], [1.6673183204E12, 1311.0], [1.6673183245E12, 1423.0], [1.6673183286E12, 1287.0], [1.6673183288E12, 1254.0], [1.6673183206E12, 1409.0], [1.6673183247E12, 213.0], [1.6673183248E12, 1426.0], [1.6673183289E12, 1259.0], [1.6673183207E12, 1436.0], [1.6673183208E12, 1446.0], [1.6673183249E12, 1376.0], [1.667318329E12, 1372.0], [1.667318321E12, 1457.0], [1.6673183251E12, 1222.0], [1.6673183292E12, 1387.0], [1.6673183209E12, 1372.0], [1.667318325E12, 1359.0], [1.6673183291E12, 1389.0], [1.667318317E12, 144.0], [1.6673183211E12, 1444.0], [1.6673183252E12, 1231.0], [1.6673183293E12, 1404.0], [1.6673183192E12, 1289.0], [1.6673183233E12, 1637.0], [1.6673183274E12, 1225.0], [1.6673183315E12, 294.0], [1.6673183232E12, 1613.0], [1.6673183273E12, 1194.0], [1.6673183314E12, 1050.0], [1.6673183193E12, 1321.0], [1.6673183234E12, 1550.0], [1.6673183275E12, 1220.0], [1.6673183316E12, 112.0], [1.6673183194E12, 221.0], [1.6673183235E12, 1539.0], [1.6673183276E12, 1231.0], [1.6673183196E12, 1295.0], [1.6673183237E12, 1637.0], [1.6673183278E12, 1183.0], [1.6673183195E12, 1279.0], [1.6673183236E12, 1613.0], [1.6673183277E12, 158.0], [1.6673183197E12, 1358.0], [1.6673183238E12, 1575.0], [1.6673183279E12, 1207.0], [1.667318328E12, 1241.0], [1.6673183198E12, 1297.0], [1.6673183239E12, 1586.0], [1.667318324E12, 1580.0], [1.6673183281E12, 1268.0], [1.6673183199E12, 1302.0], [1.6673183201E12, 1280.0], [1.6673183242E12, 1487.0], [1.6673183283E12, 1274.0], [1.66731832E12, 1323.0], [1.6673183241E12, 1551.0], [1.6673183282E12, 1270.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6673183182E12, 1148.0], [1.6673183223E12, 1555.0], [1.6673183304E12, 1613.5], [1.6673183181E12, 1064.0], [1.6673183222E12, 1529.0], [1.6673183263E12, 1354.0], [1.6673183224E12, 1546.0], [1.6673183265E12, 1402.0], [1.6673183306E12, 1499.0], [1.6673183183E12, 1184.5], [1.6673183264E12, 1399.0], [1.6673183305E12, 1520.0], [1.6673183184E12, 1253.5], [1.6673183225E12, 1571.0], [1.6673183266E12, 1365.5], [1.6673183307E12, 1514.0], [1.6673183185E12, 1302.0], [1.6673183226E12, 1597.0], [1.6673183267E12, 1375.0], [1.6673183308E12, 1451.5], [1.6673183187E12, 1415.0], [1.6673183228E12, 1635.5], [1.6673183269E12, 1304.0], [1.667318331E12, 1413.5], [1.6673183186E12, 1391.0], [1.6673183227E12, 1580.5], [1.6673183268E12, 1380.0], [1.6673183309E12, 1362.0], [1.6673183188E12, 1405.0], [1.6673183229E12, 1648.0], [1.667318327E12, 1325.0], [1.6673183311E12, 1394.0], [1.6673183312E12, 1275.0], [1.6673183189E12, 1351.0], [1.667318323E12, 1660.5], [1.6673183271E12, 1338.0], [1.6673183191E12, 1353.0], [1.6673183272E12, 1349.0], [1.6673183313E12, 1200.5], [1.667318319E12, 1375.0], [1.6673183231E12, 1630.0], [1.6673183171E12, 277.0], [1.6673183212E12, 1530.0], [1.6673183253E12, 1395.0], [1.6673183294E12, 1462.5], [1.6673183173E12, 457.0], [1.6673183214E12, 1568.0], [1.6673183255E12, 1374.5], [1.6673183172E12, 348.0], [1.6673183213E12, 1525.0], [1.6673183254E12, 1377.5], [1.6673183295E12, 1506.0], [1.6673183256E12, 1411.5], [1.6673183297E12, 1467.0], [1.6673183174E12, 537.5], [1.6673183215E12, 1542.0], [1.6673183296E12, 1545.5], [1.6673183216E12, 1658.5], [1.6673183257E12, 1420.0], [1.6673183298E12, 1481.0], [1.6673183175E12, 656.0], [1.6673183176E12, 750.0], [1.6673183217E12, 1491.5], [1.6673183258E12, 1403.0], [1.6673183299E12, 1560.5], [1.6673183178E12, 899.0], [1.6673183219E12, 1562.0], [1.667318326E12, 1413.0], [1.6673183301E12, 1513.0], [1.6673183177E12, 841.5], [1.6673183218E12, 1492.0], [1.6673183259E12, 1395.0], [1.66731833E12, 1529.0], [1.6673183179E12, 982.0], [1.667318322E12, 1575.0], [1.6673183261E12, 1394.0], [1.6673183302E12, 1520.0], [1.667318318E12, 1013.0], [1.6673183221E12, 1590.0], [1.6673183262E12, 1362.0], [1.6673183303E12, 1496.0], [1.6673183202E12, 1449.0], [1.6673183243E12, 1575.0], [1.6673183284E12, 1300.0], [1.6673183203E12, 1486.0], [1.6673183244E12, 1541.0], [1.6673183285E12, 1304.0], [1.6673183205E12, 1421.0], [1.6673183246E12, 1588.0], [1.6673183287E12, 1358.0], [1.6673183204E12, 1443.0], [1.6673183245E12, 1528.0], [1.6673183286E12, 1346.5], [1.6673183288E12, 1323.0], [1.6673183206E12, 1469.5], [1.6673183247E12, 1473.5], [1.6673183248E12, 1448.0], [1.6673183289E12, 1356.0], [1.6673183207E12, 1454.0], [1.6673183208E12, 1487.0], [1.6673183249E12, 1429.0], [1.667318329E12, 1395.0], [1.667318321E12, 1497.0], [1.6673183251E12, 1332.0], [1.6673183292E12, 1448.0], [1.6673183209E12, 1471.0], [1.667318325E12, 1392.0], [1.6673183291E12, 1401.5], [1.667318317E12, 171.0], [1.6673183211E12, 1550.5], [1.6673183252E12, 1379.5], [1.6673183293E12, 1437.5], [1.6673183192E12, 1383.5], [1.6673183233E12, 1651.0], [1.6673183274E12, 1287.0], [1.6673183315E12, 1045.5], [1.6673183232E12, 1630.0], [1.6673183273E12, 1273.0], [1.6673183314E12, 1246.5], [1.6673183193E12, 1405.0], [1.6673183234E12, 1687.0], [1.6673183275E12, 1323.0], [1.6673183316E12, 969.5], [1.6673183194E12, 1434.0], [1.6673183235E12, 1696.0], [1.6673183276E12, 1293.5], [1.6673183196E12, 1401.5], [1.6673183237E12, 1690.0], [1.6673183278E12, 1337.0], [1.6673183195E12, 1426.5], [1.6673183236E12, 1649.5], [1.6673183277E12, 1272.5], [1.6673183197E12, 1385.0], [1.6673183238E12, 1693.5], [1.6673183279E12, 1296.5], [1.667318328E12, 1270.0], [1.6673183198E12, 1382.0], [1.6673183239E12, 1688.0], [1.667318324E12, 1616.5], [1.6673183281E12, 1300.0], [1.6673183199E12, 1400.0], [1.6673183201E12, 1445.0], [1.6673183242E12, 1553.0], [1.6673183283E12, 1346.5], [1.66731832E12, 1358.0], [1.6673183241E12, 1587.0], [1.6673183282E12, 1352.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673183316E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 665.5, "minX": 103.0, "maxY": 1668.0, "series": [{"data": [[128.0, 1472.5], [143.0, 1543.0], [139.0, 1361.0], [141.0, 1513.0], [151.0, 1294.5], [145.0, 1395.0], [155.0, 1380.0], [103.0, 1252.0], [110.0, 665.5], [120.0, 1578.0], [125.0, 1456.0], [126.0, 1534.5], [124.0, 1668.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 155.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 664.5, "minX": 103.0, "maxY": 1668.0, "series": [{"data": [[128.0, 1471.5], [143.0, 1543.0], [139.0, 1361.0], [141.0, 1513.0], [151.0, 1294.0], [145.0, 1395.0], [155.0, 1379.0], [103.0, 1252.0], [110.0, 664.5], [120.0, 1578.0], [125.0, 1455.0], [126.0, 1534.0], [124.0, 1668.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 155.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673183168E12, "maxY": 600.0, "series": [{"data": [[1.6673183182E12, 120.0], [1.6673183223E12, 80.0], [1.6673183304E12, 40.0], [1.6673183181E12, 150.0], [1.6673183222E12, 130.0], [1.6673183263E12, 80.0], [1.6673183224E12, 120.0], [1.6673183265E12, 120.0], [1.6673183183E12, 120.0], [1.6673183264E12, 240.0], [1.6673183305E12, 70.0], [1.6673183184E12, 140.0], [1.6673183225E12, 130.0], [1.6673183266E12, 180.0], [1.6673183307E12, 40.0], [1.6673183185E12, 160.0], [1.6673183226E12, 120.0], [1.6673183267E12, 90.0], [1.6673183308E12, 10.0], [1.6673183187E12, 130.0], [1.6673183228E12, 120.0], [1.6673183269E12, 130.0], [1.667318331E12, 10.0], [1.6673183186E12, 130.0], [1.6673183227E12, 140.0], [1.6673183268E12, 220.0], [1.6673183309E12, 10.0], [1.6673183188E12, 170.0], [1.6673183229E12, 110.0], [1.667318327E12, 140.0], [1.6673183311E12, 10.0], [1.6673183312E12, 30.0], [1.6673183189E12, 130.0], [1.667318323E12, 120.0], [1.6673183271E12, 110.0], [1.6673183191E12, 120.0], [1.6673183272E12, 190.0], [1.667318319E12, 130.0], [1.6673183231E12, 110.0], [1.6673183171E12, 350.0], [1.6673183212E12, 120.0], [1.6673183253E12, 150.0], [1.6673183294E12, 40.0], [1.6673183173E12, 180.0], [1.6673183214E12, 40.0], [1.6673183255E12, 80.0], [1.6673183172E12, 350.0], [1.6673183213E12, 150.0], [1.6673183254E12, 140.0], [1.6673183295E12, 110.0], [1.6673183256E12, 220.0], [1.6673183297E12, 90.0], [1.6673183174E12, 80.0], [1.6673183215E12, 190.0], [1.6673183296E12, 190.0], [1.6673183216E12, 120.0], [1.6673183257E12, 100.0], [1.6673183298E12, 60.0], [1.6673183175E12, 130.0], [1.6673183176E12, 150.0], [1.6673183217E12, 140.0], [1.6673183258E12, 150.0], [1.6673183299E12, 160.0], [1.6673183178E12, 110.0], [1.6673183219E12, 130.0], [1.667318326E12, 190.0], [1.6673183301E12, 140.0], [1.6673183177E12, 140.0], [1.6673183218E12, 90.0], [1.6673183259E12, 110.0], [1.66731833E12, 90.0], [1.6673183179E12, 90.0], [1.667318322E12, 120.0], [1.6673183261E12, 120.0], [1.6673183302E12, 30.0], [1.667318318E12, 270.0], [1.6673183221E12, 130.0], [1.6673183262E12, 180.0], [1.6673183303E12, 80.0], [1.6673183202E12, 70.0], [1.6673183243E12, 150.0], [1.6673183284E12, 190.0], [1.6673183203E12, 230.0], [1.6673183244E12, 80.0], [1.6673183285E12, 80.0], [1.6673183205E12, 130.0], [1.6673183246E12, 100.0], [1.6673183287E12, 140.0], [1.6673183204E12, 140.0], [1.6673183245E12, 210.0], [1.6673183286E12, 180.0], [1.6673183288E12, 130.0], [1.6673183206E12, 40.0], [1.6673183247E12, 160.0], [1.6673183248E12, 110.0], [1.6673183289E12, 100.0], [1.6673183207E12, 130.0], [1.6673183208E12, 120.0], [1.6673183249E12, 190.0], [1.667318329E12, 130.0], [1.6673183169E12, 560.0], [1.667318321E12, 80.0], [1.6673183251E12, 170.0], [1.6673183292E12, 110.0], [1.6673183168E12, 600.0], [1.6673183209E12, 190.0], [1.667318325E12, 130.0], [1.6673183291E12, 140.0], [1.667318317E12, 350.0], [1.6673183211E12, 200.0], [1.6673183252E12, 140.0], [1.6673183293E12, 140.0], [1.6673183192E12, 140.0], [1.6673183233E12, 110.0], [1.6673183274E12, 130.0], [1.6673183315E12, 10.0], [1.6673183232E12, 110.0], [1.6673183273E12, 150.0], [1.6673183193E12, 150.0], [1.6673183234E12, 140.0], [1.6673183275E12, 160.0], [1.6673183194E12, 140.0], [1.6673183235E12, 110.0], [1.6673183276E12, 200.0], [1.6673183196E12, 140.0], [1.6673183237E12, 70.0], [1.6673183278E12, 70.0], [1.6673183195E12, 180.0], [1.6673183236E12, 120.0], [1.6673183277E12, 140.0], [1.6673183197E12, 130.0], [1.6673183238E12, 180.0], [1.6673183279E12, 220.0], [1.667318328E12, 170.0], [1.6673183198E12, 170.0], [1.6673183239E12, 170.0], [1.667318324E12, 120.0], [1.6673183281E12, 90.0], [1.6673183199E12, 150.0], [1.6673183201E12, 70.0], [1.6673183242E12, 160.0], [1.6673183283E12, 200.0], [1.66731832E12, 130.0], [1.6673183241E12, 150.0], [1.6673183282E12, 90.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673183315E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.667318317E12, "maxY": 270.0, "series": [{"data": [[1.6673183182E12, 120.0], [1.6673183223E12, 80.0], [1.6673183304E12, 120.0], [1.6673183181E12, 150.0], [1.6673183222E12, 130.0], [1.6673183263E12, 70.0], [1.6673183224E12, 110.0], [1.6673183265E12, 120.0], [1.6673183306E12, 70.0], [1.6673183183E12, 120.0], [1.6673183264E12, 240.0], [1.6673183305E12, 150.0], [1.6673183184E12, 140.0], [1.6673183225E12, 140.0], [1.6673183266E12, 180.0], [1.6673183307E12, 270.0], [1.6673183185E12, 160.0], [1.6673183226E12, 120.0], [1.6673183267E12, 90.0], [1.6673183308E12, 120.0], [1.6673183187E12, 130.0], [1.6673183228E12, 120.0], [1.6673183269E12, 130.0], [1.667318331E12, 80.0], [1.6673183186E12, 130.0], [1.6673183227E12, 140.0], [1.6673183268E12, 220.0], [1.6673183309E12, 150.0], [1.6673183188E12, 170.0], [1.6673183229E12, 110.0], [1.667318327E12, 140.0], [1.6673183311E12, 240.0], [1.6673183312E12, 150.0], [1.6673183189E12, 130.0], [1.667318323E12, 120.0], [1.6673183271E12, 110.0], [1.6673183191E12, 120.0], [1.6673183272E12, 190.0], [1.6673183313E12, 120.0], [1.667318319E12, 130.0], [1.6673183231E12, 110.0], [1.6673183171E12, 90.0], [1.6673183212E12, 120.0], [1.6673183253E12, 150.0], [1.6673183294E12, 40.0], [1.6673183173E12, 80.0], [1.6673183214E12, 40.0], [1.6673183255E12, 80.0], [1.6673183172E12, 100.0], [1.6673183213E12, 150.0], [1.6673183254E12, 140.0], [1.6673183295E12, 110.0], [1.6673183256E12, 220.0], [1.6673183297E12, 110.0], [1.6673183174E12, 80.0], [1.6673183215E12, 190.0], [1.6673183296E12, 200.0], [1.6673183216E12, 120.0], [1.6673183257E12, 100.0], [1.6673183298E12, 70.0], [1.6673183175E12, 130.0], [1.6673183176E12, 150.0], [1.6673183217E12, 140.0], [1.6673183258E12, 150.0], [1.6673183299E12, 220.0], [1.6673183178E12, 110.0], [1.6673183219E12, 130.0], [1.667318326E12, 190.0], [1.6673183301E12, 190.0], [1.6673183177E12, 140.0], [1.6673183218E12, 90.0], [1.6673183259E12, 110.0], [1.66731833E12, 140.0], [1.6673183179E12, 100.0], [1.667318322E12, 120.0], [1.6673183261E12, 120.0], [1.6673183302E12, 30.0], [1.667318318E12, 260.0], [1.6673183221E12, 130.0], [1.6673183262E12, 190.0], [1.6673183303E12, 170.0], [1.6673183202E12, 70.0], [1.6673183243E12, 150.0], [1.6673183284E12, 190.0], [1.6673183203E12, 230.0], [1.6673183244E12, 80.0], [1.6673183285E12, 100.0], [1.6673183205E12, 130.0], [1.6673183246E12, 100.0], [1.6673183287E12, 140.0], [1.6673183204E12, 140.0], [1.6673183245E12, 210.0], [1.6673183286E12, 180.0], [1.6673183288E12, 130.0], [1.6673183206E12, 40.0], [1.6673183247E12, 160.0], [1.6673183248E12, 110.0], [1.6673183289E12, 100.0], [1.6673183207E12, 130.0], [1.6673183208E12, 120.0], [1.6673183249E12, 190.0], [1.667318329E12, 130.0], [1.667318321E12, 80.0], [1.6673183251E12, 170.0], [1.6673183292E12, 120.0], [1.6673183209E12, 190.0], [1.667318325E12, 130.0], [1.6673183291E12, 140.0], [1.667318317E12, 120.0], [1.6673183211E12, 200.0], [1.6673183252E12, 140.0], [1.6673183293E12, 140.0], [1.6673183192E12, 140.0], [1.6673183233E12, 110.0], [1.6673183274E12, 120.0], [1.6673183315E12, 220.0], [1.6673183232E12, 110.0], [1.6673183273E12, 170.0], [1.6673183314E12, 140.0], [1.6673183193E12, 150.0], [1.6673183234E12, 140.0], [1.6673183275E12, 150.0], [1.6673183316E12, 80.0], [1.6673183194E12, 140.0], [1.6673183235E12, 110.0], [1.6673183276E12, 200.0], [1.6673183196E12, 140.0], [1.6673183237E12, 70.0], [1.6673183278E12, 70.0], [1.6673183195E12, 180.0], [1.6673183236E12, 120.0], [1.6673183277E12, 140.0], [1.6673183197E12, 130.0], [1.6673183238E12, 180.0], [1.6673183279E12, 220.0], [1.667318328E12, 170.0], [1.6673183198E12, 170.0], [1.6673183239E12, 170.0], [1.667318324E12, 120.0], [1.6673183281E12, 90.0], [1.6673183199E12, 150.0], [1.6673183201E12, 70.0], [1.6673183242E12, 160.0], [1.6673183283E12, 200.0], [1.66731832E12, 130.0], [1.6673183241E12, 150.0], [1.6673183282E12, 90.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673183316E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.667318317E12, "maxY": 270.0, "series": [{"data": [[1.6673183182E12, 120.0], [1.6673183223E12, 80.0], [1.6673183304E12, 120.0], [1.6673183181E12, 150.0], [1.6673183222E12, 130.0], [1.6673183263E12, 70.0], [1.6673183224E12, 110.0], [1.6673183265E12, 120.0], [1.6673183306E12, 70.0], [1.6673183183E12, 120.0], [1.6673183264E12, 240.0], [1.6673183305E12, 150.0], [1.6673183184E12, 140.0], [1.6673183225E12, 140.0], [1.6673183266E12, 180.0], [1.6673183307E12, 270.0], [1.6673183185E12, 160.0], [1.6673183226E12, 120.0], [1.6673183267E12, 90.0], [1.6673183308E12, 120.0], [1.6673183187E12, 130.0], [1.6673183228E12, 120.0], [1.6673183269E12, 130.0], [1.667318331E12, 80.0], [1.6673183186E12, 130.0], [1.6673183227E12, 140.0], [1.6673183268E12, 220.0], [1.6673183309E12, 150.0], [1.6673183188E12, 170.0], [1.6673183229E12, 110.0], [1.667318327E12, 140.0], [1.6673183311E12, 240.0], [1.6673183312E12, 150.0], [1.6673183189E12, 130.0], [1.667318323E12, 120.0], [1.6673183271E12, 110.0], [1.6673183191E12, 120.0], [1.6673183272E12, 190.0], [1.6673183313E12, 120.0], [1.667318319E12, 130.0], [1.6673183231E12, 110.0], [1.6673183171E12, 90.0], [1.6673183212E12, 120.0], [1.6673183253E12, 150.0], [1.6673183294E12, 40.0], [1.6673183173E12, 80.0], [1.6673183214E12, 40.0], [1.6673183255E12, 80.0], [1.6673183172E12, 100.0], [1.6673183213E12, 150.0], [1.6673183254E12, 140.0], [1.6673183295E12, 110.0], [1.6673183256E12, 220.0], [1.6673183297E12, 110.0], [1.6673183174E12, 80.0], [1.6673183215E12, 190.0], [1.6673183296E12, 200.0], [1.6673183216E12, 120.0], [1.6673183257E12, 100.0], [1.6673183298E12, 70.0], [1.6673183175E12, 130.0], [1.6673183176E12, 150.0], [1.6673183217E12, 140.0], [1.6673183258E12, 150.0], [1.6673183299E12, 220.0], [1.6673183178E12, 110.0], [1.6673183219E12, 130.0], [1.667318326E12, 190.0], [1.6673183301E12, 190.0], [1.6673183177E12, 140.0], [1.6673183218E12, 90.0], [1.6673183259E12, 110.0], [1.66731833E12, 140.0], [1.6673183179E12, 100.0], [1.667318322E12, 120.0], [1.6673183261E12, 120.0], [1.6673183302E12, 30.0], [1.667318318E12, 260.0], [1.6673183221E12, 130.0], [1.6673183262E12, 190.0], [1.6673183303E12, 170.0], [1.6673183202E12, 70.0], [1.6673183243E12, 150.0], [1.6673183284E12, 190.0], [1.6673183203E12, 230.0], [1.6673183244E12, 80.0], [1.6673183285E12, 100.0], [1.6673183205E12, 130.0], [1.6673183246E12, 100.0], [1.6673183287E12, 140.0], [1.6673183204E12, 140.0], [1.6673183245E12, 210.0], [1.6673183286E12, 180.0], [1.6673183288E12, 130.0], [1.6673183206E12, 40.0], [1.6673183247E12, 160.0], [1.6673183248E12, 110.0], [1.6673183289E12, 100.0], [1.6673183207E12, 130.0], [1.6673183208E12, 120.0], [1.6673183249E12, 190.0], [1.667318329E12, 130.0], [1.667318321E12, 80.0], [1.6673183251E12, 170.0], [1.6673183292E12, 120.0], [1.6673183209E12, 190.0], [1.667318325E12, 130.0], [1.6673183291E12, 140.0], [1.667318317E12, 120.0], [1.6673183211E12, 200.0], [1.6673183252E12, 140.0], [1.6673183293E12, 140.0], [1.6673183192E12, 140.0], [1.6673183233E12, 110.0], [1.6673183274E12, 120.0], [1.6673183315E12, 220.0], [1.6673183232E12, 110.0], [1.6673183273E12, 170.0], [1.6673183314E12, 140.0], [1.6673183193E12, 150.0], [1.6673183234E12, 140.0], [1.6673183275E12, 150.0], [1.6673183316E12, 80.0], [1.6673183194E12, 140.0], [1.6673183235E12, 110.0], [1.6673183276E12, 200.0], [1.6673183196E12, 140.0], [1.6673183237E12, 70.0], [1.6673183278E12, 70.0], [1.6673183195E12, 180.0], [1.6673183236E12, 120.0], [1.6673183277E12, 140.0], [1.6673183197E12, 130.0], [1.6673183238E12, 180.0], [1.6673183279E12, 220.0], [1.667318328E12, 170.0], [1.6673183198E12, 170.0], [1.6673183239E12, 170.0], [1.667318324E12, 120.0], [1.6673183281E12, 90.0], [1.6673183199E12, 150.0], [1.6673183201E12, 70.0], [1.6673183242E12, 160.0], [1.6673183283E12, 200.0], [1.66731832E12, 130.0], [1.6673183241E12, 150.0], [1.6673183282E12, 90.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673183316E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.667318317E12, "maxY": 270.0, "series": [{"data": [[1.6673183182E12, 120.0], [1.6673183223E12, 80.0], [1.6673183304E12, 120.0], [1.6673183181E12, 150.0], [1.6673183222E12, 130.0], [1.6673183263E12, 70.0], [1.6673183224E12, 110.0], [1.6673183265E12, 120.0], [1.6673183306E12, 70.0], [1.6673183183E12, 120.0], [1.6673183264E12, 240.0], [1.6673183305E12, 150.0], [1.6673183184E12, 140.0], [1.6673183225E12, 140.0], [1.6673183266E12, 180.0], [1.6673183307E12, 270.0], [1.6673183185E12, 160.0], [1.6673183226E12, 120.0], [1.6673183267E12, 90.0], [1.6673183308E12, 120.0], [1.6673183187E12, 130.0], [1.6673183228E12, 120.0], [1.6673183269E12, 130.0], [1.667318331E12, 80.0], [1.6673183186E12, 130.0], [1.6673183227E12, 140.0], [1.6673183268E12, 220.0], [1.6673183309E12, 150.0], [1.6673183188E12, 170.0], [1.6673183229E12, 110.0], [1.667318327E12, 140.0], [1.6673183311E12, 240.0], [1.6673183312E12, 150.0], [1.6673183189E12, 130.0], [1.667318323E12, 120.0], [1.6673183271E12, 110.0], [1.6673183191E12, 120.0], [1.6673183272E12, 190.0], [1.6673183313E12, 120.0], [1.667318319E12, 130.0], [1.6673183231E12, 110.0], [1.6673183171E12, 90.0], [1.6673183212E12, 120.0], [1.6673183253E12, 150.0], [1.6673183294E12, 40.0], [1.6673183173E12, 80.0], [1.6673183214E12, 40.0], [1.6673183255E12, 80.0], [1.6673183172E12, 100.0], [1.6673183213E12, 150.0], [1.6673183254E12, 140.0], [1.6673183295E12, 110.0], [1.6673183256E12, 220.0], [1.6673183297E12, 110.0], [1.6673183174E12, 80.0], [1.6673183215E12, 190.0], [1.6673183296E12, 200.0], [1.6673183216E12, 120.0], [1.6673183257E12, 100.0], [1.6673183298E12, 70.0], [1.6673183175E12, 130.0], [1.6673183176E12, 150.0], [1.6673183217E12, 140.0], [1.6673183258E12, 150.0], [1.6673183299E12, 220.0], [1.6673183178E12, 110.0], [1.6673183219E12, 130.0], [1.667318326E12, 190.0], [1.6673183301E12, 190.0], [1.6673183177E12, 140.0], [1.6673183218E12, 90.0], [1.6673183259E12, 110.0], [1.66731833E12, 140.0], [1.6673183179E12, 100.0], [1.667318322E12, 120.0], [1.6673183261E12, 120.0], [1.6673183302E12, 30.0], [1.667318318E12, 260.0], [1.6673183221E12, 130.0], [1.6673183262E12, 190.0], [1.6673183303E12, 170.0], [1.6673183202E12, 70.0], [1.6673183243E12, 150.0], [1.6673183284E12, 190.0], [1.6673183203E12, 230.0], [1.6673183244E12, 80.0], [1.6673183285E12, 100.0], [1.6673183205E12, 130.0], [1.6673183246E12, 100.0], [1.6673183287E12, 140.0], [1.6673183204E12, 140.0], [1.6673183245E12, 210.0], [1.6673183286E12, 180.0], [1.6673183288E12, 130.0], [1.6673183206E12, 40.0], [1.6673183247E12, 160.0], [1.6673183248E12, 110.0], [1.6673183289E12, 100.0], [1.6673183207E12, 130.0], [1.6673183208E12, 120.0], [1.6673183249E12, 190.0], [1.667318329E12, 130.0], [1.667318321E12, 80.0], [1.6673183251E12, 170.0], [1.6673183292E12, 120.0], [1.6673183209E12, 190.0], [1.667318325E12, 130.0], [1.6673183291E12, 140.0], [1.667318317E12, 120.0], [1.6673183211E12, 200.0], [1.6673183252E12, 140.0], [1.6673183293E12, 140.0], [1.6673183192E12, 140.0], [1.6673183233E12, 110.0], [1.6673183274E12, 120.0], [1.6673183315E12, 220.0], [1.6673183232E12, 110.0], [1.6673183273E12, 170.0], [1.6673183314E12, 140.0], [1.6673183193E12, 150.0], [1.6673183234E12, 140.0], [1.6673183275E12, 150.0], [1.6673183316E12, 80.0], [1.6673183194E12, 140.0], [1.6673183235E12, 110.0], [1.6673183276E12, 200.0], [1.6673183196E12, 140.0], [1.6673183237E12, 70.0], [1.6673183278E12, 70.0], [1.6673183195E12, 180.0], [1.6673183236E12, 120.0], [1.6673183277E12, 140.0], [1.6673183197E12, 130.0], [1.6673183238E12, 180.0], [1.6673183279E12, 220.0], [1.667318328E12, 170.0], [1.6673183198E12, 170.0], [1.6673183239E12, 170.0], [1.667318324E12, 120.0], [1.6673183281E12, 90.0], [1.6673183199E12, 150.0], [1.6673183201E12, 70.0], [1.6673183242E12, 160.0], [1.6673183283E12, 200.0], [1.66731832E12, 130.0], [1.6673183241E12, 150.0], [1.6673183282E12, 90.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673183316E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

