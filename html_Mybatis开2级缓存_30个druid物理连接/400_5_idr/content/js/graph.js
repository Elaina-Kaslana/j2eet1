/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 172.0, "minX": 0.0, "maxY": 5094.0, "series": [{"data": [[0.0, 172.0], [0.1, 184.0], [0.2, 197.0], [0.3, 234.0], [0.4, 243.0], [0.5, 247.0], [0.6, 277.0], [0.7, 280.0], [0.8, 290.0], [0.9, 312.0], [1.0, 324.0], [1.1, 353.0], [1.2, 376.0], [1.3, 411.0], [1.4, 442.0], [1.5, 453.0], [1.6, 478.0], [1.7, 487.0], [1.8, 501.0], [1.9, 505.0], [2.0, 506.0], [2.1, 520.0], [2.2, 538.0], [2.3, 543.0], [2.4, 552.0], [2.5, 578.0], [2.6, 580.0], [2.7, 619.0], [2.8, 624.0], [2.9, 633.0], [3.0, 641.0], [3.1, 654.0], [3.2, 666.0], [3.3, 674.0], [3.4, 688.0], [3.5, 696.0], [3.6, 718.0], [3.7, 721.0], [3.8, 737.0], [3.9, 749.0], [4.0, 779.0], [4.1, 789.0], [4.2, 816.0], [4.3, 833.0], [4.4, 841.0], [4.5, 846.0], [4.6, 854.0], [4.7, 890.0], [4.8, 926.0], [4.9, 929.0], [5.0, 939.0], [5.1, 954.0], [5.2, 967.0], [5.3, 976.0], [5.4, 979.0], [5.5, 981.0], [5.6, 986.0], [5.7, 1000.0], [5.8, 1007.0], [5.9, 1028.0], [6.0, 1030.0], [6.1, 1047.0], [6.2, 1081.0], [6.3, 1102.0], [6.4, 1128.0], [6.5, 1146.0], [6.6, 1161.0], [6.7, 1165.0], [6.8, 1179.0], [6.9, 1198.0], [7.0, 1209.0], [7.1, 1226.0], [7.2, 1242.0], [7.3, 1252.0], [7.4, 1257.0], [7.5, 1266.0], [7.6, 1282.0], [7.7, 1291.0], [7.8, 1303.0], [7.9, 1317.0], [8.0, 1326.0], [8.1, 1328.0], [8.2, 1339.0], [8.3, 1350.0], [8.4, 1368.0], [8.5, 1371.0], [8.6, 1401.0], [8.7, 1412.0], [8.8, 1418.0], [8.9, 1422.0], [9.0, 1426.0], [9.1, 1432.0], [9.2, 1435.0], [9.3, 1444.0], [9.4, 1450.0], [9.5, 1452.0], [9.6, 1455.0], [9.7, 1466.0], [9.8, 1467.0], [9.9, 1473.0], [10.0, 1479.0], [10.1, 1483.0], [10.2, 1493.0], [10.3, 1502.0], [10.4, 1506.0], [10.5, 1508.0], [10.6, 1511.0], [10.7, 1517.0], [10.8, 1526.0], [10.9, 1531.0], [11.0, 1533.0], [11.1, 1535.0], [11.2, 1538.0], [11.3, 1542.0], [11.4, 1549.0], [11.5, 1551.0], [11.6, 1552.0], [11.7, 1558.0], [11.8, 1571.0], [11.9, 1573.0], [12.0, 1592.0], [12.1, 1594.0], [12.2, 1596.0], [12.3, 1611.0], [12.4, 1616.0], [12.5, 1619.0], [12.6, 1633.0], [12.7, 1639.0], [12.8, 1656.0], [12.9, 1659.0], [13.0, 1664.0], [13.1, 1667.0], [13.2, 1682.0], [13.3, 1692.0], [13.4, 1698.0], [13.5, 1704.0], [13.6, 1721.0], [13.7, 1728.0], [13.8, 1739.0], [13.9, 1752.0], [14.0, 1759.0], [14.1, 1762.0], [14.2, 1763.0], [14.3, 1768.0], [14.4, 1770.0], [14.5, 1775.0], [14.6, 1788.0], [14.7, 1804.0], [14.8, 1815.0], [14.9, 1818.0], [15.0, 1826.0], [15.1, 1833.0], [15.2, 1838.0], [15.3, 1844.0], [15.4, 1849.0], [15.5, 1850.0], [15.6, 1852.0], [15.7, 1855.0], [15.8, 1855.0], [15.9, 1856.0], [16.0, 1863.0], [16.1, 1869.0], [16.2, 1872.0], [16.3, 1875.0], [16.4, 1891.0], [16.5, 1895.0], [16.6, 1897.0], [16.7, 1899.0], [16.8, 1912.0], [16.9, 1914.0], [17.0, 1931.0], [17.1, 1933.0], [17.2, 1935.0], [17.3, 1940.0], [17.4, 1949.0], [17.5, 1951.0], [17.6, 1953.0], [17.7, 1955.0], [17.8, 1957.0], [17.9, 1961.0], [18.0, 1963.0], [18.1, 1968.0], [18.2, 1969.0], [18.3, 1970.0], [18.4, 1971.0], [18.5, 1971.0], [18.6, 1973.0], [18.7, 1976.0], [18.8, 1977.0], [18.9, 1978.0], [19.0, 1980.0], [19.1, 1982.0], [19.2, 1982.0], [19.3, 1982.0], [19.4, 1983.0], [19.5, 1987.0], [19.6, 1988.0], [19.7, 1989.0], [19.8, 1990.0], [19.9, 1994.0], [20.0, 1995.0], [20.1, 1997.0], [20.2, 1998.0], [20.3, 2001.0], [20.4, 2003.0], [20.5, 2004.0], [20.6, 2005.0], [20.7, 2007.0], [20.8, 2010.0], [20.9, 2012.0], [21.0, 2013.0], [21.1, 2015.0], [21.2, 2016.0], [21.3, 2017.0], [21.4, 2018.0], [21.5, 2020.0], [21.6, 2021.0], [21.7, 2023.0], [21.8, 2025.0], [21.9, 2027.0], [22.0, 2028.0], [22.1, 2029.0], [22.2, 2030.0], [22.3, 2032.0], [22.4, 2035.0], [22.5, 2037.0], [22.6, 2042.0], [22.7, 2047.0], [22.8, 2047.0], [22.9, 2048.0], [23.0, 2050.0], [23.1, 2053.0], [23.2, 2055.0], [23.3, 2056.0], [23.4, 2060.0], [23.5, 2060.0], [23.6, 2061.0], [23.7, 2064.0], [23.8, 2064.0], [23.9, 2066.0], [24.0, 2070.0], [24.1, 2074.0], [24.2, 2076.0], [24.3, 2078.0], [24.4, 2081.0], [24.5, 2084.0], [24.6, 2088.0], [24.7, 2090.0], [24.8, 2092.0], [24.9, 2093.0], [25.0, 2095.0], [25.1, 2103.0], [25.2, 2104.0], [25.3, 2108.0], [25.4, 2111.0], [25.5, 2113.0], [25.6, 2114.0], [25.7, 2122.0], [25.8, 2124.0], [25.9, 2127.0], [26.0, 2130.0], [26.1, 2134.0], [26.2, 2142.0], [26.3, 2144.0], [26.4, 2150.0], [26.5, 2152.0], [26.6, 2157.0], [26.7, 2163.0], [26.8, 2171.0], [26.9, 2176.0], [27.0, 2176.0], [27.1, 2182.0], [27.2, 2191.0], [27.3, 2194.0], [27.4, 2213.0], [27.5, 2231.0], [27.6, 2236.0], [27.7, 2269.0], [27.8, 2271.0], [27.9, 2292.0], [28.0, 2300.0], [28.1, 2317.0], [28.2, 2326.0], [28.3, 2355.0], [28.4, 2359.0], [28.5, 2397.0], [28.6, 2431.0], [28.7, 2471.0], [28.8, 2515.0], [28.9, 2565.0], [29.0, 2598.0], [29.1, 2603.0], [29.2, 2625.0], [29.3, 2629.0], [29.4, 2634.0], [29.5, 2635.0], [29.6, 2637.0], [29.7, 2639.0], [29.8, 2640.0], [29.9, 2642.0], [30.0, 2646.0], [30.1, 2647.0], [30.2, 2652.0], [30.3, 2653.0], [30.4, 2656.0], [30.5, 2659.0], [30.6, 2660.0], [30.7, 2661.0], [30.8, 2662.0], [30.9, 2663.0], [31.0, 2664.0], [31.1, 2666.0], [31.2, 2668.0], [31.3, 2669.0], [31.4, 2672.0], [31.5, 2673.0], [31.6, 2673.0], [31.7, 2675.0], [31.8, 2675.0], [31.9, 2675.0], [32.0, 2675.0], [32.1, 2677.0], [32.2, 2677.0], [32.3, 2677.0], [32.4, 2677.0], [32.5, 2678.0], [32.6, 2679.0], [32.7, 2680.0], [32.8, 2681.0], [32.9, 2681.0], [33.0, 2682.0], [33.1, 2683.0], [33.2, 2684.0], [33.3, 2687.0], [33.4, 2687.0], [33.5, 2688.0], [33.6, 2690.0], [33.7, 2690.0], [33.8, 2691.0], [33.9, 2692.0], [34.0, 2693.0], [34.1, 2693.0], [34.2, 2694.0], [34.3, 2694.0], [34.4, 2696.0], [34.5, 2697.0], [34.6, 2698.0], [34.7, 2699.0], [34.8, 2701.0], [34.9, 2701.0], [35.0, 2703.0], [35.1, 2703.0], [35.2, 2704.0], [35.3, 2704.0], [35.4, 2704.0], [35.5, 2706.0], [35.6, 2707.0], [35.7, 2707.0], [35.8, 2708.0], [35.9, 2708.0], [36.0, 2708.0], [36.1, 2709.0], [36.2, 2711.0], [36.3, 2711.0], [36.4, 2712.0], [36.5, 2713.0], [36.6, 2714.0], [36.7, 2714.0], [36.8, 2714.0], [36.9, 2715.0], [37.0, 2716.0], [37.1, 2718.0], [37.2, 2718.0], [37.3, 2720.0], [37.4, 2721.0], [37.5, 2722.0], [37.6, 2723.0], [37.7, 2723.0], [37.8, 2723.0], [37.9, 2724.0], [38.0, 2725.0], [38.1, 2725.0], [38.2, 2725.0], [38.3, 2726.0], [38.4, 2727.0], [38.5, 2727.0], [38.6, 2729.0], [38.7, 2729.0], [38.8, 2730.0], [38.9, 2731.0], [39.0, 2732.0], [39.1, 2732.0], [39.2, 2733.0], [39.3, 2734.0], [39.4, 2735.0], [39.5, 2736.0], [39.6, 2738.0], [39.7, 2739.0], [39.8, 2740.0], [39.9, 2741.0], [40.0, 2741.0], [40.1, 2741.0], [40.2, 2743.0], [40.3, 2744.0], [40.4, 2745.0], [40.5, 2745.0], [40.6, 2746.0], [40.7, 2747.0], [40.8, 2747.0], [40.9, 2749.0], [41.0, 2750.0], [41.1, 2750.0], [41.2, 2751.0], [41.3, 2752.0], [41.4, 2753.0], [41.5, 2755.0], [41.6, 2755.0], [41.7, 2755.0], [41.8, 2756.0], [41.9, 2757.0], [42.0, 2757.0], [42.1, 2758.0], [42.2, 2759.0], [42.3, 2760.0], [42.4, 2760.0], [42.5, 2761.0], [42.6, 2761.0], [42.7, 2761.0], [42.8, 2763.0], [42.9, 2764.0], [43.0, 2764.0], [43.1, 2766.0], [43.2, 2767.0], [43.3, 2768.0], [43.4, 2769.0], [43.5, 2770.0], [43.6, 2771.0], [43.7, 2772.0], [43.8, 2773.0], [43.9, 2773.0], [44.0, 2773.0], [44.1, 2774.0], [44.2, 2776.0], [44.3, 2776.0], [44.4, 2777.0], [44.5, 2778.0], [44.6, 2778.0], [44.7, 2779.0], [44.8, 2779.0], [44.9, 2781.0], [45.0, 2782.0], [45.1, 2782.0], [45.2, 2784.0], [45.3, 2785.0], [45.4, 2786.0], [45.5, 2787.0], [45.6, 2789.0], [45.7, 2791.0], [45.8, 2792.0], [45.9, 2792.0], [46.0, 2793.0], [46.1, 2794.0], [46.2, 2794.0], [46.3, 2794.0], [46.4, 2795.0], [46.5, 2797.0], [46.6, 2798.0], [46.7, 2799.0], [46.8, 2799.0], [46.9, 2800.0], [47.0, 2800.0], [47.1, 2800.0], [47.2, 2800.0], [47.3, 2801.0], [47.4, 2802.0], [47.5, 2802.0], [47.6, 2803.0], [47.7, 2805.0], [47.8, 2806.0], [47.9, 2807.0], [48.0, 2808.0], [48.1, 2809.0], [48.2, 2810.0], [48.3, 2810.0], [48.4, 2811.0], [48.5, 2812.0], [48.6, 2813.0], [48.7, 2813.0], [48.8, 2813.0], [48.9, 2814.0], [49.0, 2814.0], [49.1, 2816.0], [49.2, 2817.0], [49.3, 2817.0], [49.4, 2818.0], [49.5, 2819.0], [49.6, 2819.0], [49.7, 2820.0], [49.8, 2821.0], [49.9, 2822.0], [50.0, 2822.0], [50.1, 2822.0], [50.2, 2823.0], [50.3, 2824.0], [50.4, 2825.0], [50.5, 2826.0], [50.6, 2827.0], [50.7, 2828.0], [50.8, 2829.0], [50.9, 2829.0], [51.0, 2830.0], [51.1, 2831.0], [51.2, 2832.0], [51.3, 2833.0], [51.4, 2833.0], [51.5, 2834.0], [51.6, 2834.0], [51.7, 2835.0], [51.8, 2836.0], [51.9, 2836.0], [52.0, 2837.0], [52.1, 2838.0], [52.2, 2839.0], [52.3, 2840.0], [52.4, 2841.0], [52.5, 2842.0], [52.6, 2843.0], [52.7, 2844.0], [52.8, 2845.0], [52.9, 2845.0], [53.0, 2846.0], [53.1, 2847.0], [53.2, 2847.0], [53.3, 2848.0], [53.4, 2848.0], [53.5, 2849.0], [53.6, 2849.0], [53.7, 2851.0], [53.8, 2852.0], [53.9, 2852.0], [54.0, 2854.0], [54.1, 2855.0], [54.2, 2856.0], [54.3, 2856.0], [54.4, 2858.0], [54.5, 2859.0], [54.6, 2859.0], [54.7, 2861.0], [54.8, 2861.0], [54.9, 2861.0], [55.0, 2863.0], [55.1, 2865.0], [55.2, 2866.0], [55.3, 2867.0], [55.4, 2867.0], [55.5, 2870.0], [55.6, 2872.0], [55.7, 2874.0], [55.8, 2874.0], [55.9, 2875.0], [56.0, 2875.0], [56.1, 2876.0], [56.2, 2876.0], [56.3, 2877.0], [56.4, 2879.0], [56.5, 2880.0], [56.6, 2880.0], [56.7, 2880.0], [56.8, 2881.0], [56.9, 2882.0], [57.0, 2883.0], [57.1, 2883.0], [57.2, 2885.0], [57.3, 2886.0], [57.4, 2886.0], [57.5, 2887.0], [57.6, 2887.0], [57.7, 2888.0], [57.8, 2889.0], [57.9, 2890.0], [58.0, 2890.0], [58.1, 2891.0], [58.2, 2893.0], [58.3, 2894.0], [58.4, 2895.0], [58.5, 2896.0], [58.6, 2896.0], [58.7, 2897.0], [58.8, 2898.0], [58.9, 2898.0], [59.0, 2899.0], [59.1, 2900.0], [59.2, 2902.0], [59.3, 2903.0], [59.4, 2904.0], [59.5, 2904.0], [59.6, 2905.0], [59.7, 2906.0], [59.8, 2907.0], [59.9, 2907.0], [60.0, 2908.0], [60.1, 2908.0], [60.2, 2909.0], [60.3, 2911.0], [60.4, 2912.0], [60.5, 2912.0], [60.6, 2912.0], [60.7, 2914.0], [60.8, 2914.0], [60.9, 2914.0], [61.0, 2915.0], [61.1, 2915.0], [61.2, 2915.0], [61.3, 2916.0], [61.4, 2917.0], [61.5, 2917.0], [61.6, 2919.0], [61.7, 2920.0], [61.8, 2921.0], [61.9, 2921.0], [62.0, 2921.0], [62.1, 2923.0], [62.2, 2923.0], [62.3, 2923.0], [62.4, 2924.0], [62.5, 2924.0], [62.6, 2924.0], [62.7, 2924.0], [62.8, 2925.0], [62.9, 2926.0], [63.0, 2926.0], [63.1, 2927.0], [63.2, 2927.0], [63.3, 2927.0], [63.4, 2928.0], [63.5, 2929.0], [63.6, 2929.0], [63.7, 2930.0], [63.8, 2930.0], [63.9, 2931.0], [64.0, 2931.0], [64.1, 2931.0], [64.2, 2931.0], [64.3, 2932.0], [64.4, 2932.0], [64.5, 2932.0], [64.6, 2932.0], [64.7, 2933.0], [64.8, 2933.0], [64.9, 2934.0], [65.0, 2934.0], [65.1, 2935.0], [65.2, 2936.0], [65.3, 2937.0], [65.4, 2937.0], [65.5, 2938.0], [65.6, 2938.0], [65.7, 2939.0], [65.8, 2939.0], [65.9, 2940.0], [66.0, 2942.0], [66.1, 2942.0], [66.2, 2943.0], [66.3, 2943.0], [66.4, 2944.0], [66.5, 2944.0], [66.6, 2944.0], [66.7, 2945.0], [66.8, 2946.0], [66.9, 2947.0], [67.0, 2947.0], [67.1, 2948.0], [67.2, 2948.0], [67.3, 2949.0], [67.4, 2950.0], [67.5, 2951.0], [67.6, 2952.0], [67.7, 2952.0], [67.8, 2953.0], [67.9, 2953.0], [68.0, 2953.0], [68.1, 2954.0], [68.2, 2954.0], [68.3, 2954.0], [68.4, 2955.0], [68.5, 2956.0], [68.6, 2956.0], [68.7, 2957.0], [68.8, 2958.0], [68.9, 2959.0], [69.0, 2960.0], [69.1, 2960.0], [69.2, 2960.0], [69.3, 2961.0], [69.4, 2961.0], [69.5, 2962.0], [69.6, 2962.0], [69.7, 2963.0], [69.8, 2964.0], [69.9, 2965.0], [70.0, 2965.0], [70.1, 2966.0], [70.2, 2968.0], [70.3, 2969.0], [70.4, 2969.0], [70.5, 2970.0], [70.6, 2970.0], [70.7, 2971.0], [70.8, 2972.0], [70.9, 2973.0], [71.0, 2973.0], [71.1, 2974.0], [71.2, 2976.0], [71.3, 2976.0], [71.4, 2977.0], [71.5, 2977.0], [71.6, 2978.0], [71.7, 2978.0], [71.8, 2978.0], [71.9, 2979.0], [72.0, 2981.0], [72.1, 2982.0], [72.2, 2983.0], [72.3, 2984.0], [72.4, 2984.0], [72.5, 2985.0], [72.6, 2985.0], [72.7, 2986.0], [72.8, 2986.0], [72.9, 2986.0], [73.0, 2988.0], [73.1, 2989.0], [73.2, 2989.0], [73.3, 2989.0], [73.4, 2990.0], [73.5, 2990.0], [73.6, 2991.0], [73.7, 2992.0], [73.8, 2993.0], [73.9, 2994.0], [74.0, 2995.0], [74.1, 2995.0], [74.2, 2996.0], [74.3, 2997.0], [74.4, 2997.0], [74.5, 2998.0], [74.6, 2999.0], [74.7, 2999.0], [74.8, 3000.0], [74.9, 3001.0], [75.0, 3002.0], [75.1, 3004.0], [75.2, 3006.0], [75.3, 3006.0], [75.4, 3007.0], [75.5, 3007.0], [75.6, 3008.0], [75.7, 3009.0], [75.8, 3010.0], [75.9, 3011.0], [76.0, 3011.0], [76.1, 3013.0], [76.2, 3014.0], [76.3, 3014.0], [76.4, 3015.0], [76.5, 3018.0], [76.6, 3019.0], [76.7, 3020.0], [76.8, 3022.0], [76.9, 3024.0], [77.0, 3025.0], [77.1, 3025.0], [77.2, 3026.0], [77.3, 3027.0], [77.4, 3028.0], [77.5, 3030.0], [77.6, 3031.0], [77.7, 3032.0], [77.8, 3033.0], [77.9, 3033.0], [78.0, 3034.0], [78.1, 3036.0], [78.2, 3037.0], [78.3, 3039.0], [78.4, 3039.0], [78.5, 3042.0], [78.6, 3042.0], [78.7, 3045.0], [78.8, 3049.0], [78.9, 3050.0], [79.0, 3053.0], [79.1, 3054.0], [79.2, 3057.0], [79.3, 3058.0], [79.4, 3064.0], [79.5, 3067.0], [79.6, 3070.0], [79.7, 3072.0], [79.8, 3073.0], [79.9, 3077.0], [80.0, 3078.0], [80.1, 3079.0], [80.2, 3082.0], [80.3, 3086.0], [80.4, 3088.0], [80.5, 3091.0], [80.6, 3097.0], [80.7, 3099.0], [80.8, 3101.0], [80.9, 3102.0], [81.0, 3103.0], [81.1, 3105.0], [81.2, 3107.0], [81.3, 3107.0], [81.4, 3108.0], [81.5, 3111.0], [81.6, 3113.0], [81.7, 3115.0], [81.8, 3116.0], [81.9, 3116.0], [82.0, 3117.0], [82.1, 3119.0], [82.2, 3120.0], [82.3, 3121.0], [82.4, 3126.0], [82.5, 3127.0], [82.6, 3128.0], [82.7, 3128.0], [82.8, 3129.0], [82.9, 3130.0], [83.0, 3132.0], [83.1, 3134.0], [83.2, 3135.0], [83.3, 3136.0], [83.4, 3136.0], [83.5, 3137.0], [83.6, 3138.0], [83.7, 3140.0], [83.8, 3140.0], [83.9, 3141.0], [84.0, 3142.0], [84.1, 3143.0], [84.2, 3143.0], [84.3, 3144.0], [84.4, 3145.0], [84.5, 3149.0], [84.6, 3150.0], [84.7, 3151.0], [84.8, 3153.0], [84.9, 3154.0], [85.0, 3155.0], [85.1, 3155.0], [85.2, 3158.0], [85.3, 3159.0], [85.4, 3159.0], [85.5, 3160.0], [85.6, 3161.0], [85.7, 3162.0], [85.8, 3162.0], [85.9, 3164.0], [86.0, 3165.0], [86.1, 3166.0], [86.2, 3167.0], [86.3, 3168.0], [86.4, 3169.0], [86.5, 3169.0], [86.6, 3169.0], [86.7, 3170.0], [86.8, 3172.0], [86.9, 3173.0], [87.0, 3173.0], [87.1, 3174.0], [87.2, 3175.0], [87.3, 3176.0], [87.4, 3176.0], [87.5, 3177.0], [87.6, 3179.0], [87.7, 3182.0], [87.8, 3182.0], [87.9, 3183.0], [88.0, 3184.0], [88.1, 3184.0], [88.2, 3185.0], [88.3, 3186.0], [88.4, 3187.0], [88.5, 3188.0], [88.6, 3189.0], [88.7, 3190.0], [88.8, 3191.0], [88.9, 3192.0], [89.0, 3196.0], [89.1, 3196.0], [89.2, 3197.0], [89.3, 3199.0], [89.4, 3200.0], [89.5, 3201.0], [89.6, 3205.0], [89.7, 3206.0], [89.8, 3212.0], [89.9, 3215.0], [90.0, 3218.0], [90.1, 3221.0], [90.2, 3227.0], [90.3, 3230.0], [90.4, 3233.0], [90.5, 3241.0], [90.6, 3244.0], [90.7, 3251.0], [90.8, 3251.0], [90.9, 3259.0], [91.0, 3264.0], [91.1, 3265.0], [91.2, 3275.0], [91.3, 3282.0], [91.4, 3302.0], [91.5, 3306.0], [91.6, 3308.0], [91.7, 3312.0], [91.8, 3318.0], [91.9, 3322.0], [92.0, 3334.0], [92.1, 3335.0], [92.2, 3339.0], [92.3, 3346.0], [92.4, 3360.0], [92.5, 3398.0], [92.6, 3420.0], [92.7, 3426.0], [92.8, 3449.0], [92.9, 3456.0], [93.0, 3474.0], [93.1, 3490.0], [93.2, 3502.0], [93.3, 3531.0], [93.4, 3546.0], [93.5, 3555.0], [93.6, 3558.0], [93.7, 3563.0], [93.8, 3567.0], [93.9, 3571.0], [94.0, 3583.0], [94.1, 3584.0], [94.2, 3596.0], [94.3, 3618.0], [94.4, 3644.0], [94.5, 3652.0], [94.6, 3668.0], [94.7, 3671.0], [94.8, 3690.0], [94.9, 3727.0], [95.0, 3789.0], [95.1, 3794.0], [95.2, 3796.0], [95.3, 3806.0], [95.4, 3822.0], [95.5, 3831.0], [95.6, 3832.0], [95.7, 3848.0], [95.8, 3857.0], [95.9, 3882.0], [96.0, 3885.0], [96.1, 3887.0], [96.2, 3889.0], [96.3, 3896.0], [96.4, 3904.0], [96.5, 3915.0], [96.6, 3930.0], [96.7, 3944.0], [96.8, 3948.0], [96.9, 3951.0], [97.0, 3952.0], [97.1, 3965.0], [97.2, 3989.0], [97.3, 4010.0], [97.4, 4018.0], [97.5, 4021.0], [97.6, 4034.0], [97.7, 4043.0], [97.8, 4059.0], [97.9, 4069.0], [98.0, 4075.0], [98.1, 4094.0], [98.2, 4108.0], [98.3, 4136.0], [98.4, 4151.0], [98.5, 4153.0], [98.6, 4153.0], [98.7, 4205.0], [98.8, 4240.0], [98.9, 4254.0], [99.0, 4271.0], [99.1, 4272.0], [99.2, 4279.0], [99.3, 4287.0], [99.4, 4290.0], [99.5, 4320.0], [99.6, 4407.0], [99.7, 4450.0], [99.8, 4586.0], [99.9, 4978.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 314.0, "series": [{"data": [[600.0, 17.0], [700.0, 12.0], [800.0, 12.0], [900.0, 19.0], [1000.0, 12.0], [1100.0, 13.0], [1200.0, 17.0], [1300.0, 16.0], [1400.0, 32.0], [1500.0, 40.0], [100.0, 6.0], [1600.0, 24.0], [1700.0, 25.0], [1800.0, 41.0], [1900.0, 71.0], [2000.0, 95.0], [2100.0, 47.0], [2200.0, 12.0], [2300.0, 11.0], [2400.0, 5.0], [2500.0, 5.0], [2600.0, 114.0], [2700.0, 242.0], [2800.0, 244.0], [2900.0, 314.0], [3000.0, 121.0], [3100.0, 172.0], [200.0, 10.0], [3200.0, 41.0], [3300.0, 23.0], [3400.0, 13.0], [3500.0, 21.0], [3600.0, 13.0], [3700.0, 7.0], [3800.0, 22.0], [3900.0, 19.0], [4000.0, 18.0], [4100.0, 10.0], [4200.0, 15.0], [4300.0, 3.0], [4400.0, 3.0], [4500.0, 3.0], [300.0, 9.0], [4900.0, 1.0], [5000.0, 1.0], [400.0, 10.0], [500.0, 19.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5000.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 35.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1796.0, "series": [{"data": [[0.0, 35.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 169.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1796.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 11.636363636363637, "minX": 1.6673182464E12, "maxY": 400.0, "series": [{"data": [[1.6673182608E12, 29.571428571428573], [1.6673182485E12, 400.0], [1.6673182526E12, 400.0], [1.6673182567E12, 391.15789473684214], [1.6673182487E12, 400.0], [1.6673182568E12, 389.70000000000005], [1.6673182609E12, 11.636363636363637], [1.6673182486E12, 400.0], [1.6673182527E12, 400.0], [1.6673182488E12, 400.0], [1.6673182529E12, 400.0], [1.667318257E12, 383.76470588235287], [1.6673182528E12, 400.0], [1.6673182569E12, 387.30000000000007], [1.6673182489E12, 400.0], [1.667318253E12, 400.0], [1.6673182571E12, 381.6363636363636], [1.667318249E12, 400.0], [1.6673182531E12, 400.0], [1.6673182572E12, 377.53846153846155], [1.6673182492E12, 400.0], [1.6673182533E12, 400.0], [1.6673182574E12, 355.5], [1.6673182491E12, 400.0], [1.6673182532E12, 400.0], [1.6673182573E12, 367.00000000000006], [1.6673182493E12, 400.0], [1.6673182534E12, 400.0], [1.6673182575E12, 344.88235294117646], [1.6673182576E12, 332.3333333333333], [1.6673182494E12, 400.0], [1.6673182535E12, 400.0], [1.6673182475E12, 400.0], [1.6673182516E12, 400.0], [1.6673182557E12, 400.0], [1.6673182598E12, 167.5555555555556], [1.6673182476E12, 400.0], [1.6673182517E12, 400.0], [1.6673182558E12, 398.7777777777777], [1.6673182599E12, 152.53846153846155], [1.6673182478E12, 400.0], [1.6673182519E12, 400.0], [1.66731826E12, 141.9333333333333], [1.6673182477E12, 400.0], [1.6673182518E12, 400.0], [1.6673182559E12, 398.0], [1.667318252E12, 400.0], [1.6673182561E12, 394.50000000000006], [1.6673182602E12, 117.26086956521739], [1.6673182479E12, 400.0], [1.667318256E12, 397.3], [1.6673182601E12, 131.5], [1.667318248E12, 400.0], [1.6673182521E12, 400.0], [1.6673182562E12, 393.0], [1.6673182603E12, 101.15384615384613], [1.6673182481E12, 400.0], [1.6673182522E12, 400.0], [1.6673182563E12, 393.0], [1.6673182604E12, 88.0], [1.6673182483E12, 400.0], [1.6673182524E12, 400.0], [1.6673182565E12, 393.0], [1.6673182606E12, 64.28], [1.6673182482E12, 400.0], [1.6673182523E12, 400.0], [1.6673182564E12, 393.0], [1.6673182605E12, 78.5], [1.6673182484E12, 400.0], [1.6673182525E12, 400.0], [1.6673182566E12, 392.6923076923077], [1.6673182607E12, 44.0], [1.6673182465E12, 400.0], [1.6673182506E12, 400.0], [1.6673182547E12, 400.0], [1.6673182588E12, 258.8], [1.6673182464E12, 400.0], [1.6673182505E12, 400.0], [1.6673182546E12, 400.0], [1.6673182587E12, 262.77272727272725], [1.6673182466E12, 400.0], [1.6673182507E12, 400.0], [1.6673182548E12, 400.0], [1.6673182589E12, 254.88888888888889], [1.6673182467E12, 400.0], [1.6673182508E12, 400.0], [1.6673182549E12, 400.0], [1.667318259E12, 248.42857142857142], [1.6673182469E12, 400.0], [1.667318251E12, 400.0], [1.6673182551E12, 400.0], [1.6673182468E12, 400.0], [1.6673182509E12, 400.0], [1.667318255E12, 400.0], [1.6673182591E12, 242.0909090909091], [1.6673182552E12, 400.0], [1.6673182593E12, 224.6], [1.667318247E12, 400.0], [1.6673182511E12, 400.0], [1.6673182592E12, 233.66666666666666], [1.6673182512E12, 400.0], [1.6673182553E12, 400.0], [1.6673182594E12, 216.5], [1.6673182471E12, 400.0], [1.6673182472E12, 400.0], [1.6673182513E12, 400.0], [1.6673182554E12, 400.0], [1.6673182595E12, 203.94444444444443], [1.6673182474E12, 400.0], [1.6673182515E12, 400.0], [1.6673182556E12, 400.0], [1.6673182597E12, 181.0], [1.6673182473E12, 400.0], [1.6673182514E12, 400.0], [1.6673182555E12, 400.0], [1.6673182596E12, 191.36363636363637], [1.6673182536E12, 400.0], [1.6673182577E12, 325.0], [1.6673182495E12, 400.0], [1.6673182497E12, 400.0], [1.6673182538E12, 400.0], [1.6673182579E12, 301.5], [1.6673182496E12, 400.0], [1.6673182537E12, 400.0], [1.6673182578E12, 314.59999999999997], [1.6673182498E12, 400.0], [1.6673182539E12, 400.0], [1.667318258E12, 291.2857142857143], [1.6673182499E12, 400.0], [1.667318254E12, 400.0], [1.6673182581E12, 285.5], [1.6673182501E12, 400.0], [1.6673182542E12, 400.0], [1.6673182583E12, 270.41176470588226], [1.66731825E12, 400.0], [1.6673182541E12, 400.0], [1.6673182582E12, 277.6666666666667], [1.6673182584E12, 266.54545454545456], [1.6673182502E12, 400.0], [1.6673182543E12, 400.0], [1.6673182544E12, 400.0], [1.6673182585E12, 266.0], [1.6673182503E12, 400.0], [1.6673182504E12, 400.0], [1.6673182545E12, 400.0], [1.6673182586E12, 264.87499999999994]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673182609E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 654.0, "minX": 1.0, "maxY": 4153.0, "series": [{"data": [[2.0, 1849.0], [3.0, 1844.0], [4.0, 1763.0], [5.0, 1854.0], [7.0, 659.5], [8.0, 1895.0], [9.0, 2029.0], [10.0, 939.0], [11.0, 1359.0], [12.0, 967.0], [13.0, 1427.0], [14.0, 1414.0], [15.0, 1508.0], [16.0, 1682.0], [17.0, 1870.0], [18.0, 1529.0], [19.0, 1804.0], [20.0, 1461.0], [22.0, 1711.5], [23.0, 1869.0], [24.0, 1855.0], [25.0, 1763.0], [26.0, 1850.0], [27.0, 1447.0], [28.0, 861.0], [29.0, 841.0], [30.0, 1897.0], [33.0, 1981.0], [32.0, 1980.0], [35.0, 1932.0], [34.0, 1856.0], [37.0, 1897.0], [36.0, 1994.0], [39.0, 1987.0], [38.0, 1989.0], [41.0, 1995.0], [40.0, 1934.0], [43.0, 1980.0], [42.0, 1759.0], [45.0, 1971.0], [44.0, 1971.0], [47.0, 2194.0], [46.0, 1950.0], [49.0, 2010.0], [48.0, 1978.0], [51.0, 1985.0], [50.0, 1989.0], [53.0, 1972.0], [52.0, 2013.0], [55.0, 1976.0], [54.0, 1956.0], [56.0, 1973.0], [59.0, 1940.0], [58.0, 1957.5], [61.0, 2015.0], [60.0, 2053.0], [63.0, 2071.0], [66.0, 1961.0], [65.0, 2013.0], [64.0, 1965.0], [71.0, 1997.0], [70.0, 1977.5], [68.0, 2090.0], [75.0, 2021.0], [74.0, 2010.6666666666667], [79.0, 1983.0], [78.0, 1982.0], [77.0, 1891.0], [76.0, 1992.0], [83.0, 2015.0], [82.0, 2007.0], [81.0, 1962.0], [80.0, 1979.0], [87.0, 2163.0], [86.0, 1998.0], [85.0, 1969.0], [84.0, 2014.0], [91.0, 2113.0], [90.0, 2048.0], [89.0, 1998.0], [88.0, 2035.0], [95.0, 2037.0], [94.0, 2018.0], [93.0, 2082.0], [92.0, 2028.0], [99.0, 2077.0], [98.0, 2021.0], [97.0, 2030.0], [96.0, 2076.0], [103.0, 2093.0], [102.0, 3566.6666666666665], [101.0, 1990.0], [100.0, 2034.0], [107.0, 2028.0], [106.0, 2092.0], [105.0, 2084.0], [104.0, 1887.0], [111.0, 2427.0], [110.0, 2784.5], [109.0, 2018.0], [108.0, 2053.0], [114.0, 2235.0], [113.0, 2431.0], [112.0, 2600.0], [119.0, 2589.0], [118.0, 2182.0], [117.0, 2359.0], [116.0, 2343.0], [123.0, 2150.0], [122.0, 1828.0], [120.0, 2134.0], [127.0, 2011.0], [126.0, 2118.0], [125.0, 2095.0], [124.0, 2397.0], [135.0, 2739.0], [134.0, 2866.0], [133.0, 2769.0], [132.0, 3054.0], [131.0, 2745.0], [130.0, 2760.0], [129.0, 2635.0], [128.0, 2630.0], [143.0, 1478.0], [142.0, 2805.0], [141.0, 2813.0], [140.0, 3034.0], [139.0, 3047.0], [138.0, 3053.0], [137.0, 3067.0], [136.0, 2819.0], [151.0, 2766.0], [150.0, 2785.6666666666665], [149.0, 2894.0], [148.0, 2806.0], [146.0, 2821.0], [145.0, 2154.0], [159.0, 2829.0], [158.0, 2847.0], [157.0, 2984.0], [156.0, 2993.0], [155.0, 3022.0], [154.0, 3282.0], [153.0, 2999.0], [152.0, 2875.0], [167.0, 3037.0], [166.0, 2881.0], [165.0, 2887.0], [164.0, 2859.0], [163.0, 2849.0], [162.0, 2859.0], [161.0, 2856.0], [160.0, 2824.0], [175.0, 2861.0], [174.0, 3018.0], [173.0, 2990.0], [172.0, 3037.0], [171.0, 2972.0], [169.0, 3013.0], [168.0, 2993.0], [183.0, 2989.0], [182.0, 3346.0], [181.0, 2981.0], [180.0, 2969.0], [179.0, 2968.0], [178.0, 2985.0], [177.0, 2995.0], [176.0, 3033.0], [189.0, 2957.0], [187.0, 2961.0], [186.0, 2838.0], [185.0, 3097.0], [184.0, 2986.0], [199.0, 2908.0], [198.0, 3014.0], [197.0, 3126.0], [196.0, 1435.0], [195.0, 2954.0], [194.0, 2923.0], [193.0, 2919.0], [192.0, 2940.6666666666665], [207.0, 3007.0], [206.0, 2932.0], [205.0, 2955.0], [204.0, 2934.0], [203.0, 2928.0], [202.0, 2895.0], [201.0, 2925.0], [200.0, 2904.0], [215.0, 2898.5], [214.0, 2918.0], [213.0, 2894.0], [212.0, 2899.0], [211.0, 3144.0], [210.0, 3314.0], [209.0, 2930.0], [208.0, 2929.0], [223.0, 2989.0], [222.0, 2989.0], [221.0, 2976.0], [220.0, 2979.5], [219.0, 2978.0], [218.0, 2986.0], [217.0, 2923.0], [216.0, 2880.0], [231.0, 2953.0], [230.0, 2945.0], [229.0, 4133.0], [228.0, 3548.0], [227.0, 2720.0], [226.0, 4153.0], [225.0, 2979.0], [224.0, 3001.0], [239.0, 2971.0], [238.0, 2965.0], [237.0, 2963.0], [236.0, 985.0], [235.0, 3044.0], [234.0, 2984.0], [233.0, 2975.0], [232.0, 2943.0], [247.0, 2924.0], [246.0, 2921.0], [245.0, 2927.5], [244.0, 3173.5], [243.0, 2938.6666666666665], [242.0, 2936.6666666666665], [241.0, 2954.0], [240.0, 2949.0], [255.0, 2966.0], [254.0, 3002.5], [253.0, 2966.0], [252.0, 2836.0], [251.0, 3010.0], [250.0, 2997.0], [249.0, 2217.0], [248.0, 2931.0], [270.0, 2936.75], [271.0, 2940.4], [269.0, 2950.6666666666665], [268.0, 2898.75], [267.0, 2946.0], [266.0, 2972.833333333334], [265.0, 2981.75], [264.0, 2876.421052631579], [263.0, 3070.0], [257.0, 2959.75], [259.0, 2931.0], [258.0, 2970.0], [262.0, 2902.0], [261.0, 2951.0], [260.0, 2935.0], [286.0, 2923.75], [287.0, 1796.5], [285.0, 2940.0], [284.0, 2967.5], [283.0, 2956.0], [282.0, 2957.0], [281.0, 2962.0], [280.0, 2973.5], [279.0, 2961.0], [273.0, 2924.0], [272.0, 3027.0], [275.0, 2952.25], [274.0, 2280.0], [278.0, 2916.5], [277.0, 2911.8], [276.0, 2239.5], [302.0, 2836.0], [303.0, 2840.0], [301.0, 2848.0], [300.0, 2940.0], [299.0, 2898.0], [298.0, 2943.0], [297.0, 2953.0], [296.0, 2973.0], [295.0, 2880.0], [289.0, 2946.0], [288.0, 1771.5], [291.0, 2917.3333333333335], [290.0, 2921.0], [294.0, 2954.0], [293.0, 2185.5], [292.0, 2890.0], [318.0, 2874.0], [319.0, 2925.5], [317.0, 2243.5], [316.0, 2886.0], [315.0, 2905.5], [314.0, 2787.0], [313.0, 2891.5], [311.0, 2880.0], [305.0, 2812.0], [304.0, 2829.0], [307.0, 2847.0], [306.0, 2834.0], [310.0, 2802.0], [309.0, 2875.0], [308.0, 2827.0], [334.0, 2833.0], [335.0, 2827.0], [333.0, 2848.0], [332.0, 2848.0], [331.0, 2833.3333333333335], [330.0, 2839.0], [329.0, 2840.5], [327.0, 2816.0], [321.0, 2908.0], [320.0, 2906.0], [323.0, 2852.0], [322.0, 2876.0], [326.0, 2857.0], [325.0, 2796.5], [324.0, 2890.0], [350.0, 2776.0], [351.0, 2869.3333333333335], [348.0, 2799.0], [339.0, 2802.0], [338.0, 2880.0], [337.0, 2822.0], [336.0, 2814.0], [347.0, 2804.0], [346.0, 2816.0], [345.0, 2808.0], [344.0, 2817.0], [343.0, 2823.0], [342.0, 2815.5], [340.0, 2143.0], [366.0, 2834.0], [367.0, 2782.0], [365.0, 2798.0], [364.0, 2810.5], [363.0, 2801.0], [362.0, 2827.0], [361.0, 2677.0], [360.0, 2761.0], [359.0, 2832.0], [353.0, 2764.0], [352.0, 2770.0], [355.0, 2772.0], [354.0, 2760.0], [358.0, 2754.0], [357.0, 2732.0], [356.0, 2757.0], [382.0, 3465.714285714286], [383.0, 2832.714285714286], [381.0, 2864.0], [380.0, 2796.0], [379.0, 2800.0], [378.0, 2800.0], [377.0, 2788.2], [376.0, 2794.0], [375.0, 3364.0], [369.0, 2767.0], [368.0, 2813.0], [371.0, 2813.0], [370.0, 2820.0], [373.0, 2830.0], [372.0, 2835.0], [398.0, 2679.259259259259], [399.0, 2401.25], [397.0, 1326.0], [396.0, 2740.0], [395.0, 2690.833333333333], [394.0, 2700.1666666666665], [393.0, 2872.9687499999995], [392.0, 2742.5], [391.0, 2748.1], [385.0, 2731.0], [384.0, 2743.714285714286], [387.0, 2767.0], [386.0, 2677.0], [390.0, 2718.0], [389.0, 2675.0], [388.0, 2777.6], [400.0, 2561.6728826728804], [1.0, 654.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[349.9055000000002, 2605.444]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 400.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4790.0, "minX": 1.6673182464E12, "maxY": 228150.0, "series": [{"data": [[1.6673182608E12, 125460.0], [1.6673182485E12, 133100.0], [1.6673182526E12, 109980.0], [1.6673182567E12, 169610.0], [1.6673182487E12, 78510.0], [1.6673182568E12, 90160.0], [1.6673182609E12, 202960.0], [1.6673182486E12, 92930.0], [1.6673182527E12, 138160.0], [1.6673182488E12, 114020.0], [1.6673182529E12, 108250.0], [1.667318257E12, 154790.0], [1.6673182528E12, 100830.0], [1.6673182569E12, 91790.0], [1.6673182489E12, 107760.0], [1.667318253E12, 146590.0], [1.6673182571E12, 104050.0], [1.667318249E12, 116600.0], [1.6673182531E12, 116750.0], [1.6673182572E12, 121680.0], [1.6673182492E12, 104110.0], [1.6673182533E12, 93440.0], [1.6673182574E12, 88990.0], [1.6673182491E12, 8050.0], [1.6673182532E12, 145330.0], [1.6673182573E12, 143180.0], [1.6673182493E12, 182490.0], [1.6673182534E12, 164770.0], [1.6673182575E12, 146570.0], [1.6673182576E12, 105690.0], [1.6673182494E12, 141370.0], [1.6673182535E12, 87490.0], [1.6673182475E12, 149100.0], [1.6673182516E12, 107940.0], [1.6673182557E12, 127300.0], [1.6673182598E12, 163020.0], [1.6673182476E12, 151300.0], [1.6673182517E12, 133870.0], [1.6673182558E12, 152850.0], [1.6673182599E12, 116370.0], [1.6673182478E12, 147630.0], [1.6673182519E12, 119390.0], [1.66731826E12, 142830.0], [1.6673182477E12, 83460.0], [1.6673182518E12, 114410.0], [1.6673182559E12, 124080.0], [1.667318252E12, 115550.0], [1.6673182561E12, 139850.0], [1.6673182602E12, 206300.0], [1.6673182479E12, 121800.0], [1.667318256E12, 88180.0], [1.6673182601E12, 47090.0], [1.667318248E12, 124230.0], [1.6673182521E12, 136820.0], [1.6673182562E12, 117330.0], [1.6673182603E12, 119120.0], [1.6673182481E12, 145670.0], [1.6673182522E12, 134360.0], [1.6673182563E12, 134260.0], [1.6673182604E12, 130040.0], [1.6673182483E12, 117500.0], [1.6673182524E12, 111410.0], [1.6673182565E12, 132900.0], [1.6673182606E12, 228150.0], [1.6673182482E12, 102940.0], [1.6673182523E12, 167090.0], [1.6673182564E12, 83070.0], [1.6673182605E12, 35590.0], [1.6673182484E12, 114760.0], [1.6673182525E12, 158100.0], [1.6673182566E12, 105060.0], [1.6673182607E12, 139230.0], [1.6673182465E12, 167090.0], [1.6673182506E12, 117450.0], [1.6673182547E12, 203920.0], [1.6673182588E12, 91810.0], [1.6673182464E12, 62540.0], [1.6673182505E12, 97510.0], [1.6673182546E12, 55690.0], [1.6673182587E12, 200420.0], [1.6673182466E12, 9080.0], [1.6673182507E12, 114390.0], [1.6673182548E12, 122790.0], [1.6673182589E12, 76110.0], [1.6673182467E12, 172080.0], [1.6673182508E12, 43730.0], [1.6673182549E12, 119350.0], [1.667318259E12, 125050.0], [1.6673182469E12, 107540.0], [1.667318251E12, 164210.0], [1.6673182551E12, 157530.0], [1.6673182468E12, 155090.0], [1.6673182509E12, 200950.0], [1.667318255E12, 142990.0], [1.6673182591E12, 99800.0], [1.6673182552E12, 150570.0], [1.6673182593E12, 87740.0], [1.667318247E12, 86420.0], [1.6673182511E12, 91180.0], [1.6673182592E12, 108890.0], [1.6673182512E12, 47850.0], [1.6673182553E12, 57500.0], [1.6673182594E12, 108200.0], [1.6673182471E12, 147520.0], [1.6673182472E12, 106980.0], [1.6673182513E12, 171360.0], [1.6673182554E12, 198090.0], [1.6673182595E12, 160080.0], [1.6673182474E12, 124950.0], [1.6673182515E12, 77780.0], [1.6673182556E12, 132830.0], [1.6673182597E12, 84950.0], [1.6673182473E12, 75510.0], [1.6673182514E12, 112180.0], [1.6673182555E12, 136650.0], [1.6673182596E12, 97870.0], [1.6673182536E12, 158160.0], [1.6673182577E12, 52950.0], [1.6673182495E12, 63140.0], [1.6673182497E12, 164090.0], [1.6673182538E12, 180690.0], [1.6673182579E12, 89310.0], [1.6673182496E12, 142130.0], [1.6673182537E12, 108020.0], [1.6673182578E12, 172000.0], [1.6673182498E12, 123520.0], [1.6673182539E12, 100080.0], [1.667318258E12, 133440.0], [1.6673182499E12, 27700.0], [1.667318254E12, 195780.0], [1.6673182581E12, 75040.0], [1.6673182501E12, 127010.0], [1.6673182542E12, 83180.0], [1.6673182583E12, 158010.0], [1.66731825E12, 177010.0], [1.6673182541E12, 137050.0], [1.6673182582E12, 196150.0], [1.6673182584E12, 95190.0], [1.6673182502E12, 110070.0], [1.6673182543E12, 146440.0], [1.6673182544E12, 172190.0], [1.6673182585E12, 104820.0], [1.6673182503E12, 58440.0], [1.6673182504E12, 154090.0], [1.6673182545E12, 142650.0], [1.6673182586E12, 139880.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6673182608E12, 67060.0], [1.6673182485E12, 76640.0], [1.6673182526E12, 62270.0], [1.6673182567E12, 91010.0], [1.6673182487E12, 43110.0], [1.6673182568E12, 47900.0], [1.6673182609E12, 105380.0], [1.6673182486E12, 47900.0], [1.6673182527E12, 71850.0], [1.6673182488E12, 62270.0], [1.6673182529E12, 57480.0], [1.667318257E12, 81430.0], [1.6673182528E12, 52690.0], [1.6673182569E12, 47900.0], [1.6673182489E12, 57480.0], [1.667318253E12, 76640.0], [1.6673182571E12, 52690.0], [1.667318249E12, 62270.0], [1.6673182531E12, 62270.0], [1.6673182572E12, 62270.0], [1.6673182492E12, 57480.0], [1.6673182533E12, 47900.0], [1.6673182574E12, 47900.0], [1.6673182491E12, 4790.0], [1.6673182532E12, 81430.0], [1.6673182573E12, 81430.0], [1.6673182493E12, 95800.0], [1.6673182534E12, 86220.0], [1.6673182575E12, 81430.0], [1.6673182576E12, 57480.0], [1.6673182494E12, 76640.0], [1.6673182535E12, 47900.0], [1.6673182475E12, 76640.0], [1.6673182516E12, 57480.0], [1.6673182557E12, 67060.0], [1.6673182598E12, 86220.0], [1.6673182476E12, 81430.0], [1.6673182517E12, 76640.0], [1.6673182558E12, 86220.0], [1.6673182599E12, 62270.0], [1.6673182478E12, 76640.0], [1.6673182519E12, 62270.0], [1.66731826E12, 71850.0], [1.6673182477E12, 43110.0], [1.6673182518E12, 67060.0], [1.6673182559E12, 67060.0], [1.667318252E12, 62270.0], [1.6673182561E12, 76640.0], [1.6673182602E12, 110170.0], [1.6673182479E12, 62270.0], [1.667318256E12, 47900.0], [1.6673182601E12, 28740.0], [1.667318248E12, 67060.0], [1.6673182521E12, 71850.0], [1.6673182562E12, 67060.0], [1.6673182603E12, 62270.0], [1.6673182481E12, 81430.0], [1.6673182522E12, 71850.0], [1.6673182563E12, 71850.0], [1.6673182604E12, 71850.0], [1.6673182483E12, 62270.0], [1.6673182524E12, 57480.0], [1.6673182565E12, 71850.0], [1.6673182606E12, 119750.0], [1.6673182482E12, 52690.0], [1.6673182523E12, 86220.0], [1.6673182564E12, 43110.0], [1.6673182605E12, 19160.0], [1.6673182484E12, 62270.0], [1.6673182525E12, 81430.0], [1.6673182566E12, 62270.0], [1.6673182607E12, 71850.0], [1.6673182465E12, 86220.0], [1.6673182506E12, 62270.0], [1.6673182547E12, 114960.0], [1.6673182588E12, 47900.0], [1.6673182464E12, 33530.0], [1.6673182505E12, 52690.0], [1.6673182546E12, 28740.0], [1.6673182587E12, 105380.0], [1.6673182466E12, 4790.0], [1.6673182507E12, 62270.0], [1.6673182548E12, 62270.0], [1.6673182589E12, 43110.0], [1.6673182467E12, 91010.0], [1.6673182508E12, 23950.0], [1.6673182549E12, 67060.0], [1.667318259E12, 67060.0], [1.6673182469E12, 57480.0], [1.667318251E12, 95800.0], [1.6673182551E12, 86220.0], [1.6673182468E12, 86220.0], [1.6673182509E12, 105380.0], [1.667318255E12, 76640.0], [1.6673182591E12, 52690.0], [1.6673182552E12, 81430.0], [1.6673182593E12, 47900.0], [1.667318247E12, 47900.0], [1.6673182511E12, 47900.0], [1.6673182592E12, 57480.0], [1.6673182512E12, 23950.0], [1.6673182553E12, 33530.0], [1.6673182594E12, 57480.0], [1.6673182471E12, 81430.0], [1.6673182472E12, 57480.0], [1.6673182513E12, 91010.0], [1.6673182554E12, 105380.0], [1.6673182595E12, 86220.0], [1.6673182474E12, 62270.0], [1.6673182515E12, 43110.0], [1.6673182556E12, 67060.0], [1.6673182597E12, 43110.0], [1.6673182473E12, 43110.0], [1.6673182514E12, 62270.0], [1.6673182555E12, 71850.0], [1.6673182596E12, 52690.0], [1.6673182536E12, 81430.0], [1.6673182577E12, 28740.0], [1.6673182495E12, 33530.0], [1.6673182497E12, 86220.0], [1.6673182538E12, 95800.0], [1.6673182579E12, 47900.0], [1.6673182496E12, 76640.0], [1.6673182537E12, 57480.0], [1.6673182578E12, 95800.0], [1.6673182498E12, 67060.0], [1.6673182539E12, 52690.0], [1.667318258E12, 67060.0], [1.6673182499E12, 14370.0], [1.667318254E12, 105380.0], [1.6673182581E12, 38320.0], [1.6673182501E12, 71850.0], [1.6673182542E12, 43110.0], [1.6673182583E12, 81430.0], [1.66731825E12, 95800.0], [1.6673182541E12, 71850.0], [1.6673182582E12, 100590.0], [1.6673182584E12, 52690.0], [1.6673182502E12, 57480.0], [1.6673182543E12, 81430.0], [1.6673182544E12, 91010.0], [1.6673182585E12, 57480.0], [1.6673182503E12, 28740.0], [1.6673182504E12, 86220.0], [1.6673182545E12, 76640.0], [1.6673182586E12, 76640.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673182609E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 194.42857142857144, "minX": 1.6673182464E12, "maxY": 4147.333333333333, "series": [{"data": [[1.6673182608E12, 1721.8571428571427], [1.6673182485E12, 2013.125], [1.6673182526E12, 3029.6923076923076], [1.6673182567E12, 2748.4736842105262], [1.6673182487E12, 1963.4444444444443], [1.6673182568E12, 2706.5], [1.6673182609E12, 1481.3636363636363], [1.6673182486E12, 1963.8999999999999], [1.6673182527E12, 2985.7999999999997], [1.6673182488E12, 1993.6923076923078], [1.6673182529E12, 2967.75], [1.667318257E12, 2778.1176470588234], [1.6673182528E12, 3017.5454545454545], [1.6673182569E12, 2767.3], [1.6673182489E12, 2065.416666666667], [1.667318253E12, 3010.6875], [1.6673182571E12, 3246.9090909090905], [1.667318249E12, 2051.230769230769], [1.6673182531E12, 2994.0], [1.6673182572E12, 2880.846153846154], [1.6673182492E12, 2124.583333333333], [1.6673182533E12, 2917.2999999999997], [1.6673182574E12, 2784.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 2925.411764705882], [1.6673182573E12, 2804.1764705882356], [1.6673182493E12, 2249.2], [1.6673182534E12, 2835.944444444445], [1.6673182575E12, 2734.8235294117653], [1.6673182576E12, 2834.3333333333335], [1.6673182494E12, 2600.9375], [1.6673182535E12, 2807.5], [1.6673182475E12, 1308.125], [1.6673182516E12, 3211.5833333333335], [1.6673182557E12, 2605.0], [1.6673182598E12, 2931.6666666666665], [1.6673182476E12, 1438.235294117647], [1.6673182517E12, 3180.4375], [1.6673182558E12, 2452.388888888889], [1.6673182599E12, 2909.153846153846], [1.6673182478E12, 1673.9375], [1.6673182519E12, 3121.7692307692305], [1.66731826E12, 2694.866666666667], [1.6673182477E12, 1546.2222222222222], [1.6673182518E12, 3180.142857142857], [1.6673182559E12, 2728.4999999999995], [1.667318252E12, 3031.6153846153848], [1.6673182561E12, 2708.75], [1.6673182602E12, 2276.869565217392], [1.6673182479E12, 1661.0000000000002], [1.667318256E12, 2537.0], [1.6673182601E12, 2804.8333333333335], [1.667318248E12, 1862.357142857143], [1.6673182521E12, 3092.933333333334], [1.6673182562E12, 2694.3571428571427], [1.6673182603E12, 2391.0769230769233], [1.6673182481E12, 1908.0000000000002], [1.6673182522E12, 3050.2], [1.6673182563E12, 3051.266666666667], [1.6673182604E12, 2032.4666666666667], [1.6673182483E12, 1945.9230769230767], [1.6673182524E12, 3008.25], [1.6673182565E12, 2973.933333333334], [1.6673182606E12, 2002.8400000000001], [1.6673182482E12, 2068.4545454545455], [1.6673182523E12, 3015.3888888888887], [1.6673182564E12, 2879.0], [1.6673182605E12, 1958.75], [1.6673182484E12, 2242.923076923077], [1.6673182525E12, 2956.294117647059], [1.6673182566E12, 2723.0], [1.6673182607E12, 1972.6], [1.6673182465E12, 301.5], [1.6673182506E12, 3257.6153846153848], [1.6673182547E12, 2844.375], [1.6673182588E12, 2954.2999999999993], [1.6673182464E12, 194.42857142857144], [1.6673182505E12, 3694.2727272727275], [1.6673182546E12, 2747.5], [1.6673182587E12, 2890.6818181818185], [1.6673182466E12, 411.0], [1.6673182507E12, 3427.769230769231], [1.6673182548E12, 2539.9999999999995], [1.6673182589E12, 2957.3333333333335], [1.6673182467E12, 492.6315789473684], [1.6673182508E12, 3181.8], [1.6673182549E12, 2565.357142857143], [1.667318259E12, 2802.8571428571427], [1.6673182469E12, 715.1666666666666], [1.667318251E12, 3156.2499999999995], [1.6673182551E12, 2824.222222222222], [1.6673182468E12, 603.2777777777776], [1.6673182509E12, 3119.5], [1.667318255E12, 2703.2499999999995], [1.6673182591E12, 2986.090909090909], [1.6673182552E12, 2444.8823529411766], [1.6673182593E12, 3189.2], [1.667318247E12, 814.7], [1.6673182511E12, 3115.7999999999997], [1.6673182592E12, 2909.833333333333], [1.6673182512E12, 3171.4], [1.6673182553E12, 2527.571428571429], [1.6673182594E12, 2934.3333333333335], [1.6673182471E12, 931.5882352941177], [1.6673182472E12, 1017.5833333333333], [1.6673182513E12, 3220.4210526315787], [1.6673182554E12, 2616.090909090909], [1.6673182595E12, 2999.166666666667], [1.6673182474E12, 1206.7692307692307], [1.6673182515E12, 3166.5555555555557], [1.6673182556E12, 2697.0], [1.6673182597E12, 3035.1111111111113], [1.6673182473E12, 1131.0], [1.6673182514E12, 3162.230769230769], [1.6673182555E12, 2751.3999999999996], [1.6673182596E12, 2796.909090909091], [1.6673182536E12, 2900.9411764705883], [1.6673182577E12, 2834.6666666666665], [1.6673182495E12, 3082.857142857143], [1.6673182497E12, 3565.8888888888882], [1.6673182538E12, 2809.75], [1.6673182579E12, 2873.2999999999993], [1.6673182496E12, 3372.4375], [1.6673182537E12, 2902.0833333333335], [1.6673182578E12, 2811.35], [1.6673182498E12, 3509.7857142857147], [1.6673182539E12, 2903.909090909091], [1.667318258E12, 2571.3571428571427], [1.6673182499E12, 3017.6666666666665], [1.667318254E12, 2875.59090909091], [1.6673182581E12, 2799.2500000000005], [1.6673182501E12, 3960.3999999999996], [1.6673182542E12, 2556.6666666666665], [1.6673182583E12, 2861.6470588235297], [1.66731825E12, 3686.55], [1.6673182541E12, 2491.333333333333], [1.6673182582E12, 2878.238095238095], [1.6673182584E12, 2926.2727272727275], [1.6673182502E12, 4054.7500000000005], [1.6673182543E12, 2786.0], [1.6673182544E12, 2795.947368421053], [1.6673182585E12, 2972.75], [1.6673182503E12, 4147.333333333333], [1.6673182504E12, 3773.2222222222226], [1.6673182545E12, 2551.4999999999995], [1.6673182586E12, 2982.4375]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673182609E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 192.2857142857143, "minX": 1.6673182464E12, "maxY": 4147.0, "series": [{"data": [[1.6673182608E12, 1721.642857142857], [1.6673182485E12, 2013.125], [1.6673182526E12, 3029.6923076923076], [1.6673182567E12, 2748.368421052631], [1.6673182487E12, 1963.111111111111], [1.6673182568E12, 2706.5], [1.6673182609E12, 1481.0454545454545], [1.6673182486E12, 1963.8], [1.6673182527E12, 2985.7999999999997], [1.6673182488E12, 1993.6153846153843], [1.6673182529E12, 2966.75], [1.667318257E12, 2777.7647058823527], [1.6673182528E12, 3017.4545454545455], [1.6673182569E12, 2767.2], [1.6673182489E12, 2065.25], [1.667318253E12, 3010.4999999999995], [1.6673182571E12, 3246.8181818181815], [1.667318249E12, 2050.923076923077], [1.6673182531E12, 2994.0], [1.6673182572E12, 2880.769230769231], [1.6673182492E12, 2122.0833333333335], [1.6673182533E12, 2917.1000000000004], [1.6673182574E12, 2784.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 2925.1176470588234], [1.6673182573E12, 2803.823529411765], [1.6673182493E12, 2249.15], [1.6673182534E12, 2835.2777777777774], [1.6673182575E12, 2734.764705882353], [1.6673182576E12, 2834.2499999999995], [1.6673182494E12, 2600.8125], [1.6673182535E12, 2806.9], [1.6673182475E12, 1307.6875], [1.6673182516E12, 3211.3333333333335], [1.6673182557E12, 2604.714285714286], [1.6673182598E12, 2931.4444444444443], [1.6673182476E12, 1438.0588235294117], [1.6673182517E12, 3180.25], [1.6673182558E12, 2452.3333333333335], [1.6673182599E12, 2909.0769230769233], [1.6673182478E12, 1673.875], [1.6673182519E12, 3121.615384615385], [1.66731826E12, 2694.733333333333], [1.6673182477E12, 1546.2222222222222], [1.6673182518E12, 3180.0], [1.6673182559E12, 2728.2857142857138], [1.667318252E12, 3031.6153846153848], [1.6673182561E12, 2708.6875], [1.6673182602E12, 2276.8260869565224], [1.6673182479E12, 1660.9230769230771], [1.667318256E12, 2537.0], [1.6673182601E12, 2804.6666666666665], [1.667318248E12, 1862.2142857142856], [1.6673182521E12, 3092.3999999999996], [1.6673182562E12, 2694.1428571428573], [1.6673182603E12, 2391.0000000000005], [1.6673182481E12, 1907.6470588235293], [1.6673182522E12, 3050.133333333333], [1.6673182563E12, 3051.2000000000003], [1.6673182604E12, 2032.1333333333334], [1.6673182483E12, 1945.9230769230767], [1.6673182524E12, 3008.1666666666665], [1.6673182565E12, 2973.7999999999997], [1.6673182606E12, 2002.8400000000001], [1.6673182482E12, 2068.363636363636], [1.6673182523E12, 3014.888888888889], [1.6673182564E12, 2879.0], [1.6673182605E12, 1958.75], [1.6673182484E12, 2242.846153846154], [1.6673182525E12, 2955.588235294118], [1.6673182566E12, 2722.769230769231], [1.6673182607E12, 1972.5333333333333], [1.6673182465E12, 301.38888888888897], [1.6673182506E12, 3257.5384615384614], [1.6673182547E12, 2844.208333333333], [1.6673182588E12, 2954.0], [1.6673182464E12, 192.2857142857143], [1.6673182505E12, 3694.0], [1.6673182546E12, 2747.5], [1.6673182587E12, 2890.5], [1.6673182466E12, 411.0], [1.6673182507E12, 3427.615384615385], [1.6673182548E12, 2539.769230769231], [1.6673182589E12, 2957.222222222222], [1.6673182467E12, 491.3157894736843], [1.6673182508E12, 3181.2], [1.6673182549E12, 2565.2857142857147], [1.667318259E12, 2802.7857142857138], [1.6673182469E12, 715.0833333333334], [1.667318251E12, 3156.2000000000003], [1.6673182551E12, 2823.1111111111113], [1.6673182468E12, 602.2222222222222], [1.6673182509E12, 3119.3181818181815], [1.667318255E12, 2703.1874999999995], [1.6673182591E12, 2986.090909090909], [1.6673182552E12, 2444.8823529411766], [1.6673182593E12, 3189.2], [1.667318247E12, 814.1999999999999], [1.6673182511E12, 3115.5999999999995], [1.6673182592E12, 2909.6666666666665], [1.6673182512E12, 3171.4], [1.6673182553E12, 2527.0000000000005], [1.6673182594E12, 2934.083333333333], [1.6673182471E12, 931.2352941176471], [1.6673182472E12, 1017.3333333333334], [1.6673182513E12, 3220.3157894736846], [1.6673182554E12, 2616.0], [1.6673182595E12, 2998.6666666666674], [1.6673182474E12, 1206.2307692307693], [1.6673182515E12, 3166.5555555555557], [1.6673182556E12, 2696.7857142857147], [1.6673182597E12, 3035.1111111111113], [1.6673182473E12, 1130.888888888889], [1.6673182514E12, 3162.0000000000005], [1.6673182555E12, 2750.666666666667], [1.6673182596E12, 2796.909090909091], [1.6673182536E12, 2900.823529411765], [1.6673182577E12, 2834.1666666666665], [1.6673182495E12, 3082.5714285714284], [1.6673182497E12, 3565.5000000000005], [1.6673182538E12, 2809.75], [1.6673182579E12, 2873.2000000000003], [1.6673182496E12, 3372.3125000000005], [1.6673182537E12, 2902.0], [1.6673182578E12, 2811.0499999999997], [1.6673182498E12, 3509.714285714286], [1.6673182539E12, 2902.3636363636365], [1.667318258E12, 2571.285714285714], [1.6673182499E12, 3017.3333333333335], [1.667318254E12, 2875.409090909091], [1.6673182581E12, 2799.2500000000005], [1.6673182501E12, 3960.333333333333], [1.6673182542E12, 2554.888888888889], [1.6673182583E12, 2861.470588235294], [1.66731825E12, 3686.1500000000005], [1.6673182541E12, 2491.2000000000003], [1.6673182582E12, 2878.095238095238], [1.6673182584E12, 2926.1818181818185], [1.6673182502E12, 4054.4166666666665], [1.6673182543E12, 2785.9411764705883], [1.6673182544E12, 2795.8421052631584], [1.6673182585E12, 2972.5833333333335], [1.6673182503E12, 4147.0], [1.6673182504E12, 3773.0], [1.6673182545E12, 2551.4375], [1.6673182586E12, 2980.0625]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673182609E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6673182464E12, "maxY": 1181.5, "series": [{"data": [[1.6673182608E12, 0.0], [1.6673182485E12, 22.624999999999996], [1.6673182526E12, 0.0], [1.6673182567E12, 0.0], [1.6673182487E12, 0.0], [1.6673182568E12, 0.0], [1.6673182609E12, 0.0], [1.6673182486E12, 10.4], [1.6673182527E12, 0.0], [1.6673182488E12, 0.0], [1.6673182529E12, 0.0], [1.667318257E12, 0.0], [1.6673182528E12, 0.0], [1.6673182569E12, 0.0], [1.6673182489E12, 0.0], [1.667318253E12, 0.0], [1.6673182571E12, 0.0], [1.667318249E12, 0.0], [1.6673182531E12, 0.0], [1.6673182572E12, 0.0], [1.6673182492E12, 0.0], [1.6673182533E12, 0.0], [1.6673182574E12, 0.0], [1.6673182491E12, 0.0], [1.6673182532E12, 0.0], [1.6673182573E12, 0.0], [1.6673182493E12, 57.7], [1.6673182534E12, 0.0], [1.6673182575E12, 0.0], [1.6673182576E12, 0.0], [1.6673182494E12, 509.06250000000006], [1.6673182535E12, 0.0], [1.6673182475E12, 71.0625], [1.6673182516E12, 0.0], [1.6673182557E12, 0.0], [1.6673182598E12, 0.0], [1.6673182476E12, 107.64705882352942], [1.6673182517E12, 0.0], [1.6673182558E12, 0.0], [1.6673182599E12, 0.0], [1.6673182478E12, 165.5], [1.6673182519E12, 0.0], [1.66731826E12, 0.0], [1.6673182477E12, 145.77777777777777], [1.6673182518E12, 0.0], [1.6673182559E12, 0.0], [1.667318252E12, 0.0], [1.6673182561E12, 0.0], [1.6673182602E12, 0.0], [1.6673182479E12, 144.38461538461542], [1.667318256E12, 0.0], [1.6673182601E12, 0.0], [1.667318248E12, 190.71428571428572], [1.6673182521E12, 0.0], [1.6673182562E12, 0.0], [1.6673182603E12, 0.0], [1.6673182481E12, 161.6470588235294], [1.6673182522E12, 0.0], [1.6673182563E12, 0.0], [1.6673182604E12, 0.0], [1.6673182483E12, 35.61538461538461], [1.6673182524E12, 0.0], [1.6673182565E12, 0.0], [1.6673182606E12, 0.0], [1.6673182482E12, 189.27272727272725], [1.6673182523E12, 0.0], [1.6673182564E12, 0.0], [1.6673182605E12, 0.0], [1.6673182484E12, 126.76923076923076], [1.6673182525E12, 0.0], [1.6673182566E12, 0.0], [1.6673182607E12, 0.0], [1.6673182465E12, 33.388888888888886], [1.6673182506E12, 92.84615384615385], [1.6673182547E12, 0.0], [1.6673182588E12, 0.0], [1.6673182464E12, 27.142857142857142], [1.6673182505E12, 533.8181818181819], [1.6673182546E12, 0.0], [1.6673182587E12, 0.0], [1.6673182466E12, 3.0], [1.6673182507E12, 270.4615384615385], [1.6673182548E12, 0.0], [1.6673182589E12, 0.0], [1.6673182467E12, 28.89473684210526], [1.6673182508E12, 0.0], [1.6673182549E12, 0.0], [1.667318259E12, 0.0], [1.6673182469E12, 55.75], [1.667318251E12, 0.0], [1.6673182551E12, 0.0], [1.6673182468E12, 31.777777777777782], [1.6673182509E12, 0.0], [1.667318255E12, 0.0], [1.6673182591E12, 0.0], [1.6673182552E12, 0.0], [1.6673182593E12, 0.0], [1.667318247E12, 51.8], [1.6673182511E12, 0.0], [1.6673182592E12, 0.0], [1.6673182512E12, 0.0], [1.6673182553E12, 0.0], [1.6673182594E12, 0.0], [1.6673182471E12, 71.47058823529412], [1.6673182472E12, 86.58333333333334], [1.6673182513E12, 0.0], [1.6673182554E12, 0.0], [1.6673182595E12, 0.0], [1.6673182474E12, 96.38461538461539], [1.6673182515E12, 0.0], [1.6673182556E12, 0.0], [1.6673182597E12, 0.0], [1.6673182473E12, 103.66666666666667], [1.6673182514E12, 0.0], [1.6673182555E12, 0.0], [1.6673182596E12, 0.0], [1.6673182536E12, 0.0], [1.6673182577E12, 0.0], [1.6673182495E12, 985.1428571428572], [1.6673182497E12, 1164.3333333333335], [1.6673182538E12, 0.0], [1.6673182579E12, 0.0], [1.6673182496E12, 1082.1249999999998], [1.6673182537E12, 0.0], [1.6673182578E12, 0.0], [1.6673182498E12, 1083.357142857143], [1.6673182539E12, 0.0], [1.667318258E12, 0.0], [1.6673182499E12, 778.0], [1.667318254E12, 0.0], [1.6673182581E12, 0.0], [1.6673182501E12, 1164.1333333333332], [1.6673182542E12, 0.0], [1.6673182583E12, 0.0], [1.66731825E12, 985.7000000000002], [1.6673182541E12, 0.0], [1.6673182582E12, 0.0], [1.6673182584E12, 0.0], [1.6673182502E12, 1155.4166666666665], [1.6673182543E12, 0.0], [1.6673182544E12, 0.0], [1.6673182585E12, 0.0], [1.6673182503E12, 1181.5], [1.6673182504E12, 853.1666666666666], [1.6673182545E12, 0.0], [1.6673182586E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673182609E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 172.0, "minX": 1.6673182464E12, "maxY": 5094.0, "series": [{"data": [[1.6673182608E12, 2029.0], [1.6673182485E12, 2355.0], [1.6673182526E12, 3176.0], [1.6673182567E12, 2861.0], [1.6673182487E12, 2231.0], [1.6673182568E12, 2732.0], [1.6673182609E12, 2029.0], [1.6673182486E12, 2471.0], [1.6673182527E12, 3031.0], [1.6673182488E12, 2047.0], [1.6673182529E12, 3233.0], [1.667318257E12, 2923.0], [1.6673182528E12, 3058.0], [1.6673182569E12, 2907.0], [1.6673182489E12, 2093.0], [1.667318253E12, 3205.0], [1.6673182571E12, 4069.0], [1.667318249E12, 2108.0], [1.6673182531E12, 3097.0], [1.6673182572E12, 3944.0], [1.6673182492E12, 2326.0], [1.6673182533E12, 3149.0], [1.6673182574E12, 2938.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 3128.0], [1.6673182573E12, 2979.0], [1.6673182493E12, 3188.0], [1.6673182534E12, 2991.0], [1.6673182575E12, 2912.0], [1.6673182576E12, 2849.0], [1.6673182494E12, 3335.0], [1.6673182535E12, 3109.0], [1.6673182475E12, 1422.0], [1.6673182516E12, 3360.0], [1.6673182557E12, 2763.0], [1.6673182598E12, 3037.0], [1.6673182476E12, 1515.0], [1.6673182517E12, 3334.0], [1.6673182558E12, 2880.0], [1.6673182599E12, 3282.0], [1.6673182478E12, 1739.0], [1.6673182519E12, 3169.0], [1.66731826E12, 3067.0], [1.6673182477E12, 1594.0], [1.6673182518E12, 3383.0], [1.6673182559E12, 3800.0], [1.667318252E12, 3567.0], [1.6673182561E12, 2902.0], [1.6673182602E12, 2792.0], [1.6673182479E12, 1828.0], [1.667318256E12, 3848.0], [1.6673182601E12, 3054.0], [1.667318248E12, 1920.0], [1.6673182521E12, 3334.0], [1.6673182562E12, 2863.0], [1.6673182603E12, 4342.0], [1.6673182481E12, 2032.0], [1.6673182522E12, 3238.0], [1.6673182563E12, 4978.0], [1.6673182604E12, 2163.0], [1.6673182483E12, 2192.0], [1.6673182524E12, 3155.0], [1.6673182565E12, 5094.0], [1.6673182606E12, 2176.0], [1.6673182482E12, 2111.0], [1.6673182523E12, 3072.0], [1.6673182564E12, 3887.0], [1.6673182605E12, 1983.0], [1.6673182484E12, 2317.0], [1.6673182525E12, 3023.0], [1.6673182566E12, 2889.0], [1.6673182607E12, 2194.0], [1.6673182465E12, 387.0], [1.6673182506E12, 4450.0], [1.6673182547E12, 4043.0], [1.6673182588E12, 3037.0], [1.6673182464E12, 238.0], [1.6673182505E12, 4413.0], [1.6673182546E12, 2794.0], [1.6673182587E12, 3070.0], [1.6673182466E12, 411.0], [1.6673182507E12, 4590.0], [1.6673182548E12, 2753.0], [1.6673182589E12, 3010.0], [1.6673182467E12, 546.0], [1.6673182508E12, 3188.0], [1.6673182549E12, 2741.0], [1.667318259E12, 3116.0], [1.6673182469E12, 789.0], [1.667318251E12, 3251.0], [1.6673182551E12, 3832.0], [1.6673182468E12, 674.0], [1.6673182509E12, 3312.0], [1.667318255E12, 2932.0], [1.6673182591E12, 3182.0], [1.6673182552E12, 3915.0], [1.6673182593E12, 4153.0], [1.667318247E12, 929.0], [1.6673182511E12, 3175.0], [1.6673182592E12, 4133.0], [1.6673182512E12, 3275.0], [1.6673182553E12, 2773.0], [1.6673182594E12, 2986.0], [1.6673182471E12, 1000.0], [1.6673182472E12, 1081.0], [1.6673182513E12, 3339.0], [1.6673182554E12, 4090.0], [1.6673182595E12, 3314.0], [1.6673182474E12, 1317.0], [1.6673182515E12, 3227.0], [1.6673182556E12, 2755.0], [1.6673182597E12, 3346.0], [1.6673182473E12, 1168.0], [1.6673182514E12, 3230.0], [1.6673182555E12, 2834.0], [1.6673182596E12, 2970.0], [1.6673182536E12, 3101.0], [1.6673182577E12, 2890.0], [1.6673182495E12, 3408.0], [1.6673182497E12, 3596.0], [1.6673182538E12, 3077.0], [1.6673182579E12, 2953.0], [1.6673182496E12, 3508.0], [1.6673182537E12, 3132.0], [1.6673182578E12, 2928.0], [1.6673182498E12, 3727.0], [1.6673182539E12, 2998.0], [1.667318258E12, 2973.0], [1.6673182499E12, 3764.0], [1.667318254E12, 2984.0], [1.6673182581E12, 2969.0], [1.6673182501E12, 4020.0], [1.6673182542E12, 2854.0], [1.6673182583E12, 3027.0], [1.66731825E12, 3916.0], [1.6673182541E12, 2859.0], [1.6673182582E12, 3033.0], [1.6673182584E12, 2959.0], [1.6673182502E12, 4108.0], [1.6673182543E12, 2957.0], [1.6673182544E12, 4151.0], [1.6673182585E12, 3088.0], [1.6673182503E12, 4184.0], [1.6673182504E12, 4288.0], [1.6673182545E12, 4029.0], [1.6673182586E12, 3143.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6673182608E12, 2011.5], [1.6673182485E12, 2328.4], [1.6673182526E12, 3173.2], [1.6673182567E12, 2836.0], [1.6673182487E12, 2231.0], [1.6673182568E12, 2731.5], [1.6673182609E12, 1887.5], [1.6673182486E12, 2431.0], [1.6673182527E12, 3027.4], [1.6673182488E12, 2047.0], [1.6673182529E12, 3228.2], [1.667318257E12, 2896.6], [1.6673182528E12, 3054.8], [1.6673182569E12, 2901.1], [1.6673182489E12, 2089.4], [1.667318253E12, 3191.0], [1.6673182571E12, 4041.2000000000003], [1.667318249E12, 2105.6], [1.6673182531E12, 3093.0], [1.6673182572E12, 3491.2], [1.6673182492E12, 2282.8], [1.6673182533E12, 3130.1], [1.6673182574E12, 2927.4], [1.6673182491E12, 2024.0], [1.6673182532E12, 3073.6], [1.6673182573E12, 2869.4], [1.6673182493E12, 2904.300000000001], [1.6673182534E12, 2991.0], [1.6673182575E12, 2892.8], [1.6673182576E12, 2848.7], [1.6673182494E12, 3325.9], [1.6673182535E12, 3105.3], [1.6673182475E12, 1412.2], [1.6673182516E12, 3347.4], [1.6673182557E12, 2761.0], [1.6673182598E12, 3037.0], [1.6673182476E12, 1511.8], [1.6673182517E12, 3248.6], [1.6673182558E12, 2868.3], [1.6673182599E12, 3178.0], [1.6673182478E12, 1731.3], [1.6673182519E12, 3158.2], [1.66731826E12, 3058.6], [1.6673182477E12, 1594.0], [1.6673182518E12, 3289.0], [1.6673182559E12, 3797.5], [1.667318252E12, 3475.0], [1.6673182561E12, 2771.1000000000004], [1.6673182602E12, 2718.2000000000003], [1.6673182479E12, 1827.2], [1.667318256E12, 3733.9000000000005], [1.6673182601E12, 3054.0], [1.667318248E12, 1917.0], [1.6673182521E12, 3230.8], [1.6673182562E12, 2856.0], [1.6673182603E12, 4316.8], [1.6673182481E12, 2024.8], [1.6673182522E12, 3205.6], [1.6673182563E12, 4289.200000000001], [1.6673182604E12, 2133.0], [1.6673182483E12, 2186.4], [1.6673182524E12, 3121.7000000000003], [1.6673182565E12, 4315.200000000001], [1.6673182606E12, 2100.2000000000003], [1.6673182482E12, 2111.0], [1.6673182523E12, 3056.7], [1.6673182564E12, 3887.0], [1.6673182605E12, 1983.0], [1.6673182484E12, 2310.2], [1.6673182525E12, 3019.0], [1.6673182566E12, 2852.2], [1.6673182607E12, 2083.6], [1.6673182465E12, 377.1], [1.6673182506E12, 3953.5999999999995], [1.6673182547E12, 2945.5], [1.6673182588E12, 3034.4], [1.6673182464E12, 238.0], [1.6673182505E12, 4411.8], [1.6673182546E12, 2794.0], [1.6673182587E12, 3037.5], [1.6673182466E12, 411.0], [1.6673182507E12, 4588.4], [1.6673182548E12, 2750.6], [1.6673182589E12, 3010.0], [1.6673182467E12, 543.0], [1.6673182508E12, 3188.0], [1.6673182549E12, 2737.5], [1.667318259E12, 3062.0], [1.6673182469E12, 786.0], [1.667318251E12, 3219.0], [1.6673182551E12, 2926.6000000000013], [1.6673182468E12, 666.8], [1.6673182509E12, 3306.8], [1.667318255E12, 2900.5], [1.6673182591E12, 3178.6], [1.6673182552E12, 3894.2], [1.6673182593E12, 4151.3], [1.667318247E12, 925.1], [1.6673182511E12, 3173.0], [1.6673182592E12, 3840.200000000001], [1.6673182512E12, 3275.0], [1.6673182553E12, 2773.0], [1.6673182594E12, 2986.0], [1.6673182471E12, 984.8], [1.6673182472E12, 1070.8], [1.6673182513E12, 3326.0], [1.6673182554E12, 2861.2], [1.6673182595E12, 3183.5], [1.6673182474E12, 1293.0], [1.6673182515E12, 3227.0], [1.6673182556E12, 2738.5], [1.6673182597E12, 3346.0], [1.6673182473E12, 1168.0], [1.6673182514E12, 3225.2], [1.6673182555E12, 2829.2], [1.6673182596E12, 2968.2], [1.6673182536E12, 3051.4], [1.6673182577E12, 2890.0], [1.6673182495E12, 3408.0], [1.6673182497E12, 3594.2], [1.6673182538E12, 2921.8], [1.6673182579E12, 2952.0], [1.6673182496E12, 3503.8], [1.6673182537E12, 3102.9], [1.6673182578E12, 2926.9], [1.6673182498E12, 3708.5], [1.6673182539E12, 2990.0], [1.667318258E12, 2963.5], [1.6673182499E12, 3764.0], [1.667318254E12, 2973.4], [1.6673182581E12, 2969.0], [1.6673182501E12, 4014.0], [1.6673182542E12, 2854.0], [1.6673182583E12, 3027.0], [1.66731825E12, 3903.2], [1.6673182541E12, 2854.2], [1.6673182582E12, 3013.0], [1.6673182584E12, 2958.2], [1.6673182502E12, 4104.4], [1.6673182543E12, 2913.8], [1.6673182544E12, 2924.0], [1.6673182585E12, 3082.9], [1.6673182503E12, 4184.0], [1.6673182504E12, 4287.1], [1.6673182545E12, 3154.000000000001], [1.6673182586E12, 3097.5]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6673182608E12, 2029.0], [1.6673182485E12, 2355.0], [1.6673182526E12, 3176.0], [1.6673182567E12, 2861.0], [1.6673182487E12, 2231.0], [1.6673182568E12, 2732.0], [1.6673182609E12, 2029.0], [1.6673182486E12, 2471.0], [1.6673182527E12, 3031.0], [1.6673182488E12, 2047.0], [1.6673182529E12, 3233.0], [1.667318257E12, 2923.0], [1.6673182528E12, 3058.0], [1.6673182569E12, 2907.0], [1.6673182489E12, 2093.0], [1.667318253E12, 3205.0], [1.6673182571E12, 4069.0], [1.667318249E12, 2108.0], [1.6673182531E12, 3097.0], [1.6673182572E12, 3944.0], [1.6673182492E12, 2326.0], [1.6673182533E12, 3149.0], [1.6673182574E12, 2938.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 3128.0], [1.6673182573E12, 2979.0], [1.6673182493E12, 3188.0], [1.6673182534E12, 2991.0], [1.6673182575E12, 2912.0], [1.6673182576E12, 2849.0], [1.6673182494E12, 3335.0], [1.6673182535E12, 3109.0], [1.6673182475E12, 1422.0], [1.6673182516E12, 3360.0], [1.6673182557E12, 2763.0], [1.6673182598E12, 3037.0], [1.6673182476E12, 1515.0], [1.6673182517E12, 3334.0], [1.6673182558E12, 2880.0], [1.6673182599E12, 3282.0], [1.6673182478E12, 1739.0], [1.6673182519E12, 3169.0], [1.66731826E12, 3067.0], [1.6673182477E12, 1594.0], [1.6673182518E12, 3383.0], [1.6673182559E12, 3800.0], [1.667318252E12, 3567.0], [1.6673182561E12, 2902.0], [1.6673182602E12, 2792.0], [1.6673182479E12, 1828.0], [1.667318256E12, 3848.0], [1.6673182601E12, 3054.0], [1.667318248E12, 1920.0], [1.6673182521E12, 3334.0], [1.6673182562E12, 2863.0], [1.6673182603E12, 4342.0], [1.6673182481E12, 2032.0], [1.6673182522E12, 3238.0], [1.6673182563E12, 4978.0], [1.6673182604E12, 2163.0], [1.6673182483E12, 2192.0], [1.6673182524E12, 3155.0], [1.6673182565E12, 5094.0], [1.6673182606E12, 2176.0], [1.6673182482E12, 2111.0], [1.6673182523E12, 3072.0], [1.6673182564E12, 3887.0], [1.6673182605E12, 1983.0], [1.6673182484E12, 2317.0], [1.6673182525E12, 3023.0], [1.6673182566E12, 2889.0], [1.6673182607E12, 2194.0], [1.6673182465E12, 387.0], [1.6673182506E12, 4450.0], [1.6673182547E12, 4043.0], [1.6673182588E12, 3037.0], [1.6673182464E12, 238.0], [1.6673182505E12, 4413.0], [1.6673182546E12, 2794.0], [1.6673182587E12, 3070.0], [1.6673182466E12, 411.0], [1.6673182507E12, 4590.0], [1.6673182548E12, 2753.0], [1.6673182589E12, 3010.0], [1.6673182467E12, 546.0], [1.6673182508E12, 3188.0], [1.6673182549E12, 2741.0], [1.667318259E12, 3116.0], [1.6673182469E12, 789.0], [1.667318251E12, 3251.0], [1.6673182551E12, 3832.0], [1.6673182468E12, 674.0], [1.6673182509E12, 3312.0], [1.667318255E12, 2932.0], [1.6673182591E12, 3182.0], [1.6673182552E12, 3915.0], [1.6673182593E12, 4153.0], [1.667318247E12, 929.0], [1.6673182511E12, 3175.0], [1.6673182592E12, 4133.0], [1.6673182512E12, 3275.0], [1.6673182553E12, 2773.0], [1.6673182594E12, 2986.0], [1.6673182471E12, 1000.0], [1.6673182472E12, 1081.0], [1.6673182513E12, 3339.0], [1.6673182554E12, 4090.0], [1.6673182595E12, 3314.0], [1.6673182474E12, 1317.0], [1.6673182515E12, 3227.0], [1.6673182556E12, 2755.0], [1.6673182597E12, 3346.0], [1.6673182473E12, 1168.0], [1.6673182514E12, 3230.0], [1.6673182555E12, 2834.0], [1.6673182596E12, 2970.0], [1.6673182536E12, 3101.0], [1.6673182577E12, 2890.0], [1.6673182495E12, 3408.0], [1.6673182497E12, 3596.0], [1.6673182538E12, 3077.0], [1.6673182579E12, 2953.0], [1.6673182496E12, 3508.0], [1.6673182537E12, 3132.0], [1.6673182578E12, 2928.0], [1.6673182498E12, 3727.0], [1.6673182539E12, 2998.0], [1.667318258E12, 2973.0], [1.6673182499E12, 3764.0], [1.667318254E12, 2984.0], [1.6673182581E12, 2969.0], [1.6673182501E12, 4020.0], [1.6673182542E12, 2854.0], [1.6673182583E12, 3027.0], [1.66731825E12, 3916.0], [1.6673182541E12, 2859.0], [1.6673182582E12, 3033.0], [1.6673182584E12, 2959.0], [1.6673182502E12, 4108.0], [1.6673182543E12, 2957.0], [1.6673182544E12, 4151.0], [1.6673182585E12, 3088.0], [1.6673182503E12, 4184.0], [1.6673182504E12, 4288.0], [1.6673182545E12, 4029.0], [1.6673182586E12, 3143.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6673182608E12, 2029.0], [1.6673182485E12, 2355.0], [1.6673182526E12, 3176.0], [1.6673182567E12, 2861.0], [1.6673182487E12, 2231.0], [1.6673182568E12, 2732.0], [1.6673182609E12, 2008.8999999999996], [1.6673182486E12, 2471.0], [1.6673182527E12, 3031.0], [1.6673182488E12, 2047.0], [1.6673182529E12, 3233.0], [1.667318257E12, 2923.0], [1.6673182528E12, 3058.0], [1.6673182569E12, 2907.0], [1.6673182489E12, 2093.0], [1.667318253E12, 3205.0], [1.6673182571E12, 4069.0], [1.667318249E12, 2108.0], [1.6673182531E12, 3097.0], [1.6673182572E12, 3944.0], [1.6673182492E12, 2326.0], [1.6673182533E12, 3149.0], [1.6673182574E12, 2938.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 3128.0], [1.6673182573E12, 2979.0], [1.6673182493E12, 3176.2999999999997], [1.6673182534E12, 2991.0], [1.6673182575E12, 2912.0], [1.6673182576E12, 2849.0], [1.6673182494E12, 3335.0], [1.6673182535E12, 3109.0], [1.6673182475E12, 1422.0], [1.6673182516E12, 3360.0], [1.6673182557E12, 2763.0], [1.6673182598E12, 3037.0], [1.6673182476E12, 1515.0], [1.6673182517E12, 3334.0], [1.6673182558E12, 2880.0], [1.6673182599E12, 3282.0], [1.6673182478E12, 1739.0], [1.6673182519E12, 3169.0], [1.66731826E12, 3067.0], [1.6673182477E12, 1594.0], [1.6673182518E12, 3383.0], [1.6673182559E12, 3800.0], [1.667318252E12, 3567.0], [1.6673182561E12, 2902.0], [1.6673182602E12, 2789.0], [1.6673182479E12, 1828.0], [1.667318256E12, 3848.0], [1.6673182601E12, 3054.0], [1.667318248E12, 1920.0], [1.6673182521E12, 3334.0], [1.6673182562E12, 2863.0], [1.6673182603E12, 4342.0], [1.6673182481E12, 2032.0], [1.6673182522E12, 3238.0], [1.6673182563E12, 4978.0], [1.6673182604E12, 2163.0], [1.6673182483E12, 2192.0], [1.6673182524E12, 3155.0], [1.6673182565E12, 5094.0], [1.6673182606E12, 2174.5], [1.6673182482E12, 2111.0], [1.6673182523E12, 3072.0], [1.6673182564E12, 3887.0], [1.6673182605E12, 1983.0], [1.6673182484E12, 2317.0], [1.6673182525E12, 3023.0], [1.6673182566E12, 2889.0], [1.6673182607E12, 2194.0], [1.6673182465E12, 387.0], [1.6673182506E12, 4450.0], [1.6673182547E12, 3770.5], [1.6673182588E12, 3037.0], [1.6673182464E12, 238.0], [1.6673182505E12, 4413.0], [1.6673182546E12, 2794.0], [1.6673182587E12, 3065.7999999999997], [1.6673182466E12, 411.0], [1.6673182507E12, 4590.0], [1.6673182548E12, 2753.0], [1.6673182589E12, 3010.0], [1.6673182467E12, 546.0], [1.6673182508E12, 3188.0], [1.6673182549E12, 2741.0], [1.667318259E12, 3116.0], [1.6673182469E12, 789.0], [1.667318251E12, 3249.5], [1.6673182551E12, 3832.0], [1.6673182468E12, 674.0], [1.6673182509E12, 3311.4], [1.667318255E12, 2932.0], [1.6673182591E12, 3182.0], [1.6673182552E12, 3915.0], [1.6673182593E12, 4153.0], [1.667318247E12, 929.0], [1.6673182511E12, 3175.0], [1.6673182592E12, 4133.0], [1.6673182512E12, 3275.0], [1.6673182553E12, 2773.0], [1.6673182594E12, 2986.0], [1.6673182471E12, 1000.0], [1.6673182472E12, 1081.0], [1.6673182513E12, 3339.0], [1.6673182554E12, 3909.9999999999973], [1.6673182595E12, 3314.0], [1.6673182474E12, 1317.0], [1.6673182515E12, 3227.0], [1.6673182556E12, 2755.0], [1.6673182597E12, 3346.0], [1.6673182473E12, 1168.0], [1.6673182514E12, 3230.0], [1.6673182555E12, 2834.0], [1.6673182596E12, 2970.0], [1.6673182536E12, 3101.0], [1.6673182577E12, 2890.0], [1.6673182495E12, 3408.0], [1.6673182497E12, 3596.0], [1.6673182538E12, 3069.2999999999997], [1.6673182579E12, 2953.0], [1.6673182496E12, 3508.0], [1.6673182537E12, 3132.0], [1.6673182578E12, 2927.95], [1.6673182498E12, 3727.0], [1.6673182539E12, 2998.0], [1.667318258E12, 2973.0], [1.6673182499E12, 3764.0], [1.667318254E12, 2982.95], [1.6673182581E12, 2969.0], [1.6673182501E12, 4020.0], [1.6673182542E12, 2854.0], [1.6673182583E12, 3027.0], [1.66731825E12, 3915.4], [1.6673182541E12, 2859.0], [1.6673182582E12, 3031.6], [1.6673182584E12, 2959.0], [1.6673182502E12, 4108.0], [1.6673182543E12, 2957.0], [1.6673182544E12, 4151.0], [1.6673182585E12, 3088.0], [1.6673182503E12, 4184.0], [1.6673182504E12, 4288.0], [1.6673182545E12, 4029.0], [1.6673182586E12, 3143.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6673182608E12, 841.0], [1.6673182485E12, 1483.0], [1.6673182526E12, 2813.0], [1.6673182567E12, 2703.0], [1.6673182487E12, 1519.0], [1.6673182568E12, 2663.0], [1.6673182609E12, 623.0], [1.6673182486E12, 1502.0], [1.6673182527E12, 2752.0], [1.6673182488E12, 1517.0], [1.6673182529E12, 2886.0], [1.667318257E12, 2661.0], [1.6673182528E12, 2960.0], [1.6673182569E12, 2677.0], [1.6673182489E12, 2042.0], [1.667318253E12, 2888.0], [1.6673182571E12, 2777.0], [1.667318249E12, 1970.0], [1.6673182531E12, 2945.0], [1.6673182572E12, 2766.0], [1.6673182492E12, 2032.0], [1.6673182533E12, 2852.0], [1.6673182574E12, 2732.0], [1.6673182491E12, 2024.0], [1.6673182532E12, 1730.0], [1.6673182573E12, 2675.0], [1.6673182493E12, 2050.0], [1.6673182534E12, 1696.0], [1.6673182575E12, 1467.0], [1.6673182576E12, 2814.0], [1.6673182494E12, 1864.0], [1.6673182535E12, 1619.0], [1.6673182475E12, 1226.0], [1.6673182516E12, 3152.0], [1.6673182557E12, 1454.0], [1.6673182598E12, 2824.0], [1.6673182476E12, 1341.0], [1.6673182517E12, 2917.0], [1.6673182558E12, 1303.0], [1.6673182599E12, 2766.0], [1.6673182478E12, 1533.0], [1.6673182519E12, 3096.0], [1.66731826E12, 1467.0], [1.6673182477E12, 1487.0], [1.6673182518E12, 3141.0], [1.6673182559E12, 1526.0], [1.667318252E12, 1479.0], [1.6673182561E12, 2603.0], [1.6673182602E12, 1534.0], [1.6673182479E12, 730.0], [1.667318256E12, 1326.0], [1.6673182601E12, 2635.0], [1.667318248E12, 1672.0], [1.6673182521E12, 2897.0], [1.6673182562E12, 2625.0], [1.6673182603E12, 1887.0], [1.6673182481E12, 1423.0], [1.6673182522E12, 2916.0], [1.6673182563E12, 2385.0], [1.6673182604E12, 1962.0], [1.6673182483E12, 1818.0], [1.6673182524E12, 2786.0], [1.6673182565E12, 2692.0], [1.6673182606E12, 1933.0], [1.6673182482E12, 1845.0], [1.6673182523E12, 2986.0], [1.6673182564E12, 2682.0], [1.6673182605E12, 1891.0], [1.6673182484E12, 1977.0], [1.6673182525E12, 2876.0], [1.6673182566E12, 2634.0], [1.6673182607E12, 1759.0], [1.6673182465E12, 234.0], [1.6673182506E12, 3117.0], [1.6673182547E12, 2658.0], [1.6673182588E12, 2828.0], [1.6673182464E12, 172.0], [1.6673182505E12, 3104.0], [1.6673182546E12, 2617.0], [1.6673182587E12, 1504.0], [1.6673182466E12, 411.0], [1.6673182507E12, 2806.0], [1.6673182548E12, 1592.0], [1.6673182589E12, 2836.0], [1.6673182467E12, 436.0], [1.6673182508E12, 3174.0], [1.6673182549E12, 1611.0], [1.667318259E12, 841.0], [1.6673182469E12, 643.0], [1.667318251E12, 3103.0], [1.6673182551E12, 2711.0], [1.6673182468E12, 538.0], [1.6673182509E12, 1508.0], [1.667318255E12, 1762.0], [1.6673182591E12, 2924.0], [1.6673182552E12, 1531.0], [1.6673182593E12, 2720.0], [1.667318247E12, 737.0], [1.6673182511E12, 3004.0], [1.6673182592E12, 985.0], [1.6673182512E12, 3081.0], [1.6673182553E12, 1281.0], [1.6673182594E12, 2880.0], [1.6673182471E12, 833.0], [1.6673182472E12, 954.0], [1.6673182513E12, 3061.0], [1.6673182554E12, 1455.0], [1.6673182595E12, 2895.0], [1.6673182474E12, 1126.0], [1.6673182515E12, 3127.0], [1.6673182556E12, 2637.0], [1.6673182597E12, 2968.0], [1.6673182473E12, 1058.0], [1.6673182514E12, 3105.0], [1.6673182555E12, 2672.0], [1.6673182596E12, 1435.0], [1.6673182536E12, 2782.0], [1.6673182577E12, 2718.0], [1.6673182495E12, 1548.0], [1.6673182497E12, 3531.0], [1.6673182538E12, 1412.0], [1.6673182579E12, 2812.0], [1.6673182496E12, 2090.0], [1.6673182537E12, 2760.0], [1.6673182578E12, 1560.0], [1.6673182498E12, 1558.0], [1.6673182539E12, 2836.0], [1.667318258E12, 1466.0], [1.6673182499E12, 1590.0], [1.667318254E12, 2741.0], [1.6673182581E12, 1824.0], [1.6673182501E12, 3849.0], [1.6673182542E12, 1659.0], [1.6673182583E12, 1541.0], [1.66731825E12, 2646.0], [1.6673182541E12, 1611.0], [1.6673182582E12, 1502.0], [1.6673182584E12, 2808.0], [1.6673182502E12, 4017.0], [1.6673182543E12, 2646.0], [1.6673182544E12, 1368.0], [1.6673182585E12, 2881.0], [1.6673182503E12, 4094.0], [1.6673182504E12, 1667.0], [1.6673182545E12, 1288.0], [1.6673182586E12, 2867.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6673182608E12, 1862.5], [1.6673182485E12, 1992.5], [1.6673182526E12, 3001.0], [1.6673182567E12, 2725.0], [1.6673182487E12, 1982.0], [1.6673182568E12, 2713.5], [1.6673182609E12, 1568.5], [1.6673182486E12, 1954.0], [1.6673182527E12, 3000.0], [1.6673182488E12, 2027.0], [1.6673182529E12, 2922.0], [1.667318257E12, 2747.0], [1.6673182528E12, 3025.0], [1.6673182569E12, 2761.0], [1.6673182489E12, 2064.5], [1.667318253E12, 2967.5], [1.6673182571E12, 2855.0], [1.667318249E12, 2061.0], [1.6673182531E12, 2983.0], [1.6673182572E12, 2795.0], [1.6673182492E12, 2125.0], [1.6673182533E12, 2885.0], [1.6673182574E12, 2762.5], [1.6673182491E12, 2024.0], [1.6673182532E12, 2992.0], [1.6673182573E12, 2805.0], [1.6673182493E12, 2147.0], [1.6673182534E12, 2889.5], [1.6673182575E12, 2813.0], [1.6673182576E12, 2833.0], [1.6673182494E12, 2165.5], [1.6673182535E12, 2876.5], [1.6673182475E12, 1314.0], [1.6673182516E12, 3189.0], [1.6673182557E12, 2666.0], [1.6673182598E12, 2920.5], [1.6673182476E12, 1443.0], [1.6673182517E12, 3189.0], [1.6673182558E12, 2693.5], [1.6673182599E12, 2875.0], [1.6673182478E12, 1678.0], [1.6673182519E12, 3120.0], [1.66731826E12, 2819.0], [1.6673182477E12, 1551.0], [1.6673182518E12, 3166.0], [1.6673182559E12, 2664.5], [1.667318252E12, 3107.0], [1.6673182561E12, 2702.0], [1.6673182602E12, 2199.0], [1.6673182479E12, 1770.0], [1.667318256E12, 2686.5], [1.6673182601E12, 2764.5], [1.667318248E12, 1872.0], [1.6673182521E12, 3111.0], [1.6673182562E12, 2681.5], [1.6673182603E12, 2077.0], [1.6673182481E12, 1957.0], [1.6673182522E12, 3033.0], [1.6673182563E12, 2675.0], [1.6673182604E12, 2018.0], [1.6673182483E12, 1855.0], [1.6673182524E12, 3016.5], [1.6673182565E12, 2756.0], [1.6673182606E12, 1997.0], [1.6673182482E12, 2092.0], [1.6673182523E12, 3009.5], [1.6673182564E12, 2691.0], [1.6673182605E12, 1980.5], [1.6673182484E12, 2270.0], [1.6673182525E12, 2948.0], [1.6673182566E12, 2681.0], [1.6673182607E12, 1980.0], [1.6673182465E12, 299.5], [1.6673182506E12, 3141.0], [1.6673182547E12, 2805.0], [1.6673182588E12, 2961.5], [1.6673182464E12, 194.0], [1.6673182505E12, 3179.0], [1.6673182546E12, 2764.5], [1.6673182587E12, 2945.5], [1.6673182466E12, 411.0], [1.6673182507E12, 3154.0], [1.6673182548E12, 2698.0], [1.6673182589E12, 2966.0], [1.6673182467E12, 501.0], [1.6673182508E12, 3185.0], [1.6673182549E12, 2724.5], [1.667318259E12, 2929.0], [1.6673182469E12, 712.0], [1.667318251E12, 3147.0], [1.6673182551E12, 2764.5], [1.6673182468E12, 606.5], [1.6673182509E12, 3210.5], [1.667318255E12, 2748.0], [1.6673182591E12, 2949.0], [1.6673182552E12, 2708.0], [1.6673182593E12, 2984.0], [1.667318247E12, 815.5], [1.6673182511E12, 3128.0], [1.6673182592E12, 2964.0], [1.6673182512E12, 3169.0], [1.6673182553E12, 2733.0], [1.6673182594E12, 2920.5], [1.6673182471E12, 940.0], [1.6673182472E12, 1018.5], [1.6673182513E12, 3233.0], [1.6673182554E12, 2697.0], [1.6673182595E12, 2931.5], [1.6673182474E12, 1207.0], [1.6673182515E12, 3155.0], [1.6673182556E12, 2697.0], [1.6673182597E12, 2986.0], [1.6673182473E12, 1146.0], [1.6673182514E12, 3174.0], [1.6673182555E12, 2726.0], [1.6673182596E12, 2953.0], [1.6673182536E12, 2893.0], [1.6673182577E12, 2854.5], [1.6673182495E12, 3321.0], [1.6673182497E12, 3564.5], [1.6673182538E12, 2866.5], [1.6673182579E12, 2844.0], [1.6673182496E12, 3453.0], [1.6673182537E12, 2862.5], [1.6673182578E12, 2878.0], [1.6673182498E12, 3659.5], [1.6673182539E12, 2898.0], [1.667318258E12, 2901.0], [1.6673182499E12, 3699.0], [1.667318254E12, 2894.5], [1.6673182581E12, 2926.0], [1.6673182501E12, 3952.0], [1.6673182542E12, 2782.0], [1.6673182583E12, 2932.0], [1.66731825E12, 3862.5], [1.6673182541E12, 2778.0], [1.6673182582E12, 2956.0], [1.6673182584E12, 2932.0], [1.6673182502E12, 4058.0], [1.6673182543E12, 2798.0], [1.6673182544E12, 2768.0], [1.6673182585E12, 2976.0], [1.6673182503E12, 4152.0], [1.6673182504E12, 4254.0], [1.6673182545E12, 2752.5], [1.6673182586E12, 2977.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673182609E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 505.0, "minX": 75.0, "maxY": 3831.0, "series": [{"data": [[132.0, 1265.0], [128.0, 2317.0], [135.0, 3831.0], [131.0, 3102.5], [133.0, 2822.0], [141.0, 3010.0], [140.0, 2943.5], [75.0, 505.0], [144.0, 2914.5], [155.0, 2744.0], [152.0, 2005.5], [120.0, 3264.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 155.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 505.0, "minX": 75.0, "maxY": 3831.0, "series": [{"data": [[132.0, 1265.0], [128.0, 2317.0], [135.0, 3831.0], [131.0, 3102.5], [133.0, 2822.0], [141.0, 3009.0], [140.0, 2942.5], [75.0, 505.0], [144.0, 2914.0], [155.0, 2743.5], [152.0, 2005.5], [120.0, 3264.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 155.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673182461E12, "maxY": 2140.0, "series": [{"data": [[1.6673182485E12, 160.0], [1.6673182526E12, 140.0], [1.6673182567E12, 160.0], [1.6673182487E12, 90.0], [1.6673182568E12, 90.0], [1.6673182486E12, 100.0], [1.6673182527E12, 150.0], [1.6673182488E12, 130.0], [1.6673182529E12, 130.0], [1.667318257E12, 140.0], [1.6673182528E12, 100.0], [1.6673182569E12, 70.0], [1.6673182489E12, 120.0], [1.667318253E12, 160.0], [1.6673182571E12, 90.0], [1.667318249E12, 130.0], [1.6673182531E12, 130.0], [1.6673182572E12, 60.0], [1.6673182492E12, 120.0], [1.6673182533E12, 100.0], [1.6673182574E12, 10.0], [1.6673182491E12, 10.0], [1.6673182532E12, 170.0], [1.6673182573E12, 40.0], [1.6673182493E12, 200.0], [1.6673182534E12, 180.0], [1.6673182575E12, 30.0], [1.6673182576E12, 20.0], [1.6673182494E12, 160.0], [1.6673182535E12, 100.0], [1.6673182475E12, 160.0], [1.6673182516E12, 120.0], [1.6673182557E12, 140.0], [1.6673182476E12, 170.0], [1.6673182517E12, 160.0], [1.6673182558E12, 160.0], [1.6673182599E12, 30.0], [1.6673182478E12, 160.0], [1.6673182519E12, 130.0], [1.66731826E12, 10.0], [1.6673182477E12, 90.0], [1.6673182518E12, 140.0], [1.6673182559E12, 140.0], [1.667318252E12, 130.0], [1.6673182561E12, 130.0], [1.6673182602E12, 10.0], [1.6673182479E12, 130.0], [1.667318256E12, 80.0], [1.667318248E12, 140.0], [1.6673182521E12, 150.0], [1.6673182562E12, 140.0], [1.6673182603E12, 20.0], [1.6673182481E12, 170.0], [1.6673182522E12, 150.0], [1.6673182563E12, 150.0], [1.6673182483E12, 130.0], [1.6673182524E12, 120.0], [1.6673182565E12, 150.0], [1.6673182482E12, 110.0], [1.6673182523E12, 180.0], [1.6673182564E12, 90.0], [1.6673182484E12, 130.0], [1.6673182525E12, 160.0], [1.6673182566E12, 120.0], [1.6673182465E12, 180.0], [1.6673182506E12, 130.0], [1.6673182547E12, 240.0], [1.6673182588E12, 60.0], [1.6673182464E12, 70.0], [1.6673182505E12, 110.0], [1.6673182546E12, 70.0], [1.6673182587E12, 190.0], [1.6673182466E12, 10.0], [1.6673182507E12, 130.0], [1.6673182548E12, 130.0], [1.6673182589E12, 30.0], [1.6673182467E12, 190.0], [1.6673182508E12, 50.0], [1.6673182549E12, 140.0], [1.667318259E12, 70.0], [1.6673182469E12, 130.0], [1.667318251E12, 200.0], [1.6673182551E12, 180.0], [1.6673182468E12, 170.0], [1.6673182509E12, 220.0], [1.667318255E12, 160.0], [1.6673182591E12, 50.0], [1.6673182552E12, 170.0], [1.6673182593E12, 20.0], [1.667318247E12, 100.0], [1.6673182511E12, 100.0], [1.6673182592E12, 20.0], [1.6673182512E12, 50.0], [1.6673182553E12, 70.0], [1.6673182594E12, 30.0], [1.6673182471E12, 170.0], [1.6673182472E12, 120.0], [1.6673182513E12, 190.0], [1.6673182554E12, 220.0], [1.6673182595E12, 30.0], [1.6673182474E12, 130.0], [1.6673182515E12, 90.0], [1.6673182556E12, 140.0], [1.6673182473E12, 90.0], [1.6673182514E12, 130.0], [1.6673182555E12, 150.0], [1.6673182536E12, 170.0], [1.6673182577E12, 10.0], [1.6673182495E12, 70.0], [1.6673182497E12, 180.0], [1.6673182538E12, 200.0], [1.6673182496E12, 160.0], [1.6673182537E12, 120.0], [1.6673182578E12, 40.0], [1.6673182498E12, 140.0], [1.6673182539E12, 110.0], [1.667318258E12, 50.0], [1.6673182499E12, 30.0], [1.667318254E12, 220.0], [1.6673182581E12, 40.0], [1.6673182501E12, 150.0], [1.6673182542E12, 90.0], [1.6673182583E12, 110.0], [1.66731825E12, 200.0], [1.6673182541E12, 150.0], [1.6673182582E12, 120.0], [1.6673182584E12, 90.0], [1.6673182461E12, 2140.0], [1.6673182502E12, 120.0], [1.6673182543E12, 170.0], [1.6673182544E12, 180.0], [1.6673182585E12, 120.0], [1.6673182462E12, 1780.0], [1.6673182503E12, 60.0], [1.6673182504E12, 180.0], [1.6673182545E12, 160.0], [1.6673182586E12, 140.0], [1.6673182463E12, 80.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673182603E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673182464E12, "maxY": 250.0, "series": [{"data": [[1.6673182608E12, 140.0], [1.6673182485E12, 160.0], [1.6673182526E12, 130.0], [1.6673182567E12, 190.0], [1.6673182487E12, 90.0], [1.6673182568E12, 100.0], [1.6673182609E12, 220.0], [1.6673182486E12, 100.0], [1.6673182527E12, 150.0], [1.6673182488E12, 130.0], [1.6673182529E12, 120.0], [1.667318257E12, 170.0], [1.6673182528E12, 110.0], [1.6673182569E12, 100.0], [1.6673182489E12, 120.0], [1.667318253E12, 160.0], [1.6673182571E12, 110.0], [1.667318249E12, 130.0], [1.6673182531E12, 130.0], [1.6673182572E12, 130.0], [1.6673182492E12, 120.0], [1.6673182533E12, 100.0], [1.6673182574E12, 100.0], [1.6673182491E12, 10.0], [1.6673182532E12, 170.0], [1.6673182573E12, 170.0], [1.6673182493E12, 200.0], [1.6673182534E12, 180.0], [1.6673182575E12, 170.0], [1.6673182576E12, 120.0], [1.6673182494E12, 160.0], [1.6673182535E12, 100.0], [1.6673182475E12, 160.0], [1.6673182516E12, 120.0], [1.6673182557E12, 140.0], [1.6673182598E12, 180.0], [1.6673182476E12, 170.0], [1.6673182517E12, 160.0], [1.6673182558E12, 180.0], [1.6673182599E12, 130.0], [1.6673182478E12, 160.0], [1.6673182519E12, 130.0], [1.66731826E12, 150.0], [1.6673182477E12, 90.0], [1.6673182518E12, 140.0], [1.6673182559E12, 140.0], [1.667318252E12, 130.0], [1.6673182561E12, 160.0], [1.6673182602E12, 230.0], [1.6673182479E12, 130.0], [1.667318256E12, 100.0], [1.6673182601E12, 60.0], [1.667318248E12, 140.0], [1.6673182521E12, 150.0], [1.6673182562E12, 140.0], [1.6673182603E12, 130.0], [1.6673182481E12, 170.0], [1.6673182522E12, 150.0], [1.6673182563E12, 150.0], [1.6673182604E12, 150.0], [1.6673182483E12, 130.0], [1.6673182524E12, 120.0], [1.6673182565E12, 150.0], [1.6673182606E12, 250.0], [1.6673182482E12, 110.0], [1.6673182523E12, 180.0], [1.6673182564E12, 90.0], [1.6673182605E12, 40.0], [1.6673182484E12, 130.0], [1.6673182525E12, 170.0], [1.6673182566E12, 130.0], [1.6673182607E12, 150.0], [1.6673182465E12, 180.0], [1.6673182506E12, 130.0], [1.6673182547E12, 240.0], [1.6673182588E12, 100.0], [1.6673182464E12, 70.0], [1.6673182505E12, 110.0], [1.6673182546E12, 60.0], [1.6673182587E12, 220.0], [1.6673182466E12, 10.0], [1.6673182507E12, 130.0], [1.6673182548E12, 130.0], [1.6673182589E12, 90.0], [1.6673182467E12, 190.0], [1.6673182508E12, 50.0], [1.6673182549E12, 140.0], [1.667318259E12, 140.0], [1.6673182469E12, 120.0], [1.667318251E12, 200.0], [1.6673182551E12, 180.0], [1.6673182468E12, 180.0], [1.6673182509E12, 220.0], [1.667318255E12, 160.0], [1.6673182591E12, 110.0], [1.6673182552E12, 170.0], [1.6673182593E12, 100.0], [1.667318247E12, 100.0], [1.6673182511E12, 100.0], [1.6673182592E12, 120.0], [1.6673182512E12, 50.0], [1.6673182553E12, 70.0], [1.6673182594E12, 120.0], [1.6673182471E12, 170.0], [1.6673182472E12, 120.0], [1.6673182513E12, 190.0], [1.6673182554E12, 220.0], [1.6673182595E12, 180.0], [1.6673182474E12, 130.0], [1.6673182515E12, 90.0], [1.6673182556E12, 140.0], [1.6673182597E12, 90.0], [1.6673182473E12, 90.0], [1.6673182514E12, 130.0], [1.6673182555E12, 150.0], [1.6673182596E12, 110.0], [1.6673182536E12, 170.0], [1.6673182577E12, 60.0], [1.6673182495E12, 70.0], [1.6673182497E12, 180.0], [1.6673182538E12, 200.0], [1.6673182579E12, 100.0], [1.6673182496E12, 160.0], [1.6673182537E12, 120.0], [1.6673182578E12, 200.0], [1.6673182498E12, 140.0], [1.6673182539E12, 110.0], [1.667318258E12, 140.0], [1.6673182499E12, 30.0], [1.667318254E12, 220.0], [1.6673182581E12, 80.0], [1.6673182501E12, 150.0], [1.6673182542E12, 90.0], [1.6673182583E12, 170.0], [1.66731825E12, 200.0], [1.6673182541E12, 150.0], [1.6673182582E12, 210.0], [1.6673182584E12, 110.0], [1.6673182502E12, 120.0], [1.6673182543E12, 170.0], [1.6673182544E12, 190.0], [1.6673182585E12, 120.0], [1.6673182503E12, 60.0], [1.6673182504E12, 180.0], [1.6673182545E12, 160.0], [1.6673182586E12, 160.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673182609E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673182464E12, "maxY": 250.0, "series": [{"data": [[1.6673182608E12, 140.0], [1.6673182485E12, 160.0], [1.6673182526E12, 130.0], [1.6673182567E12, 190.0], [1.6673182487E12, 90.0], [1.6673182568E12, 100.0], [1.6673182609E12, 220.0], [1.6673182486E12, 100.0], [1.6673182527E12, 150.0], [1.6673182488E12, 130.0], [1.6673182529E12, 120.0], [1.667318257E12, 170.0], [1.6673182528E12, 110.0], [1.6673182569E12, 100.0], [1.6673182489E12, 120.0], [1.667318253E12, 160.0], [1.6673182571E12, 110.0], [1.667318249E12, 130.0], [1.6673182531E12, 130.0], [1.6673182572E12, 130.0], [1.6673182492E12, 120.0], [1.6673182533E12, 100.0], [1.6673182574E12, 100.0], [1.6673182491E12, 10.0], [1.6673182532E12, 170.0], [1.6673182573E12, 170.0], [1.6673182493E12, 200.0], [1.6673182534E12, 180.0], [1.6673182575E12, 170.0], [1.6673182576E12, 120.0], [1.6673182494E12, 160.0], [1.6673182535E12, 100.0], [1.6673182475E12, 160.0], [1.6673182516E12, 120.0], [1.6673182557E12, 140.0], [1.6673182598E12, 180.0], [1.6673182476E12, 170.0], [1.6673182517E12, 160.0], [1.6673182558E12, 180.0], [1.6673182599E12, 130.0], [1.6673182478E12, 160.0], [1.6673182519E12, 130.0], [1.66731826E12, 150.0], [1.6673182477E12, 90.0], [1.6673182518E12, 140.0], [1.6673182559E12, 140.0], [1.667318252E12, 130.0], [1.6673182561E12, 160.0], [1.6673182602E12, 230.0], [1.6673182479E12, 130.0], [1.667318256E12, 100.0], [1.6673182601E12, 60.0], [1.667318248E12, 140.0], [1.6673182521E12, 150.0], [1.6673182562E12, 140.0], [1.6673182603E12, 130.0], [1.6673182481E12, 170.0], [1.6673182522E12, 150.0], [1.6673182563E12, 150.0], [1.6673182604E12, 150.0], [1.6673182483E12, 130.0], [1.6673182524E12, 120.0], [1.6673182565E12, 150.0], [1.6673182606E12, 250.0], [1.6673182482E12, 110.0], [1.6673182523E12, 180.0], [1.6673182564E12, 90.0], [1.6673182605E12, 40.0], [1.6673182484E12, 130.0], [1.6673182525E12, 170.0], [1.6673182566E12, 130.0], [1.6673182607E12, 150.0], [1.6673182465E12, 180.0], [1.6673182506E12, 130.0], [1.6673182547E12, 240.0], [1.6673182588E12, 100.0], [1.6673182464E12, 70.0], [1.6673182505E12, 110.0], [1.6673182546E12, 60.0], [1.6673182587E12, 220.0], [1.6673182466E12, 10.0], [1.6673182507E12, 130.0], [1.6673182548E12, 130.0], [1.6673182589E12, 90.0], [1.6673182467E12, 190.0], [1.6673182508E12, 50.0], [1.6673182549E12, 140.0], [1.667318259E12, 140.0], [1.6673182469E12, 120.0], [1.667318251E12, 200.0], [1.6673182551E12, 180.0], [1.6673182468E12, 180.0], [1.6673182509E12, 220.0], [1.667318255E12, 160.0], [1.6673182591E12, 110.0], [1.6673182552E12, 170.0], [1.6673182593E12, 100.0], [1.667318247E12, 100.0], [1.6673182511E12, 100.0], [1.6673182592E12, 120.0], [1.6673182512E12, 50.0], [1.6673182553E12, 70.0], [1.6673182594E12, 120.0], [1.6673182471E12, 170.0], [1.6673182472E12, 120.0], [1.6673182513E12, 190.0], [1.6673182554E12, 220.0], [1.6673182595E12, 180.0], [1.6673182474E12, 130.0], [1.6673182515E12, 90.0], [1.6673182556E12, 140.0], [1.6673182597E12, 90.0], [1.6673182473E12, 90.0], [1.6673182514E12, 130.0], [1.6673182555E12, 150.0], [1.6673182596E12, 110.0], [1.6673182536E12, 170.0], [1.6673182577E12, 60.0], [1.6673182495E12, 70.0], [1.6673182497E12, 180.0], [1.6673182538E12, 200.0], [1.6673182579E12, 100.0], [1.6673182496E12, 160.0], [1.6673182537E12, 120.0], [1.6673182578E12, 200.0], [1.6673182498E12, 140.0], [1.6673182539E12, 110.0], [1.667318258E12, 140.0], [1.6673182499E12, 30.0], [1.667318254E12, 220.0], [1.6673182581E12, 80.0], [1.6673182501E12, 150.0], [1.6673182542E12, 90.0], [1.6673182583E12, 170.0], [1.66731825E12, 200.0], [1.6673182541E12, 150.0], [1.6673182582E12, 210.0], [1.6673182584E12, 110.0], [1.6673182502E12, 120.0], [1.6673182543E12, 170.0], [1.6673182544E12, 190.0], [1.6673182585E12, 120.0], [1.6673182503E12, 60.0], [1.6673182504E12, 180.0], [1.6673182545E12, 160.0], [1.6673182586E12, 160.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673182609E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673182464E12, "maxY": 250.0, "series": [{"data": [[1.6673182608E12, 140.0], [1.6673182485E12, 160.0], [1.6673182526E12, 130.0], [1.6673182567E12, 190.0], [1.6673182487E12, 90.0], [1.6673182568E12, 100.0], [1.6673182609E12, 220.0], [1.6673182486E12, 100.0], [1.6673182527E12, 150.0], [1.6673182488E12, 130.0], [1.6673182529E12, 120.0], [1.667318257E12, 170.0], [1.6673182528E12, 110.0], [1.6673182569E12, 100.0], [1.6673182489E12, 120.0], [1.667318253E12, 160.0], [1.6673182571E12, 110.0], [1.667318249E12, 130.0], [1.6673182531E12, 130.0], [1.6673182572E12, 130.0], [1.6673182492E12, 120.0], [1.6673182533E12, 100.0], [1.6673182574E12, 100.0], [1.6673182491E12, 10.0], [1.6673182532E12, 170.0], [1.6673182573E12, 170.0], [1.6673182493E12, 200.0], [1.6673182534E12, 180.0], [1.6673182575E12, 170.0], [1.6673182576E12, 120.0], [1.6673182494E12, 160.0], [1.6673182535E12, 100.0], [1.6673182475E12, 160.0], [1.6673182516E12, 120.0], [1.6673182557E12, 140.0], [1.6673182598E12, 180.0], [1.6673182476E12, 170.0], [1.6673182517E12, 160.0], [1.6673182558E12, 180.0], [1.6673182599E12, 130.0], [1.6673182478E12, 160.0], [1.6673182519E12, 130.0], [1.66731826E12, 150.0], [1.6673182477E12, 90.0], [1.6673182518E12, 140.0], [1.6673182559E12, 140.0], [1.667318252E12, 130.0], [1.6673182561E12, 160.0], [1.6673182602E12, 230.0], [1.6673182479E12, 130.0], [1.667318256E12, 100.0], [1.6673182601E12, 60.0], [1.667318248E12, 140.0], [1.6673182521E12, 150.0], [1.6673182562E12, 140.0], [1.6673182603E12, 130.0], [1.6673182481E12, 170.0], [1.6673182522E12, 150.0], [1.6673182563E12, 150.0], [1.6673182604E12, 150.0], [1.6673182483E12, 130.0], [1.6673182524E12, 120.0], [1.6673182565E12, 150.0], [1.6673182606E12, 250.0], [1.6673182482E12, 110.0], [1.6673182523E12, 180.0], [1.6673182564E12, 90.0], [1.6673182605E12, 40.0], [1.6673182484E12, 130.0], [1.6673182525E12, 170.0], [1.6673182566E12, 130.0], [1.6673182607E12, 150.0], [1.6673182465E12, 180.0], [1.6673182506E12, 130.0], [1.6673182547E12, 240.0], [1.6673182588E12, 100.0], [1.6673182464E12, 70.0], [1.6673182505E12, 110.0], [1.6673182546E12, 60.0], [1.6673182587E12, 220.0], [1.6673182466E12, 10.0], [1.6673182507E12, 130.0], [1.6673182548E12, 130.0], [1.6673182589E12, 90.0], [1.6673182467E12, 190.0], [1.6673182508E12, 50.0], [1.6673182549E12, 140.0], [1.667318259E12, 140.0], [1.6673182469E12, 120.0], [1.667318251E12, 200.0], [1.6673182551E12, 180.0], [1.6673182468E12, 180.0], [1.6673182509E12, 220.0], [1.667318255E12, 160.0], [1.6673182591E12, 110.0], [1.6673182552E12, 170.0], [1.6673182593E12, 100.0], [1.667318247E12, 100.0], [1.6673182511E12, 100.0], [1.6673182592E12, 120.0], [1.6673182512E12, 50.0], [1.6673182553E12, 70.0], [1.6673182594E12, 120.0], [1.6673182471E12, 170.0], [1.6673182472E12, 120.0], [1.6673182513E12, 190.0], [1.6673182554E12, 220.0], [1.6673182595E12, 180.0], [1.6673182474E12, 130.0], [1.6673182515E12, 90.0], [1.6673182556E12, 140.0], [1.6673182597E12, 90.0], [1.6673182473E12, 90.0], [1.6673182514E12, 130.0], [1.6673182555E12, 150.0], [1.6673182596E12, 110.0], [1.6673182536E12, 170.0], [1.6673182577E12, 60.0], [1.6673182495E12, 70.0], [1.6673182497E12, 180.0], [1.6673182538E12, 200.0], [1.6673182579E12, 100.0], [1.6673182496E12, 160.0], [1.6673182537E12, 120.0], [1.6673182578E12, 200.0], [1.6673182498E12, 140.0], [1.6673182539E12, 110.0], [1.667318258E12, 140.0], [1.6673182499E12, 30.0], [1.667318254E12, 220.0], [1.6673182581E12, 80.0], [1.6673182501E12, 150.0], [1.6673182542E12, 90.0], [1.6673182583E12, 170.0], [1.66731825E12, 200.0], [1.6673182541E12, 150.0], [1.6673182582E12, 210.0], [1.6673182584E12, 110.0], [1.6673182502E12, 120.0], [1.6673182543E12, 170.0], [1.6673182544E12, 190.0], [1.6673182585E12, 120.0], [1.6673182503E12, 60.0], [1.6673182504E12, 180.0], [1.6673182545E12, 160.0], [1.6673182586E12, 160.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673182609E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

