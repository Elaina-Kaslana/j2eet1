/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 66.0, "minX": 0.0, "maxY": 2731.0, "series": [{"data": [[0.0, 66.0], [0.1, 100.0], [0.2, 109.0], [0.3, 109.0], [0.4, 114.0], [0.5, 174.0], [0.6, 179.0], [0.7, 198.0], [0.8, 235.0], [0.9, 240.0], [1.0, 268.0], [1.1, 276.0], [1.2, 282.0], [1.3, 284.0], [1.4, 286.0], [1.5, 289.0], [1.6, 298.0], [1.7, 302.0], [1.8, 306.0], [1.9, 311.0], [2.0, 317.0], [2.1, 320.0], [2.2, 326.0], [2.3, 328.0], [2.4, 336.0], [2.5, 342.0], [2.6, 355.0], [2.7, 364.0], [2.8, 376.0], [2.9, 381.0], [3.0, 385.0], [3.1, 394.0], [3.2, 396.0], [3.3, 408.0], [3.4, 416.0], [3.5, 418.0], [3.6, 422.0], [3.7, 425.0], [3.8, 432.0], [3.9, 434.0], [4.0, 437.0], [4.1, 447.0], [4.2, 449.0], [4.3, 452.0], [4.4, 454.0], [4.5, 455.0], [4.6, 458.0], [4.7, 460.0], [4.8, 465.0], [4.9, 472.0], [5.0, 475.0], [5.1, 479.0], [5.2, 490.0], [5.3, 510.0], [5.4, 513.0], [5.5, 516.0], [5.6, 522.0], [5.7, 527.0], [5.8, 534.0], [5.9, 539.0], [6.0, 542.0], [6.1, 545.0], [6.2, 550.0], [6.3, 553.0], [6.4, 558.0], [6.5, 561.0], [6.6, 567.0], [6.7, 573.0], [6.8, 574.0], [6.9, 583.0], [7.0, 585.0], [7.1, 592.0], [7.2, 594.0], [7.3, 596.0], [7.4, 599.0], [7.5, 605.0], [7.6, 608.0], [7.7, 609.0], [7.8, 612.0], [7.9, 616.0], [8.0, 625.0], [8.1, 631.0], [8.2, 636.0], [8.3, 637.0], [8.4, 639.0], [8.5, 644.0], [8.6, 645.0], [8.7, 650.0], [8.8, 651.0], [8.9, 656.0], [9.0, 659.0], [9.1, 665.0], [9.2, 673.0], [9.3, 678.0], [9.4, 682.0], [9.5, 686.0], [9.6, 687.0], [9.7, 688.0], [9.8, 693.0], [9.9, 697.0], [10.0, 702.0], [10.1, 707.0], [10.2, 711.0], [10.3, 716.0], [10.4, 718.0], [10.5, 718.0], [10.6, 719.0], [10.7, 722.0], [10.8, 725.0], [10.9, 726.0], [11.0, 729.0], [11.1, 732.0], [11.2, 736.0], [11.3, 740.0], [11.4, 745.0], [11.5, 748.0], [11.6, 750.0], [11.7, 754.0], [11.8, 755.0], [11.9, 758.0], [12.0, 759.0], [12.1, 761.0], [12.2, 762.0], [12.3, 763.0], [12.4, 764.0], [12.5, 767.0], [12.6, 768.0], [12.7, 770.0], [12.8, 772.0], [12.9, 774.0], [13.0, 777.0], [13.1, 777.0], [13.2, 780.0], [13.3, 782.0], [13.4, 783.0], [13.5, 784.0], [13.6, 786.0], [13.7, 788.0], [13.8, 791.0], [13.9, 793.0], [14.0, 795.0], [14.1, 797.0], [14.2, 801.0], [14.3, 802.0], [14.4, 804.0], [14.5, 806.0], [14.6, 807.0], [14.7, 809.0], [14.8, 812.0], [14.9, 815.0], [15.0, 818.0], [15.1, 818.0], [15.2, 819.0], [15.3, 821.0], [15.4, 824.0], [15.5, 827.0], [15.6, 829.0], [15.7, 831.0], [15.8, 833.0], [15.9, 834.0], [16.0, 835.0], [16.1, 837.0], [16.2, 838.0], [16.3, 839.0], [16.4, 839.0], [16.5, 839.0], [16.6, 840.0], [16.7, 841.0], [16.8, 841.0], [16.9, 842.0], [17.0, 844.0], [17.1, 845.0], [17.2, 848.0], [17.3, 851.0], [17.4, 853.0], [17.5, 854.0], [17.6, 857.0], [17.7, 858.0], [17.8, 859.0], [17.9, 859.0], [18.0, 861.0], [18.1, 862.0], [18.2, 862.0], [18.3, 862.0], [18.4, 864.0], [18.5, 870.0], [18.6, 871.0], [18.7, 873.0], [18.8, 874.0], [18.9, 875.0], [19.0, 876.0], [19.1, 877.0], [19.2, 878.0], [19.3, 879.0], [19.4, 880.0], [19.5, 882.0], [19.6, 882.0], [19.7, 883.0], [19.8, 884.0], [19.9, 886.0], [20.0, 886.0], [20.1, 889.0], [20.2, 890.0], [20.3, 893.0], [20.4, 893.0], [20.5, 894.0], [20.6, 894.0], [20.7, 897.0], [20.8, 898.0], [20.9, 899.0], [21.0, 899.0], [21.1, 900.0], [21.2, 903.0], [21.3, 904.0], [21.4, 905.0], [21.5, 907.0], [21.6, 909.0], [21.7, 910.0], [21.8, 910.0], [21.9, 911.0], [22.0, 912.0], [22.1, 913.0], [22.2, 915.0], [22.3, 915.0], [22.4, 916.0], [22.5, 918.0], [22.6, 918.0], [22.7, 920.0], [22.8, 922.0], [22.9, 922.0], [23.0, 923.0], [23.1, 925.0], [23.2, 926.0], [23.3, 927.0], [23.4, 930.0], [23.5, 931.0], [23.6, 932.0], [23.7, 933.0], [23.8, 935.0], [23.9, 938.0], [24.0, 939.0], [24.1, 941.0], [24.2, 942.0], [24.3, 943.0], [24.4, 944.0], [24.5, 946.0], [24.6, 948.0], [24.7, 949.0], [24.8, 950.0], [24.9, 952.0], [25.0, 953.0], [25.1, 954.0], [25.2, 956.0], [25.3, 956.0], [25.4, 957.0], [25.5, 958.0], [25.6, 959.0], [25.7, 959.0], [25.8, 960.0], [25.9, 960.0], [26.0, 962.0], [26.1, 962.0], [26.2, 963.0], [26.3, 964.0], [26.4, 965.0], [26.5, 966.0], [26.6, 968.0], [26.7, 968.0], [26.8, 969.0], [26.9, 972.0], [27.0, 974.0], [27.1, 975.0], [27.2, 977.0], [27.3, 977.0], [27.4, 978.0], [27.5, 979.0], [27.6, 980.0], [27.7, 980.0], [27.8, 981.0], [27.9, 982.0], [28.0, 983.0], [28.1, 983.0], [28.2, 984.0], [28.3, 986.0], [28.4, 986.0], [28.5, 987.0], [28.6, 987.0], [28.7, 988.0], [28.8, 989.0], [28.9, 990.0], [29.0, 990.0], [29.1, 992.0], [29.2, 993.0], [29.3, 995.0], [29.4, 996.0], [29.5, 996.0], [29.6, 998.0], [29.7, 999.0], [29.8, 1000.0], [29.9, 1000.0], [30.0, 1001.0], [30.1, 1001.0], [30.2, 1003.0], [30.3, 1003.0], [30.4, 1004.0], [30.5, 1004.0], [30.6, 1004.0], [30.7, 1005.0], [30.8, 1005.0], [30.9, 1005.0], [31.0, 1007.0], [31.1, 1008.0], [31.2, 1008.0], [31.3, 1009.0], [31.4, 1009.0], [31.5, 1009.0], [31.6, 1010.0], [31.7, 1011.0], [31.8, 1013.0], [31.9, 1015.0], [32.0, 1015.0], [32.1, 1015.0], [32.2, 1016.0], [32.3, 1017.0], [32.4, 1018.0], [32.5, 1018.0], [32.6, 1019.0], [32.7, 1020.0], [32.8, 1021.0], [32.9, 1023.0], [33.0, 1023.0], [33.1, 1024.0], [33.2, 1025.0], [33.3, 1026.0], [33.4, 1027.0], [33.5, 1027.0], [33.6, 1028.0], [33.7, 1028.0], [33.8, 1029.0], [33.9, 1029.0], [34.0, 1029.0], [34.1, 1029.0], [34.2, 1031.0], [34.3, 1032.0], [34.4, 1033.0], [34.5, 1034.0], [34.6, 1036.0], [34.7, 1036.0], [34.8, 1038.0], [34.9, 1039.0], [35.0, 1041.0], [35.1, 1042.0], [35.2, 1043.0], [35.3, 1043.0], [35.4, 1044.0], [35.5, 1046.0], [35.6, 1046.0], [35.7, 1046.0], [35.8, 1048.0], [35.9, 1049.0], [36.0, 1050.0], [36.1, 1051.0], [36.2, 1052.0], [36.3, 1054.0], [36.4, 1057.0], [36.5, 1058.0], [36.6, 1058.0], [36.7, 1059.0], [36.8, 1059.0], [36.9, 1060.0], [37.0, 1061.0], [37.1, 1062.0], [37.2, 1062.0], [37.3, 1065.0], [37.4, 1066.0], [37.5, 1068.0], [37.6, 1070.0], [37.7, 1071.0], [37.8, 1071.0], [37.9, 1072.0], [38.0, 1073.0], [38.1, 1073.0], [38.2, 1074.0], [38.3, 1075.0], [38.4, 1078.0], [38.5, 1079.0], [38.6, 1080.0], [38.7, 1081.0], [38.8, 1081.0], [38.9, 1083.0], [39.0, 1084.0], [39.1, 1085.0], [39.2, 1086.0], [39.3, 1086.0], [39.4, 1088.0], [39.5, 1088.0], [39.6, 1089.0], [39.7, 1091.0], [39.8, 1091.0], [39.9, 1092.0], [40.0, 1092.0], [40.1, 1093.0], [40.2, 1095.0], [40.3, 1095.0], [40.4, 1096.0], [40.5, 1097.0], [40.6, 1097.0], [40.7, 1098.0], [40.8, 1099.0], [40.9, 1101.0], [41.0, 1101.0], [41.1, 1101.0], [41.2, 1102.0], [41.3, 1103.0], [41.4, 1105.0], [41.5, 1105.0], [41.6, 1105.0], [41.7, 1108.0], [41.8, 1108.0], [41.9, 1109.0], [42.0, 1111.0], [42.1, 1111.0], [42.2, 1113.0], [42.3, 1113.0], [42.4, 1115.0], [42.5, 1115.0], [42.6, 1116.0], [42.7, 1117.0], [42.8, 1117.0], [42.9, 1119.0], [43.0, 1121.0], [43.1, 1121.0], [43.2, 1122.0], [43.3, 1125.0], [43.4, 1126.0], [43.5, 1127.0], [43.6, 1128.0], [43.7, 1130.0], [43.8, 1130.0], [43.9, 1131.0], [44.0, 1133.0], [44.1, 1134.0], [44.2, 1136.0], [44.3, 1136.0], [44.4, 1138.0], [44.5, 1138.0], [44.6, 1139.0], [44.7, 1141.0], [44.8, 1141.0], [44.9, 1142.0], [45.0, 1144.0], [45.1, 1145.0], [45.2, 1145.0], [45.3, 1146.0], [45.4, 1148.0], [45.5, 1148.0], [45.6, 1151.0], [45.7, 1152.0], [45.8, 1153.0], [45.9, 1153.0], [46.0, 1154.0], [46.1, 1154.0], [46.2, 1155.0], [46.3, 1156.0], [46.4, 1156.0], [46.5, 1157.0], [46.6, 1158.0], [46.7, 1159.0], [46.8, 1160.0], [46.9, 1161.0], [47.0, 1161.0], [47.1, 1162.0], [47.2, 1164.0], [47.3, 1166.0], [47.4, 1167.0], [47.5, 1168.0], [47.6, 1168.0], [47.7, 1169.0], [47.8, 1169.0], [47.9, 1171.0], [48.0, 1173.0], [48.1, 1173.0], [48.2, 1174.0], [48.3, 1177.0], [48.4, 1177.0], [48.5, 1178.0], [48.6, 1180.0], [48.7, 1181.0], [48.8, 1182.0], [48.9, 1184.0], [49.0, 1185.0], [49.1, 1187.0], [49.2, 1187.0], [49.3, 1188.0], [49.4, 1191.0], [49.5, 1192.0], [49.6, 1194.0], [49.7, 1194.0], [49.8, 1196.0], [49.9, 1197.0], [50.0, 1198.0], [50.1, 1199.0], [50.2, 1200.0], [50.3, 1200.0], [50.4, 1200.0], [50.5, 1202.0], [50.6, 1204.0], [50.7, 1204.0], [50.8, 1206.0], [50.9, 1206.0], [51.0, 1208.0], [51.1, 1209.0], [51.2, 1210.0], [51.3, 1212.0], [51.4, 1213.0], [51.5, 1214.0], [51.6, 1215.0], [51.7, 1216.0], [51.8, 1216.0], [51.9, 1217.0], [52.0, 1217.0], [52.1, 1218.0], [52.2, 1219.0], [52.3, 1220.0], [52.4, 1221.0], [52.5, 1221.0], [52.6, 1222.0], [52.7, 1223.0], [52.8, 1224.0], [52.9, 1226.0], [53.0, 1226.0], [53.1, 1226.0], [53.2, 1227.0], [53.3, 1229.0], [53.4, 1230.0], [53.5, 1230.0], [53.6, 1232.0], [53.7, 1232.0], [53.8, 1232.0], [53.9, 1234.0], [54.0, 1234.0], [54.1, 1235.0], [54.2, 1236.0], [54.3, 1237.0], [54.4, 1239.0], [54.5, 1240.0], [54.6, 1245.0], [54.7, 1245.0], [54.8, 1245.0], [54.9, 1248.0], [55.0, 1249.0], [55.1, 1249.0], [55.2, 1250.0], [55.3, 1250.0], [55.4, 1251.0], [55.5, 1252.0], [55.6, 1254.0], [55.7, 1254.0], [55.8, 1254.0], [55.9, 1255.0], [56.0, 1258.0], [56.1, 1258.0], [56.2, 1260.0], [56.3, 1263.0], [56.4, 1265.0], [56.5, 1265.0], [56.6, 1266.0], [56.7, 1266.0], [56.8, 1267.0], [56.9, 1268.0], [57.0, 1268.0], [57.1, 1269.0], [57.2, 1269.0], [57.3, 1270.0], [57.4, 1271.0], [57.5, 1272.0], [57.6, 1273.0], [57.7, 1274.0], [57.8, 1274.0], [57.9, 1276.0], [58.0, 1277.0], [58.1, 1277.0], [58.2, 1278.0], [58.3, 1279.0], [58.4, 1280.0], [58.5, 1281.0], [58.6, 1281.0], [58.7, 1282.0], [58.8, 1285.0], [58.9, 1285.0], [59.0, 1288.0], [59.1, 1288.0], [59.2, 1290.0], [59.3, 1291.0], [59.4, 1292.0], [59.5, 1293.0], [59.6, 1295.0], [59.7, 1295.0], [59.8, 1297.0], [59.9, 1298.0], [60.0, 1299.0], [60.1, 1302.0], [60.2, 1303.0], [60.3, 1305.0], [60.4, 1305.0], [60.5, 1306.0], [60.6, 1308.0], [60.7, 1310.0], [60.8, 1310.0], [60.9, 1311.0], [61.0, 1312.0], [61.1, 1313.0], [61.2, 1314.0], [61.3, 1314.0], [61.4, 1315.0], [61.5, 1316.0], [61.6, 1317.0], [61.7, 1318.0], [61.8, 1319.0], [61.9, 1321.0], [62.0, 1322.0], [62.1, 1323.0], [62.2, 1324.0], [62.3, 1324.0], [62.4, 1326.0], [62.5, 1326.0], [62.6, 1326.0], [62.7, 1327.0], [62.8, 1328.0], [62.9, 1329.0], [63.0, 1330.0], [63.1, 1332.0], [63.2, 1335.0], [63.3, 1336.0], [63.4, 1337.0], [63.5, 1337.0], [63.6, 1337.0], [63.7, 1338.0], [63.8, 1340.0], [63.9, 1343.0], [64.0, 1346.0], [64.1, 1347.0], [64.2, 1347.0], [64.3, 1349.0], [64.4, 1350.0], [64.5, 1350.0], [64.6, 1351.0], [64.7, 1353.0], [64.8, 1354.0], [64.9, 1355.0], [65.0, 1355.0], [65.1, 1356.0], [65.2, 1358.0], [65.3, 1359.0], [65.4, 1359.0], [65.5, 1359.0], [65.6, 1360.0], [65.7, 1361.0], [65.8, 1362.0], [65.9, 1364.0], [66.0, 1364.0], [66.1, 1365.0], [66.2, 1368.0], [66.3, 1368.0], [66.4, 1369.0], [66.5, 1370.0], [66.6, 1370.0], [66.7, 1372.0], [66.8, 1372.0], [66.9, 1374.0], [67.0, 1374.0], [67.1, 1376.0], [67.2, 1379.0], [67.3, 1379.0], [67.4, 1380.0], [67.5, 1380.0], [67.6, 1381.0], [67.7, 1382.0], [67.8, 1385.0], [67.9, 1386.0], [68.0, 1387.0], [68.1, 1389.0], [68.2, 1393.0], [68.3, 1395.0], [68.4, 1396.0], [68.5, 1397.0], [68.6, 1399.0], [68.7, 1399.0], [68.8, 1400.0], [68.9, 1401.0], [69.0, 1401.0], [69.1, 1404.0], [69.2, 1405.0], [69.3, 1409.0], [69.4, 1410.0], [69.5, 1410.0], [69.6, 1411.0], [69.7, 1413.0], [69.8, 1414.0], [69.9, 1415.0], [70.0, 1416.0], [70.1, 1418.0], [70.2, 1419.0], [70.3, 1420.0], [70.4, 1421.0], [70.5, 1422.0], [70.6, 1424.0], [70.7, 1426.0], [70.8, 1427.0], [70.9, 1430.0], [71.0, 1431.0], [71.1, 1431.0], [71.2, 1432.0], [71.3, 1433.0], [71.4, 1436.0], [71.5, 1436.0], [71.6, 1437.0], [71.7, 1439.0], [71.8, 1440.0], [71.9, 1441.0], [72.0, 1443.0], [72.1, 1444.0], [72.2, 1444.0], [72.3, 1447.0], [72.4, 1448.0], [72.5, 1449.0], [72.6, 1450.0], [72.7, 1450.0], [72.8, 1452.0], [72.9, 1453.0], [73.0, 1454.0], [73.1, 1454.0], [73.2, 1456.0], [73.3, 1458.0], [73.4, 1461.0], [73.5, 1464.0], [73.6, 1464.0], [73.7, 1469.0], [73.8, 1471.0], [73.9, 1473.0], [74.0, 1477.0], [74.1, 1478.0], [74.2, 1479.0], [74.3, 1481.0], [74.4, 1481.0], [74.5, 1482.0], [74.6, 1482.0], [74.7, 1485.0], [74.8, 1485.0], [74.9, 1487.0], [75.0, 1488.0], [75.1, 1491.0], [75.2, 1491.0], [75.3, 1492.0], [75.4, 1493.0], [75.5, 1495.0], [75.6, 1497.0], [75.7, 1497.0], [75.8, 1498.0], [75.9, 1501.0], [76.0, 1502.0], [76.1, 1503.0], [76.2, 1505.0], [76.3, 1506.0], [76.4, 1507.0], [76.5, 1508.0], [76.6, 1512.0], [76.7, 1514.0], [76.8, 1514.0], [76.9, 1515.0], [77.0, 1515.0], [77.1, 1517.0], [77.2, 1517.0], [77.3, 1521.0], [77.4, 1521.0], [77.5, 1522.0], [77.6, 1522.0], [77.7, 1523.0], [77.8, 1523.0], [77.9, 1525.0], [78.0, 1526.0], [78.1, 1528.0], [78.2, 1530.0], [78.3, 1532.0], [78.4, 1533.0], [78.5, 1534.0], [78.6, 1537.0], [78.7, 1537.0], [78.8, 1538.0], [78.9, 1540.0], [79.0, 1542.0], [79.1, 1544.0], [79.2, 1545.0], [79.3, 1546.0], [79.4, 1547.0], [79.5, 1548.0], [79.6, 1549.0], [79.7, 1552.0], [79.8, 1552.0], [79.9, 1553.0], [80.0, 1557.0], [80.1, 1558.0], [80.2, 1559.0], [80.3, 1560.0], [80.4, 1561.0], [80.5, 1562.0], [80.6, 1563.0], [80.7, 1564.0], [80.8, 1568.0], [80.9, 1570.0], [81.0, 1572.0], [81.1, 1572.0], [81.2, 1574.0], [81.3, 1574.0], [81.4, 1575.0], [81.5, 1577.0], [81.6, 1577.0], [81.7, 1579.0], [81.8, 1580.0], [81.9, 1581.0], [82.0, 1582.0], [82.1, 1585.0], [82.2, 1587.0], [82.3, 1587.0], [82.4, 1587.0], [82.5, 1588.0], [82.6, 1589.0], [82.7, 1590.0], [82.8, 1591.0], [82.9, 1592.0], [83.0, 1594.0], [83.1, 1597.0], [83.2, 1598.0], [83.3, 1598.0], [83.4, 1599.0], [83.5, 1601.0], [83.6, 1603.0], [83.7, 1603.0], [83.8, 1604.0], [83.9, 1607.0], [84.0, 1610.0], [84.1, 1612.0], [84.2, 1614.0], [84.3, 1616.0], [84.4, 1617.0], [84.5, 1617.0], [84.6, 1621.0], [84.7, 1625.0], [84.8, 1625.0], [84.9, 1626.0], [85.0, 1631.0], [85.1, 1633.0], [85.2, 1635.0], [85.3, 1637.0], [85.4, 1639.0], [85.5, 1640.0], [85.6, 1642.0], [85.7, 1646.0], [85.8, 1648.0], [85.9, 1652.0], [86.0, 1653.0], [86.1, 1655.0], [86.2, 1657.0], [86.3, 1659.0], [86.4, 1659.0], [86.5, 1665.0], [86.6, 1667.0], [86.7, 1670.0], [86.8, 1671.0], [86.9, 1673.0], [87.0, 1674.0], [87.1, 1680.0], [87.2, 1682.0], [87.3, 1684.0], [87.4, 1686.0], [87.5, 1686.0], [87.6, 1687.0], [87.7, 1691.0], [87.8, 1694.0], [87.9, 1699.0], [88.0, 1699.0], [88.1, 1700.0], [88.2, 1703.0], [88.3, 1703.0], [88.4, 1708.0], [88.5, 1708.0], [88.6, 1711.0], [88.7, 1712.0], [88.8, 1718.0], [88.9, 1723.0], [89.0, 1724.0], [89.1, 1728.0], [89.2, 1732.0], [89.3, 1733.0], [89.4, 1733.0], [89.5, 1734.0], [89.6, 1736.0], [89.7, 1741.0], [89.8, 1742.0], [89.9, 1743.0], [90.0, 1744.0], [90.1, 1749.0], [90.2, 1753.0], [90.3, 1754.0], [90.4, 1756.0], [90.5, 1757.0], [90.6, 1760.0], [90.7, 1761.0], [90.8, 1762.0], [90.9, 1763.0], [91.0, 1765.0], [91.1, 1766.0], [91.2, 1766.0], [91.3, 1770.0], [91.4, 1771.0], [91.5, 1773.0], [91.6, 1775.0], [91.7, 1778.0], [91.8, 1780.0], [91.9, 1781.0], [92.0, 1782.0], [92.1, 1785.0], [92.2, 1788.0], [92.3, 1791.0], [92.4, 1793.0], [92.5, 1795.0], [92.6, 1797.0], [92.7, 1800.0], [92.8, 1807.0], [92.9, 1808.0], [93.0, 1809.0], [93.1, 1811.0], [93.2, 1815.0], [93.3, 1816.0], [93.4, 1817.0], [93.5, 1818.0], [93.6, 1820.0], [93.7, 1822.0], [93.8, 1829.0], [93.9, 1830.0], [94.0, 1835.0], [94.1, 1836.0], [94.2, 1837.0], [94.3, 1849.0], [94.4, 1850.0], [94.5, 1855.0], [94.6, 1862.0], [94.7, 1867.0], [94.8, 1872.0], [94.9, 1872.0], [95.0, 1875.0], [95.1, 1877.0], [95.2, 1881.0], [95.3, 1884.0], [95.4, 1886.0], [95.5, 1894.0], [95.6, 1897.0], [95.7, 1899.0], [95.8, 1901.0], [95.9, 1901.0], [96.0, 1910.0], [96.1, 1917.0], [96.2, 1919.0], [96.3, 1919.0], [96.4, 1923.0], [96.5, 1925.0], [96.6, 1926.0], [96.7, 1932.0], [96.8, 1934.0], [96.9, 1935.0], [97.0, 1945.0], [97.1, 1952.0], [97.2, 1959.0], [97.3, 1963.0], [97.4, 1971.0], [97.5, 1994.0], [97.6, 2009.0], [97.7, 2021.0], [97.8, 2028.0], [97.9, 2048.0], [98.0, 2056.0], [98.1, 2092.0], [98.2, 2093.0], [98.3, 2152.0], [98.4, 2166.0], [98.5, 2174.0], [98.6, 2178.0], [98.7, 2206.0], [98.8, 2223.0], [98.9, 2225.0], [99.0, 2236.0], [99.1, 2251.0], [99.2, 2279.0], [99.3, 2298.0], [99.4, 2333.0], [99.5, 2404.0], [99.6, 2484.0], [99.7, 2501.0], [99.8, 2620.0], [99.9, 2648.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 222.0, "series": [{"data": [[0.0, 2.0], [600.0, 50.0], [700.0, 84.0], [800.0, 137.0], [900.0, 174.0], [1000.0, 222.0], [1100.0, 187.0], [1200.0, 198.0], [1300.0, 174.0], [1400.0, 143.0], [1500.0, 151.0], [1600.0, 92.0], [100.0, 12.0], [1700.0, 93.0], [1800.0, 61.0], [1900.0, 36.0], [2000.0, 14.0], [2100.0, 9.0], [2200.0, 13.0], [2300.0, 3.0], [2400.0, 4.0], [2500.0, 2.0], [2600.0, 3.0], [2700.0, 1.0], [200.0, 18.0], [300.0, 33.0], [400.0, 40.0], [500.0, 44.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 2700.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 106.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1412.0, "series": [{"data": [[0.0, 106.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1412.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 482.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 5.6, "minX": 1.6672380124E12, "maxY": 200.0, "series": [{"data": [[1.6672380131E12, 200.0], [1.6672380172E12, 200.0], [1.6672380213E12, 195.0], [1.6672380254E12, 5.6], [1.667238013E12, 200.0], [1.6672380171E12, 200.0], [1.6672380212E12, 195.0], [1.6672380253E12, 20.840000000000003], [1.6672380216E12, 192.85714285714286], [1.6672380134E12, 200.0], [1.6672380175E12, 200.0], [1.6672380132E12, 200.0], [1.6672380173E12, 200.0], [1.6672380214E12, 195.0], [1.6672380133E12, 200.0], [1.6672380174E12, 200.0], [1.6672380215E12, 194.94444444444443], [1.6672380136E12, 200.0], [1.6672380177E12, 200.0], [1.6672380218E12, 189.6], [1.6672380135E12, 200.0], [1.6672380176E12, 200.0], [1.6672380217E12, 190.30769230769232], [1.6672380139E12, 200.0], [1.667238018E12, 200.0], [1.6672380221E12, 186.0], [1.6672380137E12, 200.0], [1.6672380178E12, 200.0], [1.6672380219E12, 189.0], [1.6672380138E12, 200.0], [1.6672380179E12, 200.0], [1.667238022E12, 187.4], [1.6672380182E12, 200.0], [1.6672380223E12, 185.0], [1.6672380142E12, 200.0], [1.6672380183E12, 200.0], [1.667238014E12, 200.0], [1.6672380181E12, 200.0], [1.6672380222E12, 185.5217391304348], [1.6672380144E12, 200.0], [1.6672380185E12, 200.0], [1.6672380226E12, 181.46153846153848], [1.6672380224E12, 185.0], [1.6672380184E12, 200.0], [1.6672380225E12, 183.91666666666666], [1.6672380143E12, 200.0], [1.6672380146E12, 200.0], [1.6672380187E12, 200.0], [1.6672380228E12, 178.33333333333331], [1.6672380147E12, 200.0], [1.6672380188E12, 200.0], [1.6672380229E12, 177.0], [1.6672380145E12, 200.0], [1.6672380186E12, 200.0], [1.6672380227E12, 179.88888888888889], [1.6672380149E12, 200.0], [1.667238019E12, 200.0], [1.6672380231E12, 174.0], [1.6672380148E12, 200.0], [1.6672380189E12, 200.0], [1.667238023E12, 175.77777777777777], [1.6672380192E12, 200.0], [1.6672380233E12, 171.28571428571428], [1.6672380152E12, 200.0], [1.6672380193E12, 200.0], [1.6672380234E12, 168.11111111111111], [1.6672380232E12, 172.5], [1.667238015E12, 200.0], [1.6672380191E12, 200.0], [1.6672380151E12, 200.0], [1.6672380154E12, 200.0], [1.6672380195E12, 200.0], [1.6672380236E12, 160.8947368421053], [1.6672380153E12, 200.0], [1.6672380194E12, 200.0], [1.6672380235E12, 165.04000000000005], [1.6672380157E12, 200.0], [1.6672380198E12, 200.0], [1.6672380239E12, 152.7857142857143], [1.6672380155E12, 200.0], [1.6672380196E12, 200.0], [1.6672380237E12, 156.91666666666666], [1.6672380156E12, 200.0], [1.6672380197E12, 200.0], [1.6672380238E12, 155.66666666666669], [1.66723802E12, 200.0], [1.6672380241E12, 140.57142857142858], [1.6672380159E12, 200.0], [1.6672380158E12, 200.0], [1.6672380199E12, 200.0], [1.667238024E12, 147.64999999999998], [1.6672380162E12, 200.0], [1.6672380203E12, 198.0625], [1.6672380244E12, 123.5], [1.667238016E12, 200.0], [1.6672380201E12, 199.6], [1.6672380242E12, 133.36363636363637], [1.6672380161E12, 200.0], [1.6672380202E12, 199.0], [1.6672380243E12, 126.71428571428571], [1.6672380164E12, 200.0], [1.6672380246E12, 110.3170731707317], [1.6672380124E12, 164.57894736842104], [1.6672380165E12, 200.0], [1.6672380206E12, 197.0], [1.6672380247E12, 90.96551724137932], [1.6672380163E12, 200.0], [1.6672380204E12, 197.0], [1.6672380245E12, 119.85714285714286], [1.6672380126E12, 200.0], [1.6672380167E12, 200.0], [1.6672380208E12, 196.74418604651163], [1.6672380249E12, 71.39999999999999], [1.6672380248E12, 79.5], [1.6672380125E12, 192.5], [1.6672380166E12, 200.0], [1.6672380207E12, 197.0], [1.6672380128E12, 200.0], [1.6672380169E12, 200.0], [1.667238021E12, 196.0], [1.6672380251E12, 43.21739130434783], [1.6672380129E12, 200.0], [1.667238017E12, 200.0], [1.6672380211E12, 195.33333333333334], [1.6672380252E12, 30.88888888888889], [1.6672380168E12, 200.0], [1.6672380209E12, 196.0], [1.667238025E12, 60.88888888888889], [1.6672380127E12, 200.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6672380254E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 90.0, "minX": 1.0, "maxY": 1882.5, "series": [{"data": [[2.0, 109.0], [3.0, 114.0], [4.0, 107.0], [6.0, 106.0], [7.0, 90.0], [8.0, 110.0], [9.0, 385.0], [10.0, 179.0], [12.0, 565.5], [13.0, 174.0], [14.0, 109.0], [15.0, 198.0], [16.0, 182.0], [17.0, 224.0], [18.0, 276.0], [19.0, 774.0], [20.0, 772.0], [21.0, 675.0], [22.0, 718.0], [23.0, 297.0], [24.0, 824.3333333333334], [25.0, 819.3333333333334], [26.0, 668.0], [27.0, 761.0], [28.0, 317.0], [29.0, 342.0], [30.0, 410.0], [31.0, 388.5], [33.0, 424.0], [32.0, 419.0], [35.0, 408.0], [34.0, 411.5], [37.0, 449.5], [36.0, 432.0], [39.0, 451.5], [38.0, 451.0], [41.0, 470.0], [43.0, 464.0], [42.0, 544.0], [45.0, 651.0], [44.0, 510.0], [47.0, 437.0], [46.0, 533.5], [49.0, 489.0], [48.0, 454.0], [50.0, 428.0], [53.0, 452.0], [52.0, 457.5], [55.0, 585.0], [54.0, 479.0], [57.0, 472.0], [56.0, 1024.0], [59.0, 777.0], [58.0, 458.0], [61.0, 672.0], [63.0, 835.5], [62.0, 866.0], [67.0, 531.0], [66.0, 1128.0], [65.0, 897.0], [64.0, 1130.0], [71.0, 659.0], [70.0, 841.0], [69.0, 625.5], [68.0, 834.0], [75.0, 600.0], [74.0, 286.0], [73.0, 574.5], [72.0, 645.0], [79.0, 308.5], [78.0, 370.0], [77.0, 463.0], [76.0, 608.0], [83.0, 1009.5], [82.0, 1146.0], [81.0, 1030.0], [80.0, 806.6666666666666], [87.0, 916.0], [86.0, 1071.0], [85.0, 980.0], [84.0, 1264.0], [91.0, 857.5], [90.0, 1075.0], [89.0, 958.5], [88.0, 772.0], [95.0, 1267.6666666666667], [94.0, 763.0], [93.0, 1580.0], [92.0, 793.0], [99.0, 1160.0], [98.0, 1048.0], [97.0, 1835.5], [96.0, 718.0], [103.0, 1175.6666666666667], [102.0, 1258.0], [101.0, 910.6666666666666], [100.0, 770.0], [107.0, 650.5], [105.0, 716.0], [104.0, 774.0], [111.0, 1156.3333333333333], [109.0, 1029.0], [108.0, 1882.5], [115.0, 1127.6666666666667], [114.0, 1295.75], [113.0, 1147.5], [112.0, 864.0], [119.0, 1407.0], [118.0, 1476.5], [117.0, 1058.0], [116.0, 1242.0], [123.0, 1773.5], [122.0, 1328.25], [121.0, 1852.6666666666667], [120.0, 1039.0], [127.0, 984.0], [126.0, 1617.5], [125.0, 1370.0], [124.0, 1488.3333333333333], [135.0, 982.5], [134.0, 964.0], [133.0, 284.0], [132.0, 1065.6666666666667], [131.0, 1094.0], [128.0, 984.5], [143.0, 980.0], [142.0, 841.0], [141.0, 986.2], [140.0, 1000.0], [139.0, 1038.5], [138.0, 1095.0], [137.0, 911.0], [136.0, 945.3333333333334], [151.0, 1051.25], [150.0, 1048.6], [149.0, 969.6666666666666], [148.0, 1032.25], [147.0, 998.0], [146.0, 1053.0], [145.0, 1002.0], [144.0, 862.0], [157.0, 815.1428571428571], [159.0, 548.3333333333333], [158.0, 1307.0], [156.0, 1249.142857142857], [155.0, 1011.4], [154.0, 1139.0], [153.0, 1082.888888888889], [163.0, 495.25], [167.0, 715.0], [166.0, 1030.75], [165.0, 998.3000000000001], [164.0, 1052.5], [162.0, 988.4], [161.0, 1006.5999999999999], [160.0, 1013.25], [168.0, 988.1111111111111], [171.0, 575.3333333333334], [173.0, 996.0], [175.0, 1112.6666666666667], [174.0, 1290.35], [172.0, 1233.8666666666668], [170.0, 1087.0], [169.0, 1102.6666666666667], [178.0, 1271.2857142857142], [179.0, 1378.0], [181.0, 1053.142857142857], [183.0, 1339.25], [182.0, 1175.6285714285714], [180.0, 1293.0526315789473], [177.0, 930.9999999999999], [176.0, 1112.1538461538462], [185.0, 1394.0909090909088], [191.0, 1172.5], [190.0, 1193.5263157894738], [189.0, 1293.25], [188.0, 1649.0], [187.0, 1399.0], [186.0, 1223.6000000000001], [184.0, 1835.8], [199.0, 1259.9047619047622], [198.0, 944.0], [197.0, 1447.1578947368419], [196.0, 1404.7727272727273], [195.0, 1499.1000000000006], [194.0, 1016.3333333333334], [193.0, 1014.0], [192.0, 1113.5714285714287], [200.0, 1245.4484848484838], [1.0, 138.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[180.47549999999984, 1207.591499999997]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4790.0, "minX": 1.6672380124E12, "maxY": 471780.0, "series": [{"data": [[1.6672380131E12, 118210.0], [1.6672380172E12, 70790.0], [1.6672380213E12, 199710.0], [1.6672380254E12, 88020.0], [1.667238013E12, 210320.0], [1.6672380171E12, 121420.0], [1.6672380212E12, 165290.0], [1.6672380253E12, 221280.0], [1.6672380216E12, 123210.0], [1.6672380134E12, 195650.0], [1.6672380175E12, 207350.0], [1.6672380132E12, 42130.0], [1.6672380173E12, 91840.0], [1.6672380214E12, 78130.0], [1.6672380133E12, 216110.0], [1.6672380174E12, 129230.0], [1.6672380215E12, 308540.0], [1.6672380136E12, 202830.0], [1.6672380177E12, 18350.0], [1.6672380218E12, 122460.0], [1.6672380135E12, 209860.0], [1.6672380176E12, 190920.0], [1.6672380217E12, 109620.0], [1.6672380139E12, 141960.0], [1.667238018E12, 81140.0], [1.6672380221E12, 27620.0], [1.6672380137E12, 112420.0], [1.6672380178E12, 235390.0], [1.6672380219E12, 43660.0], [1.6672380138E12, 54270.0], [1.6672380179E12, 177860.0], [1.667238022E12, 127830.0], [1.6672380182E12, 84030.0], [1.6672380223E12, 151330.0], [1.6672380142E12, 104620.0], [1.6672380183E12, 243690.0], [1.667238014E12, 171700.0], [1.6672380181E12, 95380.0], [1.6672380222E12, 210780.0], [1.6672380144E12, 202370.0], [1.6672380185E12, 205560.0], [1.6672380226E12, 471780.0], [1.6672380224E12, 8190.0], [1.6672380184E12, 119210.0], [1.6672380225E12, 109420.0], [1.6672380143E12, 230500.0], [1.6672380146E12, 52850.0], [1.6672380187E12, 127060.0], [1.6672380228E12, 135840.0], [1.6672380147E12, 292140.0], [1.6672380188E12, 181750.0], [1.6672380229E12, 74300.0], [1.6672380145E12, 17870.0], [1.6672380186E12, 74770.0], [1.6672380227E12, 80080.0], [1.6672380149E12, 134110.0], [1.667238019E12, 10240.0], [1.6672380231E12, 159320.0], [1.6672380148E12, 56210.0], [1.6672380189E12, 152600.0], [1.667238023E12, 152630.0], [1.6672380192E12, 290600.0], [1.6672380233E12, 123990.0], [1.6672380152E12, 185880.0], [1.6672380193E12, 44070.0], [1.6672380234E12, 77140.0], [1.6672380232E12, 94940.0], [1.667238015E12, 28840.0], [1.6672380191E12, 19190.0], [1.6672380151E12, 104250.0], [1.6672380154E12, 95880.0], [1.6672380195E12, 5940.0], [1.6672380236E12, 173720.0], [1.6672380153E12, 349560.0], [1.6672380194E12, 257450.0], [1.6672380235E12, 227200.0], [1.6672380157E12, 58400.0], [1.6672380198E12, 247480.0], [1.6672380239E12, 121310.0], [1.6672380155E12, 129790.0], [1.6672380196E12, 215820.0], [1.6672380237E12, 107690.0], [1.6672380156E12, 213800.0], [1.6672380197E12, 9970.0], [1.6672380238E12, 112010.0], [1.66723802E12, 201460.0], [1.6672380241E12, 60070.0], [1.6672380159E12, 72150.0], [1.6672380158E12, 37690.0], [1.6672380199E12, 42120.0], [1.667238024E12, 184260.0], [1.6672380162E12, 375110.0], [1.6672380203E12, 132760.0], [1.6672380244E12, 157490.0], [1.667238016E12, 155100.0], [1.6672380201E12, 136290.0], [1.6672380242E12, 192780.0], [1.6672380161E12, 32280.0], [1.6672380202E12, 63690.0], [1.6672380243E12, 61550.0], [1.6672380164E12, 62980.0], [1.6672380246E12, 372350.0], [1.6672380124E12, 171320.0], [1.6672380165E12, 368830.0], [1.6672380206E12, 16160.0], [1.6672380247E12, 259490.0], [1.6672380163E12, 15860.0], [1.6672380204E12, 133130.0], [1.6672380245E12, 55190.0], [1.6672380126E12, 129240.0], [1.6672380167E12, 133420.0], [1.6672380208E12, 386490.0], [1.6672380249E12, 87440.0], [1.6672380248E12, 132150.0], [1.6672380125E12, 17340.0], [1.6672380166E12, 135270.0], [1.6672380207E12, 170230.0], [1.6672380128E12, 98200.0], [1.6672380169E12, 200190.0], [1.667238021E12, 58740.0], [1.6672380251E12, 204630.0], [1.6672380129E12, 202820.0], [1.667238017E12, 190940.0], [1.6672380211E12, 75890.0], [1.6672380252E12, 80150.0], [1.6672380168E12, 18410.0], [1.6672380209E12, 9710.0], [1.667238025E12, 154960.0], [1.6672380127E12, 100010.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6672380131E12, 62270.0], [1.6672380172E12, 38320.0], [1.6672380213E12, 105380.0], [1.6672380254E12, 47900.0], [1.667238013E12, 110170.0], [1.6672380171E12, 62270.0], [1.6672380212E12, 91010.0], [1.6672380253E12, 119750.0], [1.6672380216E12, 67060.0], [1.6672380134E12, 105380.0], [1.6672380175E12, 110170.0], [1.6672380132E12, 23950.0], [1.6672380173E12, 47900.0], [1.6672380214E12, 43110.0], [1.6672380133E12, 114960.0], [1.6672380174E12, 71850.0], [1.6672380215E12, 172440.0], [1.6672380136E12, 105380.0], [1.6672380177E12, 9580.0], [1.6672380218E12, 71850.0], [1.6672380135E12, 114960.0], [1.6672380176E12, 100590.0], [1.6672380217E12, 62270.0], [1.6672380139E12, 76640.0], [1.667238018E12, 43110.0], [1.6672380221E12, 14370.0], [1.6672380137E12, 62270.0], [1.6672380178E12, 129330.0], [1.6672380219E12, 23950.0], [1.6672380138E12, 28740.0], [1.6672380179E12, 91010.0], [1.667238022E12, 71850.0], [1.6672380182E12, 43110.0], [1.6672380223E12, 81430.0], [1.6672380142E12, 57480.0], [1.6672380183E12, 129330.0], [1.667238014E12, 91010.0], [1.6672380181E12, 52690.0], [1.6672380222E12, 110170.0], [1.6672380144E12, 110170.0], [1.6672380185E12, 114960.0], [1.6672380226E12, 249080.0], [1.6672380224E12, 4790.0], [1.6672380184E12, 67060.0], [1.6672380225E12, 57480.0], [1.6672380143E12, 124540.0], [1.6672380146E12, 28740.0], [1.6672380187E12, 67060.0], [1.6672380228E12, 71850.0], [1.6672380147E12, 153280.0], [1.6672380188E12, 95800.0], [1.6672380229E12, 38320.0], [1.6672380145E12, 9580.0], [1.6672380186E12, 38320.0], [1.6672380227E12, 43110.0], [1.6672380149E12, 71850.0], [1.667238019E12, 4790.0], [1.6672380231E12, 86220.0], [1.6672380148E12, 28740.0], [1.6672380189E12, 81430.0], [1.667238023E12, 86220.0], [1.6672380192E12, 158070.0], [1.6672380233E12, 67060.0], [1.6672380152E12, 100590.0], [1.6672380193E12, 23950.0], [1.6672380234E12, 43110.0], [1.6672380232E12, 47900.0], [1.667238015E12, 14370.0], [1.6672380191E12, 9580.0], [1.6672380151E12, 62270.0], [1.6672380154E12, 52690.0], [1.6672380195E12, 4790.0], [1.6672380236E12, 91010.0], [1.6672380153E12, 191600.0], [1.6672380194E12, 138910.0], [1.6672380235E12, 119750.0], [1.6672380157E12, 33530.0], [1.6672380198E12, 134120.0], [1.6672380239E12, 67060.0], [1.6672380155E12, 71850.0], [1.6672380196E12, 114960.0], [1.6672380237E12, 57480.0], [1.6672380156E12, 114960.0], [1.6672380197E12, 4790.0], [1.6672380238E12, 57480.0], [1.66723802E12, 110170.0], [1.6672380241E12, 33530.0], [1.6672380159E12, 38320.0], [1.6672380158E12, 19160.0], [1.6672380199E12, 23950.0], [1.667238024E12, 95800.0], [1.6672380162E12, 196390.0], [1.6672380203E12, 76640.0], [1.6672380244E12, 86220.0], [1.667238016E12, 81430.0], [1.6672380201E12, 71850.0], [1.6672380242E12, 105380.0], [1.6672380161E12, 19160.0], [1.6672380202E12, 33530.0], [1.6672380243E12, 33530.0], [1.6672380164E12, 33530.0], [1.6672380246E12, 196390.0], [1.6672380124E12, 91010.0], [1.6672380165E12, 196390.0], [1.6672380206E12, 9580.0], [1.6672380247E12, 138910.0], [1.6672380163E12, 9580.0], [1.6672380204E12, 71850.0], [1.6672380245E12, 33530.0], [1.6672380126E12, 71850.0], [1.6672380167E12, 71850.0], [1.6672380208E12, 205970.0], [1.6672380249E12, 47900.0], [1.6672380248E12, 67060.0], [1.6672380125E12, 9580.0], [1.6672380166E12, 71850.0], [1.6672380207E12, 95800.0], [1.6672380128E12, 52690.0], [1.6672380169E12, 105380.0], [1.667238021E12, 33530.0], [1.6672380251E12, 110170.0], [1.6672380129E12, 110170.0], [1.667238017E12, 100590.0], [1.6672380211E12, 43110.0], [1.6672380252E12, 43110.0], [1.6672380168E12, 9580.0], [1.6672380209E12, 4790.0], [1.667238025E12, 86220.0], [1.6672380127E12, 52690.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6672380254E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 144.4, "minX": 1.6672380124E12, "maxY": 1801.3000000000002, "series": [{"data": [[1.6672380131E12, 833.4615384615385], [1.6672380172E12, 1644.875], [1.6672380213E12, 1544.0454545454545], [1.6672380254E12, 144.4], [1.667238013E12, 834.304347826087], [1.6672380171E12, 1315.1538461538462], [1.6672380212E12, 1367.421052631579], [1.6672380253E12, 590.36], [1.6672380216E12, 1036.2857142857142], [1.6672380134E12, 947.1818181818181], [1.6672380175E12, 1137.826086956522], [1.6672380132E12, 892.6], [1.6672380173E12, 1801.3000000000002], [1.6672380214E12, 1620.111111111111], [1.6672380133E12, 985.2916666666666], [1.6672380174E12, 1020.7333333333333], [1.6672380215E12, 1519.9166666666667], [1.6672380136E12, 1088.863636363636], [1.6672380177E12, 1145.0], [1.6672380218E12, 1285.6], [1.6672380135E12, 1104.3333333333333], [1.6672380176E12, 1259.5238095238096], [1.6672380217E12, 1147.2307692307693], [1.6672380139E12, 1159.75], [1.667238018E12, 868.4444444444445], [1.6672380221E12, 1215.3333333333333], [1.6672380137E12, 938.923076923077], [1.6672380178E12, 1623.6296296296298], [1.6672380219E12, 1098.4], [1.6672380138E12, 1047.6666666666667], [1.6672380179E12, 943.3157894736843], [1.667238022E12, 1352.9333333333334], [1.6672380182E12, 1702.0], [1.6672380223E12, 1407.1176470588236], [1.6672380142E12, 1509.6666666666667], [1.6672380183E12, 1518.0740740740746], [1.667238014E12, 1190.1578947368419], [1.6672380181E12, 1484.6363636363635], [1.6672380222E12, 1318.3478260869563], [1.6672380144E12, 1297.9565217391305], [1.6672380185E12, 1243.791666666667], [1.6672380226E12, 1175.4423076923074], [1.6672380224E12, 1235.0], [1.6672380184E12, 1341.6428571428573], [1.6672380225E12, 1623.9166666666667], [1.6672380143E12, 1229.230769230769], [1.6672380146E12, 1430.5], [1.6672380187E12, 1217.5714285714287], [1.6672380228E12, 1418.0666666666666], [1.6672380147E12, 1453.3124999999995], [1.6672380188E12, 1119.2], [1.6672380229E12, 968.75], [1.6672380145E12, 1172.5], [1.6672380186E12, 993.0], [1.6672380227E12, 1443.5555555555557], [1.6672380149E12, 960.8666666666667], [1.667238019E12, 1015.0], [1.6672380231E12, 1310.1111111111109], [1.6672380148E12, 1324.1666666666665], [1.6672380189E12, 1320.235294117647], [1.667238023E12, 1081.7777777777776], [1.6672380192E12, 1484.9393939393938], [1.6672380233E12, 1019.5714285714287], [1.6672380152E12, 1572.428571428571], [1.6672380193E12, 1383.6], [1.6672380234E12, 1082.1111111111109], [1.6672380232E12, 1356.3999999999999], [1.667238015E12, 1274.3333333333333], [1.6672380191E12, 1690.0], [1.6672380151E12, 1328.6923076923076], [1.6672380154E12, 1187.4545454545455], [1.6672380195E12, 1080.0], [1.6672380236E12, 1007.7368421052632], [1.6672380153E12, 1438.4750000000001], [1.6672380194E12, 918.1034482758621], [1.6672380235E12, 1022.0799999999999], [1.6672380157E12, 1220.142857142857], [1.6672380198E12, 1534.3214285714284], [1.6672380239E12, 1070.642857142857], [1.6672380155E12, 1345.3333333333333], [1.6672380196E12, 1372.1250000000002], [1.6672380237E12, 1457.0], [1.6672380156E12, 1293.458333333333], [1.6672380197E12, 1422.0], [1.6672380238E12, 1105.25], [1.66723802E12, 1796.8695652173913], [1.6672380241E12, 982.0], [1.6672380159E12, 1149.875], [1.6672380158E12, 1344.5], [1.6672380199E12, 1643.8], [1.667238024E12, 1008.05], [1.6672380162E12, 1307.9024390243906], [1.6672380203E12, 1126.1874999999998], [1.6672380244E12, 1603.4999999999998], [1.667238016E12, 1060.9411764705883], [1.6672380201E12, 1573.3333333333333], [1.6672380242E12, 1010.5454545454546], [1.6672380161E12, 1144.75], [1.6672380202E12, 1352.7142857142858], [1.6672380243E12, 1395.5714285714287], [1.6672380164E12, 1555.4285714285713], [1.6672380246E12, 1117.1463414634152], [1.6672380124E12, 310.94736842105266], [1.6672380165E12, 1359.5121951219514], [1.6672380206E12, 1279.5], [1.6672380247E12, 1153.2758620689654], [1.6672380163E12, 1616.5], [1.6672380204E12, 1126.6000000000001], [1.6672380245E12, 1456.5714285714287], [1.6672380126E12, 534.7333333333333], [1.6672380167E12, 1184.3333333333335], [1.6672380208E12, 1565.5348837209306], [1.6672380249E12, 626.5], [1.6672380248E12, 678.9999999999999], [1.6672380125E12, 408.0], [1.6672380166E12, 1365.5333333333335], [1.6672380207E12, 1621.0000000000002], [1.6672380128E12, 739.090909090909], [1.6672380169E12, 1449.090909090909], [1.667238021E12, 1252.857142857143], [1.6672380251E12, 472.17391304347825], [1.6672380129E12, 810.9565217391303], [1.667238017E12, 955.3333333333335], [1.6672380211E12, 1287.6666666666667], [1.6672380252E12, 389.5555555555555], [1.6672380168E12, 1625.5], [1.6672380209E12, 958.0], [1.667238025E12, 764.7777777777777], [1.6672380127E12, 600.1818181818182]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6672380254E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 144.4, "minX": 1.6672380124E12, "maxY": 1801.0, "series": [{"data": [[1.6672380131E12, 833.3076923076923], [1.6672380172E12, 1644.875], [1.6672380213E12, 1543.9545454545455], [1.6672380254E12, 144.4], [1.667238013E12, 834.1304347826087], [1.6672380171E12, 1315.1538461538462], [1.6672380212E12, 1366.6842105263158], [1.6672380253E12, 590.1200000000001], [1.6672380216E12, 1036.2857142857142], [1.6672380134E12, 946.9545454545455], [1.6672380175E12, 1137.5652173913043], [1.6672380132E12, 886.8], [1.6672380173E12, 1801.0], [1.6672380214E12, 1620.0], [1.6672380133E12, 982.4166666666665], [1.6672380174E12, 1020.6], [1.6672380215E12, 1519.5555555555554], [1.6672380136E12, 1088.5909090909088], [1.6672380177E12, 1145.0], [1.6672380218E12, 1285.5333333333333], [1.6672380135E12, 1104.2083333333328], [1.6672380176E12, 1259.3809523809525], [1.6672380217E12, 1146.7692307692307], [1.6672380139E12, 1159.3750000000005], [1.667238018E12, 868.3333333333334], [1.6672380221E12, 1215.0], [1.6672380137E12, 938.8461538461539], [1.6672380178E12, 1623.4814814814815], [1.6672380219E12, 1098.2], [1.6672380138E12, 1041.1666666666667], [1.6672380179E12, 943.3157894736843], [1.667238022E12, 1352.3333333333335], [1.6672380182E12, 1700.3333333333333], [1.6672380223E12, 1407.0588235294117], [1.6672380142E12, 1509.583333333333], [1.6672380183E12, 1518.0370370370372], [1.667238014E12, 1190.0], [1.6672380181E12, 1484.6363636363635], [1.6672380222E12, 1318.1739130434785], [1.6672380144E12, 1297.8260869565215], [1.6672380185E12, 1243.6666666666663], [1.6672380226E12, 1174.2115384615386], [1.6672380224E12, 1235.0], [1.6672380184E12, 1341.5714285714287], [1.6672380225E12, 1623.8333333333335], [1.6672380143E12, 1229.1153846153848], [1.6672380146E12, 1430.0], [1.6672380187E12, 1217.142857142857], [1.6672380228E12, 1417.9333333333334], [1.6672380147E12, 1453.25], [1.6672380188E12, 1119.1499999999999], [1.6672380229E12, 968.75], [1.6672380145E12, 1172.5], [1.6672380186E12, 992.5], [1.6672380227E12, 1442.7777777777778], [1.6672380149E12, 960.8000000000001], [1.667238019E12, 1015.0], [1.6672380231E12, 1309.7222222222224], [1.6672380148E12, 1324.1666666666665], [1.6672380189E12, 1320.1176470588236], [1.667238023E12, 1081.0555555555557], [1.6672380192E12, 1484.5454545454547], [1.6672380233E12, 1019.3571428571427], [1.6672380152E12, 1571.904761904762], [1.6672380193E12, 1383.2], [1.6672380234E12, 1082.1111111111109], [1.6672380232E12, 1356.0], [1.667238015E12, 1274.3333333333333], [1.6672380191E12, 1689.5], [1.6672380151E12, 1328.3076923076922], [1.6672380154E12, 1187.2727272727273], [1.6672380195E12, 1080.0], [1.6672380236E12, 1007.2105263157894], [1.6672380153E12, 1437.725], [1.6672380194E12, 917.8620689655172], [1.6672380235E12, 1021.7199999999999], [1.6672380157E12, 1220.0], [1.6672380198E12, 1534.142857142857], [1.6672380239E12, 1070.5714285714282], [1.6672380155E12, 1345.0000000000002], [1.6672380196E12, 1371.1666666666665], [1.6672380237E12, 1456.9166666666665], [1.6672380156E12, 1293.3333333333333], [1.6672380197E12, 1422.0], [1.6672380238E12, 1105.25], [1.66723802E12, 1796.695652173913], [1.6672380241E12, 979.8571428571429], [1.6672380159E12, 1149.875], [1.6672380158E12, 1344.25], [1.6672380199E12, 1643.6], [1.667238024E12, 1007.7], [1.6672380162E12, 1306.5121951219508], [1.6672380203E12, 1125.9375000000002], [1.6672380244E12, 1602.6666666666667], [1.667238016E12, 1060.9411764705883], [1.6672380201E12, 1573.3333333333333], [1.6672380242E12, 1009.5909090909091], [1.6672380161E12, 1142.75], [1.6672380202E12, 1352.4285714285713], [1.6672380243E12, 1395.2857142857142], [1.6672380164E12, 1554.5714285714287], [1.6672380246E12, 1116.9024390243897], [1.6672380124E12, 306.7894736842106], [1.6672380165E12, 1359.3902439024396], [1.6672380206E12, 1279.0], [1.6672380247E12, 1153.103448275862], [1.6672380163E12, 1616.5], [1.6672380204E12, 1126.6000000000001], [1.6672380245E12, 1454.7142857142856], [1.6672380126E12, 534.6666666666666], [1.6672380167E12, 1184.2666666666669], [1.6672380208E12, 1565.0232558139535], [1.6672380249E12, 626.3], [1.6672380248E12, 678.9999999999999], [1.6672380125E12, 408.0], [1.6672380166E12, 1365.5333333333335], [1.6672380207E12, 1619.5500000000002], [1.6672380128E12, 738.9999999999999], [1.6672380169E12, 1449.090909090909], [1.667238021E12, 1252.7142857142856], [1.6672380251E12, 472.0869565217392], [1.6672380129E12, 809.7391304347826], [1.667238017E12, 955.3333333333335], [1.6672380211E12, 1286.9999999999998], [1.6672380252E12, 389.5555555555555], [1.6672380168E12, 1621.5], [1.6672380209E12, 958.0], [1.667238025E12, 764.2222222222222], [1.6672380127E12, 598.0909090909091]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6672380254E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6672380124E12, "maxY": 62.63636363636363, "series": [{"data": [[1.6672380131E12, 1.1538461538461537], [1.6672380172E12, 0.0], [1.6672380213E12, 0.0], [1.6672380254E12, 0.0], [1.667238013E12, 40.086956521739125], [1.6672380171E12, 0.0], [1.6672380212E12, 0.0], [1.6672380253E12, 0.0], [1.6672380216E12, 0.0], [1.6672380134E12, 0.8181818181818182], [1.6672380175E12, 0.0], [1.6672380132E12, 0.8], [1.6672380173E12, 0.0], [1.6672380214E12, 0.0], [1.6672380133E12, 1.0833333333333333], [1.6672380174E12, 0.0], [1.6672380215E12, 0.0], [1.6672380136E12, 0.7727272727272726], [1.6672380177E12, 0.0], [1.6672380218E12, 0.0], [1.6672380135E12, 1.0833333333333335], [1.6672380176E12, 0.0], [1.6672380217E12, 0.0], [1.6672380139E12, 0.625], [1.667238018E12, 0.0], [1.6672380221E12, 0.0], [1.6672380137E12, 0.4615384615384615], [1.6672380178E12, 0.0], [1.6672380219E12, 0.0], [1.6672380138E12, 0.0], [1.6672380179E12, 0.0], [1.667238022E12, 0.0], [1.6672380182E12, 0.0], [1.6672380223E12, 0.0], [1.6672380142E12, 0.08333333333333334], [1.6672380183E12, 0.0], [1.667238014E12, 0.368421052631579], [1.6672380181E12, 0.0], [1.6672380222E12, 0.0], [1.6672380144E12, 0.13043478260869565], [1.6672380185E12, 0.0], [1.6672380226E12, 0.0], [1.6672380224E12, 0.0], [1.6672380184E12, 0.0], [1.6672380225E12, 0.0], [1.6672380143E12, 0.03846153846153847], [1.6672380146E12, 0.0], [1.6672380187E12, 0.0], [1.6672380228E12, 0.0], [1.6672380147E12, 0.0], [1.6672380188E12, 0.0], [1.6672380229E12, 0.0], [1.6672380145E12, 0.0], [1.6672380186E12, 0.0], [1.6672380227E12, 0.0], [1.6672380149E12, 0.0], [1.667238019E12, 0.0], [1.6672380231E12, 0.0], [1.6672380148E12, 0.0], [1.6672380189E12, 0.0], [1.667238023E12, 0.0], [1.6672380192E12, 0.0], [1.6672380233E12, 0.0], [1.6672380152E12, 0.0], [1.6672380193E12, 0.0], [1.6672380234E12, 0.0], [1.6672380232E12, 0.0], [1.667238015E12, 0.0], [1.6672380191E12, 0.0], [1.6672380151E12, 0.0], [1.6672380154E12, 0.0], [1.6672380195E12, 0.0], [1.6672380236E12, 0.0], [1.6672380153E12, 0.0], [1.6672380194E12, 0.0], [1.6672380235E12, 0.0], [1.6672380157E12, 0.0], [1.6672380198E12, 0.0], [1.6672380239E12, 0.0], [1.6672380155E12, 0.0], [1.6672380196E12, 0.0], [1.6672380237E12, 0.0], [1.6672380156E12, 0.0], [1.6672380197E12, 0.0], [1.6672380238E12, 0.0], [1.66723802E12, 0.0], [1.6672380241E12, 0.0], [1.6672380159E12, 0.0], [1.6672380158E12, 0.0], [1.6672380199E12, 0.0], [1.667238024E12, 0.0], [1.6672380162E12, 0.0], [1.6672380203E12, 0.0], [1.6672380244E12, 0.0], [1.667238016E12, 0.0], [1.6672380201E12, 0.0], [1.6672380242E12, 0.0], [1.6672380161E12, 0.0], [1.6672380202E12, 0.0], [1.6672380243E12, 0.0], [1.6672380164E12, 0.0], [1.6672380246E12, 0.0], [1.6672380124E12, 46.00000000000001], [1.6672380165E12, 0.0], [1.6672380206E12, 0.0], [1.6672380247E12, 0.0], [1.6672380163E12, 0.0], [1.6672380204E12, 0.0], [1.6672380245E12, 0.0], [1.6672380126E12, 56.800000000000004], [1.6672380167E12, 0.0], [1.6672380208E12, 0.0], [1.6672380249E12, 0.0], [1.6672380248E12, 0.0], [1.6672380125E12, 47.5], [1.6672380166E12, 0.0], [1.6672380207E12, 0.0], [1.6672380128E12, 62.63636363636363], [1.6672380169E12, 0.0], [1.667238021E12, 0.0], [1.6672380251E12, 0.0], [1.6672380129E12, 49.56521739130436], [1.667238017E12, 0.0], [1.6672380211E12, 0.0], [1.6672380252E12, 0.0], [1.6672380168E12, 0.0], [1.6672380209E12, 0.0], [1.667238025E12, 0.0], [1.6672380127E12, 58.36363636363637]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6672380254E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 66.0, "minX": 1.6672380124E12, "maxY": 2731.0, "series": [{"data": [[1.6672380131E12, 954.0], [1.6672380172E12, 1708.0], [1.6672380213E12, 2178.0], [1.6672380254E12, 385.0], [1.667238013E12, 946.0], [1.6672380171E12, 1725.0], [1.6672380212E12, 1822.0], [1.6672380253E12, 934.0], [1.6672380216E12, 1492.0], [1.6672380134E12, 1240.0], [1.6672380175E12, 1652.0], [1.6672380132E12, 1034.0], [1.6672380173E12, 1946.0], [1.6672380214E12, 1994.0], [1.6672380133E12, 1161.0], [1.6672380174E12, 1414.0], [1.6672380215E12, 2298.0], [1.6672380136E12, 1431.0], [1.6672380177E12, 1231.0], [1.6672380218E12, 1682.0], [1.6672380135E12, 1316.0], [1.6672380176E12, 1756.0], [1.6672380217E12, 1454.0], [1.6672380139E12, 1491.0], [1.667238018E12, 1092.0], [1.6672380221E12, 1386.0], [1.6672380137E12, 1272.0], [1.6672380178E12, 2257.0], [1.6672380219E12, 1647.0], [1.6672380138E12, 1241.0], [1.6672380179E12, 1359.0], [1.667238022E12, 1836.0], [1.6672380182E12, 1766.0], [1.6672380223E12, 2152.0], [1.6672380142E12, 1818.0], [1.6672380183E12, 1829.0], [1.667238014E12, 1595.0], [1.6672380181E12, 1659.0], [1.6672380222E12, 2009.0], [1.6672380144E12, 1935.0], [1.6672380185E12, 1578.0], [1.6672380226E12, 1873.0], [1.6672380224E12, 1235.0], [1.6672380184E12, 1526.0], [1.6672380225E12, 2362.0], [1.6672380143E12, 1798.0], [1.6672380146E12, 1733.0], [1.6672380187E12, 2310.0], [1.6672380228E12, 1656.0], [1.6672380147E12, 2279.0], [1.6672380188E12, 1450.0], [1.6672380229E12, 1643.0], [1.6672380145E12, 1209.0], [1.6672380186E12, 1220.0], [1.6672380227E12, 1631.0], [1.6672380149E12, 1315.0], [1.667238019E12, 1015.0], [1.6672380231E12, 1562.0], [1.6672380148E12, 1897.0], [1.6672380189E12, 1560.0], [1.667238023E12, 1252.0], [1.6672380192E12, 2225.0], [1.6672380233E12, 1708.0], [1.6672380152E12, 2501.0], [1.6672380193E12, 1658.0], [1.6672380234E12, 1206.0], [1.6672380232E12, 1591.0], [1.667238015E12, 1389.0], [1.6672380191E12, 1778.0], [1.6672380151E12, 1723.0], [1.6672380154E12, 2051.0], [1.6672380195E12, 1080.0], [1.6672380236E12, 1028.0], [1.6672380153E12, 1884.0], [1.6672380194E12, 1267.0], [1.6672380235E12, 1245.0], [1.6672380157E12, 1411.0], [1.6672380198E12, 2056.0], [1.6672380239E12, 1292.0], [1.6672380155E12, 1910.0], [1.6672380196E12, 1932.0], [1.6672380237E12, 2620.0], [1.6672380156E12, 1945.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 2496.0], [1.66723802E12, 2279.0], [1.6672380241E12, 1068.0], [1.6672380159E12, 1572.0], [1.6672380158E12, 1604.0], [1.6672380199E12, 1872.0], [1.667238024E12, 1129.0], [1.6672380162E12, 1902.0], [1.6672380203E12, 1523.0], [1.6672380244E12, 2454.0], [1.667238016E12, 1742.0], [1.6672380201E12, 2251.0], [1.6672380242E12, 2556.0], [1.6672380161E12, 1413.0], [1.6672380202E12, 1836.0], [1.6672380243E12, 1743.0], [1.6672380164E12, 2167.0], [1.6672380246E12, 2648.0], [1.6672380124E12, 374.0], [1.6672380165E12, 2124.0], [1.6672380206E12, 1359.0], [1.6672380247E12, 2731.0], [1.6672380163E12, 1617.0], [1.6672380204E12, 1272.0], [1.6672380245E12, 2484.0], [1.6672380126E12, 574.0], [1.6672380167E12, 1877.0], [1.6672380208E12, 2174.0], [1.6672380249E12, 841.0], [1.6672380248E12, 1146.0], [1.6672380125E12, 434.0], [1.6672380166E12, 1863.0], [1.6672380207E12, 2015.0], [1.6672380128E12, 777.0], [1.6672380169E12, 2333.0], [1.667238021E12, 2048.0], [1.6672380251E12, 651.0], [1.6672380129E12, 882.0], [1.667238017E12, 1420.0], [1.6672380211E12, 1894.0], [1.6672380252E12, 425.0], [1.6672380168E12, 1664.0], [1.6672380209E12, 958.0], [1.667238025E12, 1130.0], [1.6672380127E12, 650.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6672380131E12, 945.6], [1.6672380172E12, 1708.0], [1.6672380213E12, 1902.6999999999998], [1.6672380254E12, 364.4000000000001], [1.667238013E12, 913.8], [1.6672380171E12, 1715.8], [1.6672380212E12, 1601.0], [1.6672380253E12, 874.6], [1.6672380216E12, 1403.0], [1.6672380134E12, 1199.6], [1.6672380175E12, 1486.2], [1.6672380132E12, 1034.0], [1.6672380173E12, 1941.0], [1.6672380214E12, 1994.0], [1.6672380133E12, 1122.0], [1.6672380174E12, 1408.0], [1.6672380215E12, 1932.9], [1.6672380136E12, 1325.1], [1.6672380177E12, 1231.0], [1.6672380218E12, 1626.8], [1.6672380135E12, 1304.5], [1.6672380176E12, 1702.2], [1.6672380217E12, 1442.8], [1.6672380139E12, 1466.5], [1.667238018E12, 1092.0], [1.6672380221E12, 1386.0], [1.6672380137E12, 1264.4], [1.6672380178E12, 1931.8], [1.6672380219E12, 1647.0], [1.6672380138E12, 1241.0], [1.6672380179E12, 1323.0], [1.667238022E12, 1774.8], [1.6672380182E12, 1766.0], [1.6672380223E12, 1769.5999999999997], [1.6672380142E12, 1815.3], [1.6672380183E12, 1781.2], [1.667238014E12, 1586.0], [1.6672380181E12, 1647.8], [1.6672380222E12, 1686.8000000000006], [1.6672380144E12, 1899.4], [1.6672380185E12, 1559.0], [1.6672380226E12, 1412.5000000000002], [1.6672380224E12, 1235.0], [1.6672380184E12, 1516.0], [1.6672380225E12, 2319.1000000000004], [1.6672380143E12, 1720.3], [1.6672380146E12, 1733.0], [1.6672380187E12, 1860.0], [1.6672380228E12, 1655.4], [1.6672380147E12, 1775.8999999999999], [1.6672380188E12, 1433.4], [1.6672380229E12, 1643.0], [1.6672380145E12, 1209.0], [1.6672380186E12, 1220.0], [1.6672380227E12, 1631.0], [1.6672380149E12, 1312.6], [1.667238019E12, 1015.0], [1.6672380231E12, 1519.7], [1.6672380148E12, 1897.0], [1.6672380189E12, 1529.6], [1.667238023E12, 1250.2], [1.6672380192E12, 1876.2], [1.6672380233E12, 1673.5], [1.6672380152E12, 2162.6], [1.6672380193E12, 1658.0], [1.6672380234E12, 1206.0], [1.6672380232E12, 1586.6], [1.667238015E12, 1389.0], [1.6672380191E12, 1778.0], [1.6672380151E12, 1673.0], [1.6672380154E12, 1921.0000000000005], [1.6672380195E12, 1080.0], [1.6672380236E12, 1021.0], [1.6672380153E12, 1813.5], [1.6672380194E12, 1173.0], [1.6672380235E12, 1221.6000000000001], [1.6672380157E12, 1411.0], [1.6672380198E12, 2002.6000000000001], [1.6672380239E12, 1215.5], [1.6672380155E12, 1893.2], [1.6672380196E12, 1806.5], [1.6672380237E12, 2353.600000000001], [1.6672380156E12, 1597.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 2265.600000000001], [1.66723802E12, 2229.8], [1.6672380241E12, 1068.0], [1.6672380159E12, 1572.0], [1.6672380158E12, 1604.0], [1.6672380199E12, 1872.0], [1.667238024E12, 1111.7], [1.6672380162E12, 1818.4], [1.6672380203E12, 1516.7], [1.6672380244E12, 2409.0], [1.667238016E12, 1430.7999999999997], [1.6672380201E12, 2247.4], [1.6672380242E12, 1581.9], [1.6672380161E12, 1413.0], [1.6672380202E12, 1836.0], [1.6672380243E12, 1743.0], [1.6672380164E12, 2167.0], [1.6672380246E12, 1485.4], [1.6672380124E12, 345.0], [1.6672380165E12, 1778.0], [1.6672380206E12, 1359.0], [1.6672380247E12, 1625.0], [1.6672380163E12, 1617.0], [1.6672380204E12, 1225.8], [1.6672380245E12, 2484.0], [1.6672380126E12, 572.8], [1.6672380167E12, 1669.4], [1.6672380208E12, 2002.2], [1.6672380249E12, 840.3], [1.6672380248E12, 1103.0], [1.6672380125E12, 434.0], [1.6672380166E12, 1821.0], [1.6672380207E12, 1955.3000000000002], [1.6672380128E12, 774.0], [1.6672380169E12, 2215.0], [1.667238021E12, 2048.0], [1.6672380251E12, 604.6000000000001], [1.6672380129E12, 878.8], [1.667238017E12, 1341.6000000000001], [1.6672380211E12, 1894.0], [1.6672380252E12, 425.0], [1.6672380168E12, 1664.0], [1.6672380209E12, 958.0], [1.667238025E12, 1128.2], [1.6672380127E12, 647.4]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6672380131E12, 954.0], [1.6672380172E12, 1708.0], [1.6672380213E12, 2178.0], [1.6672380254E12, 385.0], [1.667238013E12, 946.0], [1.6672380171E12, 1725.0], [1.6672380212E12, 1822.0], [1.6672380253E12, 934.0], [1.6672380216E12, 1492.0], [1.6672380134E12, 1240.0], [1.6672380175E12, 1652.0], [1.6672380132E12, 1034.0], [1.6672380173E12, 1946.0], [1.6672380214E12, 1994.0], [1.6672380133E12, 1161.0], [1.6672380174E12, 1414.0], [1.6672380215E12, 2298.0], [1.6672380136E12, 1431.0], [1.6672380177E12, 1231.0], [1.6672380218E12, 1682.0], [1.6672380135E12, 1316.0], [1.6672380176E12, 1756.0], [1.6672380217E12, 1454.0], [1.6672380139E12, 1491.0], [1.667238018E12, 1092.0], [1.6672380221E12, 1386.0], [1.6672380137E12, 1272.0], [1.6672380178E12, 2257.0], [1.6672380219E12, 1647.0], [1.6672380138E12, 1241.0], [1.6672380179E12, 1359.0], [1.667238022E12, 1836.0], [1.6672380182E12, 1766.0], [1.6672380223E12, 2152.0], [1.6672380142E12, 1818.0], [1.6672380183E12, 1829.0], [1.667238014E12, 1595.0], [1.6672380181E12, 1659.0], [1.6672380222E12, 2009.0], [1.6672380144E12, 1935.0], [1.6672380185E12, 1578.0], [1.6672380226E12, 1873.0], [1.6672380224E12, 1235.0], [1.6672380184E12, 1526.0], [1.6672380225E12, 2362.0], [1.6672380143E12, 1798.0], [1.6672380146E12, 1733.0], [1.6672380187E12, 2310.0], [1.6672380228E12, 1656.0], [1.6672380147E12, 2279.0], [1.6672380188E12, 1450.0], [1.6672380229E12, 1643.0], [1.6672380145E12, 1209.0], [1.6672380186E12, 1220.0], [1.6672380227E12, 1631.0], [1.6672380149E12, 1315.0], [1.667238019E12, 1015.0], [1.6672380231E12, 1562.0], [1.6672380148E12, 1897.0], [1.6672380189E12, 1560.0], [1.667238023E12, 1252.0], [1.6672380192E12, 2225.0], [1.6672380233E12, 1708.0], [1.6672380152E12, 2501.0], [1.6672380193E12, 1658.0], [1.6672380234E12, 1206.0], [1.6672380232E12, 1591.0], [1.667238015E12, 1389.0], [1.6672380191E12, 1778.0], [1.6672380151E12, 1723.0], [1.6672380154E12, 2051.0], [1.6672380195E12, 1080.0], [1.6672380236E12, 1028.0], [1.6672380153E12, 1884.0], [1.6672380194E12, 1267.0], [1.6672380235E12, 1245.0], [1.6672380157E12, 1411.0], [1.6672380198E12, 2056.0], [1.6672380239E12, 1292.0], [1.6672380155E12, 1910.0], [1.6672380196E12, 1932.0], [1.6672380237E12, 2620.0], [1.6672380156E12, 1945.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 2496.0], [1.66723802E12, 2279.0], [1.6672380241E12, 1068.0], [1.6672380159E12, 1572.0], [1.6672380158E12, 1604.0], [1.6672380199E12, 1872.0], [1.667238024E12, 1129.0], [1.6672380162E12, 1902.0], [1.6672380203E12, 1523.0], [1.6672380244E12, 2454.0], [1.667238016E12, 1742.0], [1.6672380201E12, 2251.0], [1.6672380242E12, 2556.0], [1.6672380161E12, 1413.0], [1.6672380202E12, 1836.0], [1.6672380243E12, 1743.0], [1.6672380164E12, 2167.0], [1.6672380246E12, 2648.0], [1.6672380124E12, 374.0], [1.6672380165E12, 2124.0], [1.6672380206E12, 1359.0], [1.6672380247E12, 2731.0], [1.6672380163E12, 1617.0], [1.6672380204E12, 1272.0], [1.6672380245E12, 2484.0], [1.6672380126E12, 574.0], [1.6672380167E12, 1877.0], [1.6672380208E12, 2174.0], [1.6672380249E12, 841.0], [1.6672380248E12, 1146.0], [1.6672380125E12, 434.0], [1.6672380166E12, 1863.0], [1.6672380207E12, 2015.0], [1.6672380128E12, 777.0], [1.6672380169E12, 2333.0], [1.667238021E12, 2048.0], [1.6672380251E12, 651.0], [1.6672380129E12, 882.0], [1.667238017E12, 1420.0], [1.6672380211E12, 1894.0], [1.6672380252E12, 425.0], [1.6672380168E12, 1664.0], [1.6672380209E12, 958.0], [1.667238025E12, 1130.0], [1.6672380127E12, 650.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6672380131E12, 954.0], [1.6672380172E12, 1708.0], [1.6672380213E12, 2145.7499999999995], [1.6672380254E12, 385.0], [1.667238013E12, 939.8], [1.6672380171E12, 1725.0], [1.6672380212E12, 1822.0], [1.6672380253E12, 916.9], [1.6672380216E12, 1492.0], [1.6672380134E12, 1236.55], [1.6672380175E12, 1624.9999999999995], [1.6672380132E12, 1034.0], [1.6672380173E12, 1946.0], [1.6672380214E12, 1994.0], [1.6672380133E12, 1152.5], [1.6672380174E12, 1414.0], [1.6672380215E12, 2122.8999999999996], [1.6672380136E12, 1417.0499999999997], [1.6672380177E12, 1231.0], [1.6672380218E12, 1682.0], [1.6672380135E12, 1315.0], [1.6672380176E12, 1753.7], [1.6672380217E12, 1454.0], [1.6672380139E12, 1491.0], [1.667238018E12, 1092.0], [1.6672380221E12, 1386.0], [1.6672380137E12, 1272.0], [1.6672380178E12, 2137.7999999999993], [1.6672380219E12, 1647.0], [1.6672380138E12, 1241.0], [1.6672380179E12, 1359.0], [1.667238022E12, 1836.0], [1.6672380182E12, 1766.0], [1.6672380223E12, 2152.0], [1.6672380142E12, 1818.0], [1.6672380183E12, 1811.8], [1.667238014E12, 1595.0], [1.6672380181E12, 1659.0], [1.6672380222E12, 1973.1999999999994], [1.6672380144E12, 1928.1999999999998], [1.6672380185E12, 1573.25], [1.6672380226E12, 1503.3999999999996], [1.6672380224E12, 1235.0], [1.6672380184E12, 1526.0], [1.6672380225E12, 2362.0], [1.6672380143E12, 1773.5], [1.6672380146E12, 1733.0], [1.6672380187E12, 2310.0], [1.6672380228E12, 1656.0], [1.6672380147E12, 2140.5499999999997], [1.6672380188E12, 1449.5], [1.6672380229E12, 1643.0], [1.6672380145E12, 1209.0], [1.6672380186E12, 1220.0], [1.6672380227E12, 1631.0], [1.6672380149E12, 1315.0], [1.667238019E12, 1015.0], [1.6672380231E12, 1562.0], [1.6672380148E12, 1897.0], [1.6672380189E12, 1560.0], [1.667238023E12, 1252.0], [1.6672380192E12, 2021.2999999999993], [1.6672380233E12, 1708.0], [1.6672380152E12, 2468.8999999999996], [1.6672380193E12, 1658.0], [1.6672380234E12, 1206.0], [1.6672380232E12, 1591.0], [1.667238015E12, 1389.0], [1.6672380191E12, 1778.0], [1.6672380151E12, 1723.0], [1.6672380154E12, 2051.0], [1.6672380195E12, 1080.0], [1.6672380236E12, 1028.0], [1.6672380153E12, 1835.0], [1.6672380194E12, 1227.0], [1.6672380235E12, 1240.5], [1.6672380157E12, 1411.0], [1.6672380198E12, 2042.5], [1.6672380239E12, 1292.0], [1.6672380155E12, 1910.0], [1.6672380196E12, 1903.0], [1.6672380237E12, 2620.0], [1.6672380156E12, 1860.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 2496.0], [1.66723802E12, 2269.7999999999997], [1.6672380241E12, 1068.0], [1.6672380159E12, 1572.0], [1.6672380158E12, 1604.0], [1.6672380199E12, 1872.0], [1.667238024E12, 1128.25], [1.6672380162E12, 1894.0], [1.6672380203E12, 1523.0], [1.6672380244E12, 2454.0], [1.667238016E12, 1742.0], [1.6672380201E12, 2251.0], [1.6672380242E12, 2410.649999999998], [1.6672380161E12, 1413.0], [1.6672380202E12, 1836.0], [1.6672380243E12, 1743.0], [1.6672380164E12, 2167.0], [1.6672380246E12, 1905.7], [1.6672380124E12, 374.0], [1.6672380165E12, 1916.1999999999998], [1.6672380206E12, 1359.0], [1.6672380247E12, 2677.5], [1.6672380163E12, 1617.0], [1.6672380204E12, 1272.0], [1.6672380245E12, 2484.0], [1.6672380126E12, 574.0], [1.6672380167E12, 1877.0], [1.6672380208E12, 2028.8], [1.6672380249E12, 841.0], [1.6672380248E12, 1146.0], [1.6672380125E12, 434.0], [1.6672380166E12, 1863.0], [1.6672380207E12, 2012.2], [1.6672380128E12, 777.0], [1.6672380169E12, 2318.45], [1.667238021E12, 2048.0], [1.6672380251E12, 649.8], [1.6672380129E12, 881.6], [1.667238017E12, 1416.1], [1.6672380211E12, 1894.0], [1.6672380252E12, 425.0], [1.6672380168E12, 1664.0], [1.6672380209E12, 958.0], [1.667238025E12, 1130.0], [1.6672380127E12, 650.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6672380131E12, 697.0], [1.6672380172E12, 1569.0], [1.6672380213E12, 1226.0], [1.6672380254E12, 90.0], [1.667238013E12, 612.0], [1.6672380171E12, 832.0], [1.6672380212E12, 1132.0], [1.6672380253E12, 109.0], [1.6672380216E12, 340.0], [1.6672380134E12, 394.0], [1.6672380175E12, 818.0], [1.6672380132E12, 840.0], [1.6672380173E12, 1699.0], [1.6672380214E12, 1357.0], [1.6672380133E12, 609.0], [1.6672380174E12, 784.0], [1.6672380215E12, 738.0], [1.6672380136E12, 646.0], [1.6672380177E12, 1059.0], [1.6672380218E12, 1008.0], [1.6672380135E12, 561.0], [1.6672380176E12, 653.0], [1.6672380217E12, 922.0], [1.6672380139E12, 302.0], [1.667238018E12, 376.0], [1.6672380221E12, 1108.0], [1.6672380137E12, 691.0], [1.6672380178E12, 1217.0], [1.6672380219E12, 413.0], [1.6672380138E12, 795.0], [1.6672380179E12, 417.0], [1.667238022E12, 922.0], [1.6672380182E12, 1617.0], [1.6672380223E12, 763.0], [1.6672380142E12, 1259.0], [1.6672380183E12, 1187.0], [1.667238014E12, 515.0], [1.6672380181E12, 1111.0], [1.6672380222E12, 883.0], [1.6672380144E12, 883.0], [1.6672380185E12, 542.0], [1.6672380226E12, 992.0], [1.6672380224E12, 1235.0], [1.6672380184E12, 926.0], [1.6672380225E12, 986.0], [1.6672380143E12, 815.0], [1.6672380146E12, 1174.0], [1.6672380187E12, 679.0], [1.6672380228E12, 596.0], [1.6672380147E12, 1084.0], [1.6672380188E12, 824.0], [1.6672380229E12, 673.0], [1.6672380145E12, 1136.0], [1.6672380186E12, 550.0], [1.6672380227E12, 1332.0], [1.6672380149E12, 447.0], [1.667238019E12, 1015.0], [1.6672380231E12, 861.0], [1.6672380148E12, 952.0], [1.6672380189E12, 876.0], [1.667238023E12, 455.0], [1.6672380192E12, 688.0], [1.6672380233E12, 235.0], [1.6672380152E12, 911.0], [1.6672380193E12, 1029.0], [1.6672380234E12, 893.0], [1.6672380232E12, 966.0], [1.667238015E12, 1073.0], [1.6672380191E12, 1602.0], [1.6672380151E12, 1054.0], [1.6672380154E12, 943.0], [1.6672380195E12, 1080.0], [1.6672380236E12, 983.0], [1.6672380153E12, 500.0], [1.6672380194E12, 527.0], [1.6672380235E12, 362.0], [1.6672380157E12, 534.0], [1.6672380198E12, 975.0], [1.6672380239E12, 966.0], [1.6672380155E12, 513.0], [1.6672380196E12, 761.0], [1.6672380237E12, 1048.0], [1.6672380156E12, 302.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 240.0], [1.66723802E12, 1200.0], [1.6672380241E12, 881.0], [1.6672380159E12, 594.0], [1.6672380158E12, 1138.0], [1.6672380199E12, 1337.0], [1.667238024E12, 841.0], [1.6672380162E12, 878.0], [1.6672380203E12, 876.0], [1.6672380244E12, 839.0], [1.667238016E12, 707.0], [1.6672380201E12, 874.0], [1.6672380242E12, 268.0], [1.6672380161E12, 864.0], [1.6672380202E12, 828.0], [1.6672380243E12, 980.0], [1.6672380164E12, 1291.0], [1.6672380246E12, 636.0], [1.6672380124E12, 268.0], [1.6672380165E12, 386.0], [1.6672380206E12, 1200.0], [1.6672380247E12, 683.0], [1.6672380163E12, 1616.0], [1.6672380204E12, 960.0], [1.6672380245E12, 939.0], [1.6672380126E12, 460.0], [1.6672380167E12, 434.0], [1.6672380208E12, 894.0], [1.6672380249E12, 286.0], [1.6672380248E12, 66.0], [1.6672380125E12, 382.0], [1.6672380166E12, 1128.0], [1.6672380207E12, 1092.0], [1.6672380128E12, 714.0], [1.6672380169E12, 745.0], [1.667238021E12, 965.0], [1.6672380251E12, 408.0], [1.6672380129E12, 720.0], [1.667238017E12, 718.0], [1.6672380211E12, 996.0], [1.6672380252E12, 317.0], [1.6672380168E12, 1587.0], [1.6672380209E12, 958.0], [1.667238025E12, 435.0], [1.6672380127E12, 558.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6672380131E12, 839.0], [1.6672380172E12, 1669.0], [1.6672380213E12, 1501.5], [1.6672380254E12, 111.0], [1.667238013E12, 862.0], [1.6672380171E12, 1545.0], [1.6672380212E12, 1351.0], [1.6672380253E12, 701.0], [1.6672380216E12, 1155.0], [1.6672380134E12, 1020.0], [1.6672380175E12, 1052.0], [1.6672380132E12, 864.0], [1.6672380173E12, 1784.0], [1.6672380214E12, 1598.0], [1.6672380133E12, 977.0], [1.6672380174E12, 974.0], [1.6672380215E12, 1544.0], [1.6672380136E12, 1225.0], [1.6672380177E12, 1145.0], [1.6672380218E12, 1349.0], [1.6672380135E12, 1172.5], [1.6672380176E12, 1320.0], [1.6672380217E12, 1079.0], [1.6672380139E12, 1216.0], [1.667238018E12, 898.0], [1.6672380221E12, 1152.0], [1.6672380137E12, 874.0], [1.6672380178E12, 1610.0], [1.6672380219E12, 1144.0], [1.6672380138E12, 1072.0], [1.6672380179E12, 890.0], [1.667238022E12, 1226.0], [1.6672380182E12, 1700.0], [1.6672380223E12, 1464.0], [1.6672380142E12, 1494.0], [1.6672380183E12, 1464.0], [1.667238014E12, 1120.0], [1.6672380181E12, 1549.0], [1.6672380222E12, 1373.0], [1.6672380144E12, 1117.0], [1.6672380185E12, 1312.0], [1.6672380226E12, 1126.0], [1.6672380224E12, 1235.0], [1.6672380184E12, 1351.5], [1.6672380225E12, 1715.0], [1.6672380143E12, 1183.5], [1.6672380146E12, 1448.0], [1.6672380187E12, 1229.0], [1.6672380228E12, 1505.0], [1.6672380147E12, 1375.0], [1.6672380188E12, 1178.5], [1.6672380229E12, 786.0], [1.6672380145E12, 1172.5], [1.6672380186E12, 1051.0], [1.6672380227E12, 1402.0], [1.6672380149E12, 1007.0], [1.667238019E12, 1015.0], [1.6672380231E12, 1337.0], [1.6672380148E12, 1311.5], [1.6672380189E12, 1370.0], [1.667238023E12, 1205.0], [1.6672380192E12, 1417.0], [1.6672380233E12, 1070.0], [1.6672380152E12, 1542.0], [1.6672380193E12, 1448.0], [1.6672380234E12, 1117.0], [1.6672380232E12, 1445.5], [1.667238015E12, 1361.0], [1.6672380191E12, 1690.0], [1.6672380151E12, 1279.0], [1.6672380154E12, 1113.0], [1.6672380195E12, 1080.0], [1.6672380236E12, 1009.0], [1.6672380153E12, 1565.5], [1.6672380194E12, 977.0], [1.6672380235E12, 1009.0], [1.6672380157E12, 1310.0], [1.6672380198E12, 1506.5], [1.6672380239E12, 1063.0], [1.6672380155E12, 1546.0], [1.6672380196E12, 1321.5], [1.6672380237E12, 1356.5], [1.6672380156E12, 1360.0], [1.6672380197E12, 1422.0], [1.6672380238E12, 1023.5], [1.66723802E12, 1761.0], [1.6672380241E12, 1000.0], [1.6672380159E12, 1197.5], [1.6672380158E12, 1318.0], [1.6672380199E12, 1782.0], [1.667238024E12, 1001.0], [1.6672380162E12, 1305.0], [1.6672380203E12, 1098.0], [1.6672380244E12, 1773.0], [1.667238016E12, 1073.0], [1.6672380201E12, 1495.0], [1.6672380242E12, 989.5], [1.6672380161E12, 1151.0], [1.6672380202E12, 1443.0], [1.6672380243E12, 1674.0], [1.6672380164E12, 1512.0], [1.6672380246E12, 1058.0], [1.6672380124E12, 311.0], [1.6672380165E12, 1325.0], [1.6672380206E12, 1279.5], [1.6672380247E12, 968.0], [1.6672380163E12, 1616.5], [1.6672380204E12, 1154.0], [1.6672380245E12, 1039.0], [1.6672380126E12, 539.0], [1.6672380167E12, 1136.0], [1.6672380208E12, 1534.0], [1.6672380249E12, 634.5], [1.6672380248E12, 579.5], [1.6672380125E12, 408.0], [1.6672380166E12, 1302.0], [1.6672380207E12, 1785.0], [1.6672380128E12, 732.0], [1.6672380169E12, 1369.0], [1.667238021E12, 1009.0], [1.6672380251E12, 452.0], [1.6672380129E12, 802.0], [1.667238017E12, 872.0], [1.6672380211E12, 1245.0], [1.6672380252E12, 396.0], [1.6672380168E12, 1625.5], [1.6672380209E12, 958.0], [1.667238025E12, 764.0], [1.6672380127E12, 593.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6672380254E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 458.0, "minX": 81.0, "maxY": 1473.0, "series": [{"data": [[129.0, 1375.0], [141.0, 1308.0], [142.0, 1473.0], [146.0, 1366.0], [149.0, 1353.0], [151.0, 1083.0], [159.0, 1254.0], [153.0, 1350.0], [155.0, 1265.0], [166.0, 1308.5], [168.0, 982.0], [175.0, 1002.0], [81.0, 592.0], [85.0, 458.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 458.0, "minX": 81.0, "maxY": 1470.0, "series": [{"data": [[129.0, 1375.0], [141.0, 1308.0], [142.0, 1470.0], [146.0, 1366.0], [149.0, 1353.0], [151.0, 1083.0], [159.0, 1253.0], [153.0, 1350.0], [155.0, 1265.0], [166.0, 1308.0], [168.0, 982.0], [175.0, 1002.0], [81.0, 591.0], [85.0, 458.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 175.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6672380121E12, "maxY": 980.0, "series": [{"data": [[1.6672380131E12, 130.0], [1.6672380172E12, 80.0], [1.6672380213E12, 210.0], [1.667238013E12, 230.0], [1.6672380171E12, 130.0], [1.6672380212E12, 190.0], [1.6672380253E12, 80.0], [1.6672380216E12, 120.0], [1.6672380134E12, 220.0], [1.6672380175E12, 230.0], [1.6672380132E12, 30.0], [1.6672380173E12, 100.0], [1.6672380214E12, 100.0], [1.6672380133E12, 260.0], [1.6672380174E12, 150.0], [1.6672380215E12, 350.0], [1.6672380136E12, 220.0], [1.6672380177E12, 20.0], [1.6672380218E12, 140.0], [1.6672380135E12, 240.0], [1.6672380176E12, 210.0], [1.6672380217E12, 110.0], [1.6672380139E12, 160.0], [1.667238018E12, 90.0], [1.6672380221E12, 30.0], [1.6672380137E12, 130.0], [1.6672380178E12, 270.0], [1.6672380219E12, 50.0], [1.6672380138E12, 60.0], [1.6672380179E12, 190.0], [1.667238022E12, 120.0], [1.6672380182E12, 90.0], [1.6672380223E12, 170.0], [1.6672380142E12, 120.0], [1.6672380183E12, 270.0], [1.667238014E12, 190.0], [1.6672380181E12, 110.0], [1.6672380222E12, 220.0], [1.6672380144E12, 230.0], [1.6672380185E12, 240.0], [1.6672380226E12, 500.0], [1.6672380224E12, 10.0], [1.6672380184E12, 140.0], [1.6672380225E12, 90.0], [1.6672380143E12, 260.0], [1.6672380146E12, 60.0], [1.6672380187E12, 140.0], [1.6672380228E12, 130.0], [1.6672380147E12, 320.0], [1.6672380188E12, 200.0], [1.6672380229E12, 80.0], [1.6672380145E12, 20.0], [1.6672380186E12, 80.0], [1.6672380227E12, 80.0], [1.6672380149E12, 160.0], [1.667238019E12, 10.0], [1.6672380231E12, 180.0], [1.6672380148E12, 50.0], [1.6672380189E12, 170.0], [1.667238023E12, 150.0], [1.6672380192E12, 330.0], [1.6672380233E12, 110.0], [1.6672380152E12, 210.0], [1.6672380193E12, 40.0], [1.6672380234E12, 70.0], [1.6672380232E12, 80.0], [1.667238015E12, 30.0], [1.6672380191E12, 20.0], [1.6672380151E12, 130.0], [1.6672380154E12, 110.0], [1.6672380195E12, 10.0], [1.6672380236E12, 160.0], [1.6672380153E12, 400.0], [1.6672380194E12, 300.0], [1.6672380235E12, 200.0], [1.6672380157E12, 70.0], [1.6672380198E12, 280.0], [1.6672380239E12, 110.0], [1.6672380155E12, 150.0], [1.6672380196E12, 240.0], [1.6672380237E12, 90.0], [1.6672380156E12, 240.0], [1.6672380197E12, 10.0], [1.6672380238E12, 100.0], [1.66723802E12, 230.0], [1.6672380241E12, 50.0], [1.6672380159E12, 80.0], [1.6672380158E12, 40.0], [1.6672380199E12, 50.0], [1.667238024E12, 100.0], [1.6672380121E12, 980.0], [1.6672380162E12, 410.0], [1.6672380203E12, 140.0], [1.6672380244E12, 130.0], [1.667238016E12, 170.0], [1.6672380201E12, 140.0], [1.6672380242E12, 110.0], [1.6672380161E12, 40.0], [1.6672380202E12, 70.0], [1.6672380243E12, 50.0], [1.6672380123E12, 300.0], [1.6672380164E12, 70.0], [1.6672380246E12, 220.0], [1.6672380124E12, 520.0], [1.6672380165E12, 410.0], [1.6672380206E12, 20.0], [1.6672380247E12, 130.0], [1.6672380122E12, 240.0], [1.6672380163E12, 20.0], [1.6672380204E12, 150.0], [1.6672380245E12, 40.0], [1.6672380126E12, 150.0], [1.6672380167E12, 150.0], [1.6672380208E12, 420.0], [1.6672380249E12, 20.0], [1.6672380248E12, 60.0], [1.6672380125E12, 170.0], [1.6672380166E12, 150.0], [1.6672380207E12, 200.0], [1.6672380128E12, 110.0], [1.6672380169E12, 220.0], [1.667238021E12, 70.0], [1.6672380251E12, 40.0], [1.6672380129E12, 230.0], [1.667238017E12, 210.0], [1.6672380211E12, 80.0], [1.6672380252E12, 20.0], [1.6672380168E12, 20.0], [1.6672380209E12, 10.0], [1.667238025E12, 40.0], [1.6672380127E12, 110.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6672380253E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6672380124E12, "maxY": 520.0, "series": [{"data": [[1.6672380131E12, 130.0], [1.6672380172E12, 80.0], [1.6672380213E12, 220.0], [1.6672380254E12, 100.0], [1.667238013E12, 230.0], [1.6672380171E12, 130.0], [1.6672380212E12, 190.0], [1.6672380253E12, 250.0], [1.6672380216E12, 140.0], [1.6672380134E12, 220.0], [1.6672380175E12, 230.0], [1.6672380132E12, 50.0], [1.6672380173E12, 100.0], [1.6672380214E12, 90.0], [1.6672380133E12, 240.0], [1.6672380174E12, 150.0], [1.6672380215E12, 360.0], [1.6672380136E12, 220.0], [1.6672380177E12, 20.0], [1.6672380218E12, 150.0], [1.6672380135E12, 240.0], [1.6672380176E12, 210.0], [1.6672380217E12, 130.0], [1.6672380139E12, 160.0], [1.667238018E12, 90.0], [1.6672380221E12, 30.0], [1.6672380137E12, 130.0], [1.6672380178E12, 270.0], [1.6672380219E12, 50.0], [1.6672380138E12, 60.0], [1.6672380179E12, 190.0], [1.667238022E12, 150.0], [1.6672380182E12, 90.0], [1.6672380223E12, 170.0], [1.6672380142E12, 120.0], [1.6672380183E12, 270.0], [1.667238014E12, 190.0], [1.6672380181E12, 110.0], [1.6672380222E12, 230.0], [1.6672380144E12, 230.0], [1.6672380185E12, 240.0], [1.6672380226E12, 520.0], [1.6672380224E12, 10.0], [1.6672380184E12, 140.0], [1.6672380225E12, 120.0], [1.6672380143E12, 260.0], [1.6672380146E12, 60.0], [1.6672380187E12, 140.0], [1.6672380228E12, 150.0], [1.6672380147E12, 320.0], [1.6672380188E12, 200.0], [1.6672380229E12, 80.0], [1.6672380145E12, 20.0], [1.6672380186E12, 80.0], [1.6672380227E12, 90.0], [1.6672380149E12, 150.0], [1.667238019E12, 10.0], [1.6672380231E12, 180.0], [1.6672380148E12, 60.0], [1.6672380189E12, 170.0], [1.667238023E12, 180.0], [1.6672380192E12, 330.0], [1.6672380233E12, 140.0], [1.6672380152E12, 210.0], [1.6672380193E12, 50.0], [1.6672380234E12, 90.0], [1.6672380232E12, 100.0], [1.667238015E12, 30.0], [1.6672380191E12, 20.0], [1.6672380151E12, 130.0], [1.6672380154E12, 110.0], [1.6672380195E12, 10.0], [1.6672380236E12, 190.0], [1.6672380153E12, 400.0], [1.6672380194E12, 290.0], [1.6672380235E12, 250.0], [1.6672380157E12, 70.0], [1.6672380198E12, 280.0], [1.6672380239E12, 140.0], [1.6672380155E12, 150.0], [1.6672380196E12, 240.0], [1.6672380237E12, 120.0], [1.6672380156E12, 240.0], [1.6672380197E12, 10.0], [1.6672380238E12, 120.0], [1.66723802E12, 230.0], [1.6672380241E12, 70.0], [1.6672380159E12, 80.0], [1.6672380158E12, 40.0], [1.6672380199E12, 50.0], [1.667238024E12, 200.0], [1.6672380162E12, 410.0], [1.6672380203E12, 160.0], [1.6672380244E12, 180.0], [1.667238016E12, 170.0], [1.6672380201E12, 150.0], [1.6672380242E12, 220.0], [1.6672380161E12, 40.0], [1.6672380202E12, 70.0], [1.6672380243E12, 70.0], [1.6672380164E12, 70.0], [1.6672380246E12, 410.0], [1.6672380124E12, 190.0], [1.6672380165E12, 410.0], [1.6672380206E12, 20.0], [1.6672380247E12, 290.0], [1.6672380163E12, 20.0], [1.6672380204E12, 150.0], [1.6672380245E12, 70.0], [1.6672380126E12, 150.0], [1.6672380167E12, 150.0], [1.6672380208E12, 430.0], [1.6672380249E12, 100.0], [1.6672380248E12, 140.0], [1.6672380125E12, 20.0], [1.6672380166E12, 150.0], [1.6672380207E12, 200.0], [1.6672380128E12, 110.0], [1.6672380169E12, 220.0], [1.667238021E12, 70.0], [1.6672380251E12, 230.0], [1.6672380129E12, 230.0], [1.667238017E12, 210.0], [1.6672380211E12, 90.0], [1.6672380252E12, 90.0], [1.6672380168E12, 20.0], [1.6672380209E12, 10.0], [1.667238025E12, 180.0], [1.6672380127E12, 110.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6672380254E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6672380124E12, "maxY": 520.0, "series": [{"data": [[1.6672380131E12, 130.0], [1.6672380172E12, 80.0], [1.6672380213E12, 220.0], [1.6672380254E12, 100.0], [1.667238013E12, 230.0], [1.6672380171E12, 130.0], [1.6672380212E12, 190.0], [1.6672380253E12, 250.0], [1.6672380216E12, 140.0], [1.6672380134E12, 220.0], [1.6672380175E12, 230.0], [1.6672380132E12, 50.0], [1.6672380173E12, 100.0], [1.6672380214E12, 90.0], [1.6672380133E12, 240.0], [1.6672380174E12, 150.0], [1.6672380215E12, 360.0], [1.6672380136E12, 220.0], [1.6672380177E12, 20.0], [1.6672380218E12, 150.0], [1.6672380135E12, 240.0], [1.6672380176E12, 210.0], [1.6672380217E12, 130.0], [1.6672380139E12, 160.0], [1.667238018E12, 90.0], [1.6672380221E12, 30.0], [1.6672380137E12, 130.0], [1.6672380178E12, 270.0], [1.6672380219E12, 50.0], [1.6672380138E12, 60.0], [1.6672380179E12, 190.0], [1.667238022E12, 150.0], [1.6672380182E12, 90.0], [1.6672380223E12, 170.0], [1.6672380142E12, 120.0], [1.6672380183E12, 270.0], [1.667238014E12, 190.0], [1.6672380181E12, 110.0], [1.6672380222E12, 230.0], [1.6672380144E12, 230.0], [1.6672380185E12, 240.0], [1.6672380226E12, 520.0], [1.6672380224E12, 10.0], [1.6672380184E12, 140.0], [1.6672380225E12, 120.0], [1.6672380143E12, 260.0], [1.6672380146E12, 60.0], [1.6672380187E12, 140.0], [1.6672380228E12, 150.0], [1.6672380147E12, 320.0], [1.6672380188E12, 200.0], [1.6672380229E12, 80.0], [1.6672380145E12, 20.0], [1.6672380186E12, 80.0], [1.6672380227E12, 90.0], [1.6672380149E12, 150.0], [1.667238019E12, 10.0], [1.6672380231E12, 180.0], [1.6672380148E12, 60.0], [1.6672380189E12, 170.0], [1.667238023E12, 180.0], [1.6672380192E12, 330.0], [1.6672380233E12, 140.0], [1.6672380152E12, 210.0], [1.6672380193E12, 50.0], [1.6672380234E12, 90.0], [1.6672380232E12, 100.0], [1.667238015E12, 30.0], [1.6672380191E12, 20.0], [1.6672380151E12, 130.0], [1.6672380154E12, 110.0], [1.6672380195E12, 10.0], [1.6672380236E12, 190.0], [1.6672380153E12, 400.0], [1.6672380194E12, 290.0], [1.6672380235E12, 250.0], [1.6672380157E12, 70.0], [1.6672380198E12, 280.0], [1.6672380239E12, 140.0], [1.6672380155E12, 150.0], [1.6672380196E12, 240.0], [1.6672380237E12, 120.0], [1.6672380156E12, 240.0], [1.6672380197E12, 10.0], [1.6672380238E12, 120.0], [1.66723802E12, 230.0], [1.6672380241E12, 70.0], [1.6672380159E12, 80.0], [1.6672380158E12, 40.0], [1.6672380199E12, 50.0], [1.667238024E12, 200.0], [1.6672380162E12, 410.0], [1.6672380203E12, 160.0], [1.6672380244E12, 180.0], [1.667238016E12, 170.0], [1.6672380201E12, 150.0], [1.6672380242E12, 220.0], [1.6672380161E12, 40.0], [1.6672380202E12, 70.0], [1.6672380243E12, 70.0], [1.6672380164E12, 70.0], [1.6672380246E12, 410.0], [1.6672380124E12, 190.0], [1.6672380165E12, 410.0], [1.6672380206E12, 20.0], [1.6672380247E12, 290.0], [1.6672380163E12, 20.0], [1.6672380204E12, 150.0], [1.6672380245E12, 70.0], [1.6672380126E12, 150.0], [1.6672380167E12, 150.0], [1.6672380208E12, 430.0], [1.6672380249E12, 100.0], [1.6672380248E12, 140.0], [1.6672380125E12, 20.0], [1.6672380166E12, 150.0], [1.6672380207E12, 200.0], [1.6672380128E12, 110.0], [1.6672380169E12, 220.0], [1.667238021E12, 70.0], [1.6672380251E12, 230.0], [1.6672380129E12, 230.0], [1.667238017E12, 210.0], [1.6672380211E12, 90.0], [1.6672380252E12, 90.0], [1.6672380168E12, 20.0], [1.6672380209E12, 10.0], [1.667238025E12, 180.0], [1.6672380127E12, 110.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6672380254E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6672380124E12, "maxY": 520.0, "series": [{"data": [[1.6672380131E12, 130.0], [1.6672380172E12, 80.0], [1.6672380213E12, 220.0], [1.6672380254E12, 100.0], [1.667238013E12, 230.0], [1.6672380171E12, 130.0], [1.6672380212E12, 190.0], [1.6672380253E12, 250.0], [1.6672380216E12, 140.0], [1.6672380134E12, 220.0], [1.6672380175E12, 230.0], [1.6672380132E12, 50.0], [1.6672380173E12, 100.0], [1.6672380214E12, 90.0], [1.6672380133E12, 240.0], [1.6672380174E12, 150.0], [1.6672380215E12, 360.0], [1.6672380136E12, 220.0], [1.6672380177E12, 20.0], [1.6672380218E12, 150.0], [1.6672380135E12, 240.0], [1.6672380176E12, 210.0], [1.6672380217E12, 130.0], [1.6672380139E12, 160.0], [1.667238018E12, 90.0], [1.6672380221E12, 30.0], [1.6672380137E12, 130.0], [1.6672380178E12, 270.0], [1.6672380219E12, 50.0], [1.6672380138E12, 60.0], [1.6672380179E12, 190.0], [1.667238022E12, 150.0], [1.6672380182E12, 90.0], [1.6672380223E12, 170.0], [1.6672380142E12, 120.0], [1.6672380183E12, 270.0], [1.667238014E12, 190.0], [1.6672380181E12, 110.0], [1.6672380222E12, 230.0], [1.6672380144E12, 230.0], [1.6672380185E12, 240.0], [1.6672380226E12, 520.0], [1.6672380224E12, 10.0], [1.6672380184E12, 140.0], [1.6672380225E12, 120.0], [1.6672380143E12, 260.0], [1.6672380146E12, 60.0], [1.6672380187E12, 140.0], [1.6672380228E12, 150.0], [1.6672380147E12, 320.0], [1.6672380188E12, 200.0], [1.6672380229E12, 80.0], [1.6672380145E12, 20.0], [1.6672380186E12, 80.0], [1.6672380227E12, 90.0], [1.6672380149E12, 150.0], [1.667238019E12, 10.0], [1.6672380231E12, 180.0], [1.6672380148E12, 60.0], [1.6672380189E12, 170.0], [1.667238023E12, 180.0], [1.6672380192E12, 330.0], [1.6672380233E12, 140.0], [1.6672380152E12, 210.0], [1.6672380193E12, 50.0], [1.6672380234E12, 90.0], [1.6672380232E12, 100.0], [1.667238015E12, 30.0], [1.6672380191E12, 20.0], [1.6672380151E12, 130.0], [1.6672380154E12, 110.0], [1.6672380195E12, 10.0], [1.6672380236E12, 190.0], [1.6672380153E12, 400.0], [1.6672380194E12, 290.0], [1.6672380235E12, 250.0], [1.6672380157E12, 70.0], [1.6672380198E12, 280.0], [1.6672380239E12, 140.0], [1.6672380155E12, 150.0], [1.6672380196E12, 240.0], [1.6672380237E12, 120.0], [1.6672380156E12, 240.0], [1.6672380197E12, 10.0], [1.6672380238E12, 120.0], [1.66723802E12, 230.0], [1.6672380241E12, 70.0], [1.6672380159E12, 80.0], [1.6672380158E12, 40.0], [1.6672380199E12, 50.0], [1.667238024E12, 200.0], [1.6672380162E12, 410.0], [1.6672380203E12, 160.0], [1.6672380244E12, 180.0], [1.667238016E12, 170.0], [1.6672380201E12, 150.0], [1.6672380242E12, 220.0], [1.6672380161E12, 40.0], [1.6672380202E12, 70.0], [1.6672380243E12, 70.0], [1.6672380164E12, 70.0], [1.6672380246E12, 410.0], [1.6672380124E12, 190.0], [1.6672380165E12, 410.0], [1.6672380206E12, 20.0], [1.6672380247E12, 290.0], [1.6672380163E12, 20.0], [1.6672380204E12, 150.0], [1.6672380245E12, 70.0], [1.6672380126E12, 150.0], [1.6672380167E12, 150.0], [1.6672380208E12, 430.0], [1.6672380249E12, 100.0], [1.6672380248E12, 140.0], [1.6672380125E12, 20.0], [1.6672380166E12, 150.0], [1.6672380207E12, 200.0], [1.6672380128E12, 110.0], [1.6672380169E12, 220.0], [1.667238021E12, 70.0], [1.6672380251E12, 230.0], [1.6672380129E12, 230.0], [1.667238017E12, 210.0], [1.6672380211E12, 90.0], [1.6672380252E12, 90.0], [1.6672380168E12, 20.0], [1.6672380209E12, 10.0], [1.667238025E12, 180.0], [1.6672380127E12, 110.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6672380254E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

