/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 17.0, "minX": 0.0, "maxY": 142.0, "series": [{"data": [[0.0, 17.0], [0.1, 19.0], [0.2, 20.0], [0.3, 21.0], [0.4, 22.0], [0.5, 24.0], [0.6, 24.0], [0.7, 25.0], [0.8, 25.0], [0.9, 26.0], [1.0, 26.0], [1.1, 27.0], [1.2, 27.0], [1.3, 27.0], [1.4, 27.0], [1.5, 28.0], [1.6, 28.0], [1.7, 28.0], [1.8, 28.0], [1.9, 28.0], [2.0, 29.0], [2.1, 29.0], [2.2, 29.0], [2.3, 29.0], [2.4, 30.0], [2.5, 30.0], [2.6, 30.0], [2.7, 30.0], [2.8, 30.0], [2.9, 31.0], [3.0, 31.0], [3.1, 31.0], [3.2, 31.0], [3.3, 31.0], [3.4, 31.0], [3.5, 32.0], [3.6, 32.0], [3.7, 32.0], [3.8, 32.0], [3.9, 32.0], [4.0, 32.0], [4.1, 33.0], [4.2, 33.0], [4.3, 33.0], [4.4, 33.0], [4.5, 33.0], [4.6, 34.0], [4.7, 34.0], [4.8, 34.0], [4.9, 34.0], [5.0, 34.0], [5.1, 34.0], [5.2, 34.0], [5.3, 34.0], [5.4, 34.0], [5.5, 35.0], [5.6, 35.0], [5.7, 35.0], [5.8, 35.0], [5.9, 35.0], [6.0, 35.0], [6.1, 36.0], [6.2, 36.0], [6.3, 36.0], [6.4, 36.0], [6.5, 36.0], [6.6, 36.0], [6.7, 36.0], [6.8, 36.0], [6.9, 36.0], [7.0, 36.0], [7.1, 37.0], [7.2, 37.0], [7.3, 37.0], [7.4, 37.0], [7.5, 37.0], [7.6, 37.0], [7.7, 37.0], [7.8, 37.0], [7.9, 37.0], [8.0, 37.0], [8.1, 37.0], [8.2, 37.0], [8.3, 37.0], [8.4, 38.0], [8.5, 38.0], [8.6, 38.0], [8.7, 38.0], [8.8, 38.0], [8.9, 38.0], [9.0, 38.0], [9.1, 38.0], [9.2, 38.0], [9.3, 38.0], [9.4, 38.0], [9.5, 38.0], [9.6, 39.0], [9.7, 39.0], [9.8, 39.0], [9.9, 39.0], [10.0, 39.0], [10.1, 39.0], [10.2, 39.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 39.0], [10.7, 39.0], [10.8, 40.0], [10.9, 40.0], [11.0, 40.0], [11.1, 40.0], [11.2, 40.0], [11.3, 40.0], [11.4, 40.0], [11.5, 40.0], [11.6, 40.0], [11.7, 40.0], [11.8, 40.0], [11.9, 40.0], [12.0, 40.0], [12.1, 40.0], [12.2, 40.0], [12.3, 41.0], [12.4, 41.0], [12.5, 41.0], [12.6, 41.0], [12.7, 41.0], [12.8, 41.0], [12.9, 41.0], [13.0, 41.0], [13.1, 41.0], [13.2, 41.0], [13.3, 41.0], [13.4, 41.0], [13.5, 41.0], [13.6, 41.0], [13.7, 41.0], [13.8, 42.0], [13.9, 42.0], [14.0, 42.0], [14.1, 42.0], [14.2, 42.0], [14.3, 42.0], [14.4, 42.0], [14.5, 42.0], [14.6, 42.0], [14.7, 42.0], [14.8, 42.0], [14.9, 42.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 42.0], [15.5, 42.0], [15.6, 43.0], [15.7, 43.0], [15.8, 43.0], [15.9, 43.0], [16.0, 43.0], [16.1, 43.0], [16.2, 43.0], [16.3, 43.0], [16.4, 43.0], [16.5, 43.0], [16.6, 43.0], [16.7, 43.0], [16.8, 43.0], [16.9, 43.0], [17.0, 43.0], [17.1, 43.0], [17.2, 43.0], [17.3, 43.0], [17.4, 44.0], [17.5, 44.0], [17.6, 44.0], [17.7, 44.0], [17.8, 44.0], [17.9, 44.0], [18.0, 44.0], [18.1, 44.0], [18.2, 44.0], [18.3, 44.0], [18.4, 44.0], [18.5, 44.0], [18.6, 44.0], [18.7, 44.0], [18.8, 44.0], [18.9, 44.0], [19.0, 45.0], [19.1, 45.0], [19.2, 45.0], [19.3, 45.0], [19.4, 45.0], [19.5, 45.0], [19.6, 45.0], [19.7, 45.0], [19.8, 45.0], [19.9, 45.0], [20.0, 45.0], [20.1, 45.0], [20.2, 45.0], [20.3, 45.0], [20.4, 45.0], [20.5, 45.0], [20.6, 45.0], [20.7, 45.0], [20.8, 45.0], [20.9, 45.0], [21.0, 46.0], [21.1, 46.0], [21.2, 46.0], [21.3, 46.0], [21.4, 46.0], [21.5, 46.0], [21.6, 46.0], [21.7, 46.0], [21.8, 46.0], [21.9, 46.0], [22.0, 46.0], [22.1, 46.0], [22.2, 46.0], [22.3, 46.0], [22.4, 46.0], [22.5, 46.0], [22.6, 46.0], [22.7, 46.0], [22.8, 46.0], [22.9, 47.0], [23.0, 47.0], [23.1, 47.0], [23.2, 47.0], [23.3, 47.0], [23.4, 47.0], [23.5, 47.0], [23.6, 47.0], [23.7, 47.0], [23.8, 47.0], [23.9, 47.0], [24.0, 47.0], [24.1, 47.0], [24.2, 47.0], [24.3, 47.0], [24.4, 47.0], [24.5, 47.0], [24.6, 47.0], [24.7, 47.0], [24.8, 48.0], [24.9, 48.0], [25.0, 48.0], [25.1, 48.0], [25.2, 48.0], [25.3, 48.0], [25.4, 48.0], [25.5, 48.0], [25.6, 48.0], [25.7, 48.0], [25.8, 48.0], [25.9, 48.0], [26.0, 48.0], [26.1, 48.0], [26.2, 48.0], [26.3, 48.0], [26.4, 48.0], [26.5, 48.0], [26.6, 48.0], [26.7, 48.0], [26.8, 48.0], [26.9, 48.0], [27.0, 48.0], [27.1, 49.0], [27.2, 49.0], [27.3, 49.0], [27.4, 49.0], [27.5, 49.0], [27.6, 49.0], [27.7, 49.0], [27.8, 49.0], [27.9, 49.0], [28.0, 49.0], [28.1, 49.0], [28.2, 49.0], [28.3, 49.0], [28.4, 49.0], [28.5, 49.0], [28.6, 49.0], [28.7, 49.0], [28.8, 49.0], [28.9, 49.0], [29.0, 49.0], [29.1, 49.0], [29.2, 49.0], [29.3, 49.0], [29.4, 50.0], [29.5, 50.0], [29.6, 50.0], [29.7, 50.0], [29.8, 50.0], [29.9, 50.0], [30.0, 50.0], [30.1, 50.0], [30.2, 50.0], [30.3, 50.0], [30.4, 50.0], [30.5, 50.0], [30.6, 50.0], [30.7, 50.0], [30.8, 50.0], [30.9, 50.0], [31.0, 51.0], [31.1, 51.0], [31.2, 51.0], [31.3, 51.0], [31.4, 51.0], [31.5, 51.0], [31.6, 51.0], [31.7, 51.0], [31.8, 51.0], [31.9, 51.0], [32.0, 51.0], [32.1, 51.0], [32.2, 51.0], [32.3, 51.0], [32.4, 51.0], [32.5, 51.0], [32.6, 51.0], [32.7, 52.0], [32.8, 52.0], [32.9, 52.0], [33.0, 52.0], [33.1, 52.0], [33.2, 52.0], [33.3, 52.0], [33.4, 52.0], [33.5, 52.0], [33.6, 52.0], [33.7, 52.0], [33.8, 52.0], [33.9, 52.0], [34.0, 52.0], [34.1, 52.0], [34.2, 52.0], [34.3, 52.0], [34.4, 52.0], [34.5, 52.0], [34.6, 52.0], [34.7, 52.0], [34.8, 52.0], [34.9, 52.0], [35.0, 52.0], [35.1, 52.0], [35.2, 53.0], [35.3, 53.0], [35.4, 53.0], [35.5, 53.0], [35.6, 53.0], [35.7, 53.0], [35.8, 53.0], [35.9, 53.0], [36.0, 53.0], [36.1, 53.0], [36.2, 53.0], [36.3, 53.0], [36.4, 53.0], [36.5, 53.0], [36.6, 53.0], [36.7, 53.0], [36.8, 53.0], [36.9, 53.0], [37.0, 53.0], [37.1, 53.0], [37.2, 53.0], [37.3, 53.0], [37.4, 54.0], [37.5, 54.0], [37.6, 54.0], [37.7, 54.0], [37.8, 54.0], [37.9, 54.0], [38.0, 54.0], [38.1, 54.0], [38.2, 54.0], [38.3, 54.0], [38.4, 54.0], [38.5, 54.0], [38.6, 54.0], [38.7, 54.0], [38.8, 54.0], [38.9, 54.0], [39.0, 54.0], [39.1, 54.0], [39.2, 54.0], [39.3, 54.0], [39.4, 54.0], [39.5, 54.0], [39.6, 55.0], [39.7, 55.0], [39.8, 55.0], [39.9, 55.0], [40.0, 55.0], [40.1, 55.0], [40.2, 55.0], [40.3, 55.0], [40.4, 55.0], [40.5, 55.0], [40.6, 55.0], [40.7, 55.0], [40.8, 55.0], [40.9, 55.0], [41.0, 55.0], [41.1, 55.0], [41.2, 55.0], [41.3, 55.0], [41.4, 56.0], [41.5, 56.0], [41.6, 56.0], [41.7, 56.0], [41.8, 56.0], [41.9, 56.0], [42.0, 56.0], [42.1, 56.0], [42.2, 56.0], [42.3, 56.0], [42.4, 56.0], [42.5, 56.0], [42.6, 56.0], [42.7, 56.0], [42.8, 56.0], [42.9, 56.0], [43.0, 56.0], [43.1, 56.0], [43.2, 57.0], [43.3, 57.0], [43.4, 57.0], [43.5, 57.0], [43.6, 57.0], [43.7, 57.0], [43.8, 57.0], [43.9, 57.0], [44.0, 57.0], [44.1, 57.0], [44.2, 57.0], [44.3, 57.0], [44.4, 57.0], [44.5, 57.0], [44.6, 57.0], [44.7, 57.0], [44.8, 57.0], [44.9, 58.0], [45.0, 58.0], [45.1, 58.0], [45.2, 58.0], [45.3, 58.0], [45.4, 58.0], [45.5, 58.0], [45.6, 58.0], [45.7, 58.0], [45.8, 58.0], [45.9, 58.0], [46.0, 58.0], [46.1, 58.0], [46.2, 58.0], [46.3, 58.0], [46.4, 58.0], [46.5, 58.0], [46.6, 58.0], [46.7, 59.0], [46.8, 59.0], [46.9, 59.0], [47.0, 59.0], [47.1, 59.0], [47.2, 59.0], [47.3, 59.0], [47.4, 59.0], [47.5, 59.0], [47.6, 59.0], [47.7, 59.0], [47.8, 59.0], [47.9, 59.0], [48.0, 59.0], [48.1, 59.0], [48.2, 59.0], [48.3, 59.0], [48.4, 59.0], [48.5, 59.0], [48.6, 59.0], [48.7, 60.0], [48.8, 60.0], [48.9, 60.0], [49.0, 60.0], [49.1, 60.0], [49.2, 60.0], [49.3, 60.0], [49.4, 60.0], [49.5, 60.0], [49.6, 60.0], [49.7, 60.0], [49.8, 60.0], [49.9, 60.0], [50.0, 60.0], [50.1, 60.0], [50.2, 60.0], [50.3, 60.0], [50.4, 60.0], [50.5, 60.0], [50.6, 60.0], [50.7, 60.0], [50.8, 61.0], [50.9, 61.0], [51.0, 61.0], [51.1, 61.0], [51.2, 61.0], [51.3, 61.0], [51.4, 61.0], [51.5, 61.0], [51.6, 61.0], [51.7, 61.0], [51.8, 61.0], [51.9, 61.0], [52.0, 61.0], [52.1, 61.0], [52.2, 61.0], [52.3, 61.0], [52.4, 61.0], [52.5, 62.0], [52.6, 62.0], [52.7, 62.0], [52.8, 62.0], [52.9, 62.0], [53.0, 62.0], [53.1, 62.0], [53.2, 62.0], [53.3, 62.0], [53.4, 62.0], [53.5, 62.0], [53.6, 62.0], [53.7, 62.0], [53.8, 62.0], [53.9, 62.0], [54.0, 62.0], [54.1, 62.0], [54.2, 62.0], [54.3, 63.0], [54.4, 63.0], [54.5, 63.0], [54.6, 63.0], [54.7, 63.0], [54.8, 63.0], [54.9, 63.0], [55.0, 63.0], [55.1, 63.0], [55.2, 63.0], [55.3, 63.0], [55.4, 63.0], [55.5, 63.0], [55.6, 63.0], [55.7, 63.0], [55.8, 63.0], [55.9, 63.0], [56.0, 63.0], [56.1, 64.0], [56.2, 64.0], [56.3, 64.0], [56.4, 64.0], [56.5, 64.0], [56.6, 64.0], [56.7, 64.0], [56.8, 64.0], [56.9, 64.0], [57.0, 64.0], [57.1, 64.0], [57.2, 64.0], [57.3, 64.0], [57.4, 64.0], [57.5, 64.0], [57.6, 64.0], [57.7, 64.0], [57.8, 64.0], [57.9, 65.0], [58.0, 65.0], [58.1, 65.0], [58.2, 65.0], [58.3, 65.0], [58.4, 65.0], [58.5, 65.0], [58.6, 65.0], [58.7, 65.0], [58.8, 65.0], [58.9, 65.0], [59.0, 65.0], [59.1, 65.0], [59.2, 65.0], [59.3, 65.0], [59.4, 65.0], [59.5, 65.0], [59.6, 66.0], [59.7, 66.0], [59.8, 66.0], [59.9, 66.0], [60.0, 66.0], [60.1, 66.0], [60.2, 66.0], [60.3, 66.0], [60.4, 66.0], [60.5, 66.0], [60.6, 66.0], [60.7, 66.0], [60.8, 66.0], [60.9, 66.0], [61.0, 66.0], [61.1, 66.0], [61.2, 66.0], [61.3, 67.0], [61.4, 67.0], [61.5, 67.0], [61.6, 67.0], [61.7, 67.0], [61.8, 67.0], [61.9, 67.0], [62.0, 67.0], [62.1, 67.0], [62.2, 67.0], [62.3, 67.0], [62.4, 67.0], [62.5, 67.0], [62.6, 67.0], [62.7, 67.0], [62.8, 67.0], [62.9, 67.0], [63.0, 67.0], [63.1, 68.0], [63.2, 68.0], [63.3, 68.0], [63.4, 68.0], [63.5, 68.0], [63.6, 68.0], [63.7, 68.0], [63.8, 68.0], [63.9, 68.0], [64.0, 68.0], [64.1, 68.0], [64.2, 68.0], [64.3, 68.0], [64.4, 68.0], [64.5, 68.0], [64.6, 68.0], [64.7, 68.0], [64.8, 68.0], [64.9, 69.0], [65.0, 69.0], [65.1, 69.0], [65.2, 69.0], [65.3, 69.0], [65.4, 69.0], [65.5, 69.0], [65.6, 69.0], [65.7, 69.0], [65.8, 69.0], [65.9, 69.0], [66.0, 69.0], [66.1, 69.0], [66.2, 70.0], [66.3, 70.0], [66.4, 70.0], [66.5, 70.0], [66.6, 70.0], [66.7, 70.0], [66.8, 70.0], [66.9, 70.0], [67.0, 70.0], [67.1, 70.0], [67.2, 70.0], [67.3, 70.0], [67.4, 70.0], [67.5, 70.0], [67.6, 70.0], [67.7, 70.0], [67.8, 70.0], [67.9, 70.0], [68.0, 70.0], [68.1, 70.0], [68.2, 71.0], [68.3, 71.0], [68.4, 71.0], [68.5, 71.0], [68.6, 71.0], [68.7, 71.0], [68.8, 71.0], [68.9, 71.0], [69.0, 71.0], [69.1, 71.0], [69.2, 71.0], [69.3, 71.0], [69.4, 71.0], [69.5, 71.0], [69.6, 71.0], [69.7, 71.0], [69.8, 71.0], [69.9, 71.0], [70.0, 72.0], [70.1, 72.0], [70.2, 72.0], [70.3, 72.0], [70.4, 72.0], [70.5, 72.0], [70.6, 72.0], [70.7, 72.0], [70.8, 72.0], [70.9, 72.0], [71.0, 72.0], [71.1, 72.0], [71.2, 72.0], [71.3, 73.0], [71.4, 73.0], [71.5, 73.0], [71.6, 73.0], [71.7, 73.0], [71.8, 73.0], [71.9, 73.0], [72.0, 73.0], [72.1, 73.0], [72.2, 73.0], [72.3, 73.0], [72.4, 73.0], [72.5, 73.0], [72.6, 73.0], [72.7, 73.0], [72.8, 73.0], [72.9, 73.0], [73.0, 73.0], [73.1, 74.0], [73.2, 74.0], [73.3, 74.0], [73.4, 74.0], [73.5, 74.0], [73.6, 74.0], [73.7, 74.0], [73.8, 74.0], [73.9, 74.0], [74.0, 74.0], [74.1, 74.0], [74.2, 74.0], [74.3, 74.0], [74.4, 74.0], [74.5, 74.0], [74.6, 74.0], [74.7, 74.0], [74.8, 74.0], [74.9, 75.0], [75.0, 75.0], [75.1, 75.0], [75.2, 75.0], [75.3, 75.0], [75.4, 75.0], [75.5, 75.0], [75.6, 75.0], [75.7, 75.0], [75.8, 75.0], [75.9, 75.0], [76.0, 75.0], [76.1, 75.0], [76.2, 75.0], [76.3, 75.0], [76.4, 75.0], [76.5, 75.0], [76.6, 75.0], [76.7, 76.0], [76.8, 76.0], [76.9, 76.0], [77.0, 76.0], [77.1, 76.0], [77.2, 76.0], [77.3, 76.0], [77.4, 76.0], [77.5, 76.0], [77.6, 76.0], [77.7, 76.0], [77.8, 76.0], [77.9, 76.0], [78.0, 76.0], [78.1, 76.0], [78.2, 77.0], [78.3, 77.0], [78.4, 77.0], [78.5, 77.0], [78.6, 77.0], [78.7, 77.0], [78.8, 77.0], [78.9, 77.0], [79.0, 77.0], [79.1, 77.0], [79.2, 77.0], [79.3, 78.0], [79.4, 78.0], [79.5, 78.0], [79.6, 78.0], [79.7, 78.0], [79.8, 78.0], [79.9, 78.0], [80.0, 78.0], [80.1, 78.0], [80.2, 78.0], [80.3, 78.0], [80.4, 78.0], [80.5, 78.0], [80.6, 79.0], [80.7, 79.0], [80.8, 79.0], [80.9, 79.0], [81.0, 79.0], [81.1, 79.0], [81.2, 79.0], [81.3, 79.0], [81.4, 79.0], [81.5, 79.0], [81.6, 79.0], [81.7, 79.0], [81.8, 79.0], [81.9, 79.0], [82.0, 79.0], [82.1, 79.0], [82.2, 79.0], [82.3, 80.0], [82.4, 80.0], [82.5, 80.0], [82.6, 80.0], [82.7, 80.0], [82.8, 80.0], [82.9, 80.0], [83.0, 80.0], [83.1, 80.0], [83.2, 80.0], [83.3, 80.0], [83.4, 80.0], [83.5, 81.0], [83.6, 81.0], [83.7, 81.0], [83.8, 81.0], [83.9, 81.0], [84.0, 81.0], [84.1, 81.0], [84.2, 81.0], [84.3, 81.0], [84.4, 81.0], [84.5, 81.0], [84.6, 81.0], [84.7, 82.0], [84.8, 82.0], [84.9, 82.0], [85.0, 82.0], [85.1, 82.0], [85.2, 82.0], [85.3, 82.0], [85.4, 82.0], [85.5, 82.0], [85.6, 82.0], [85.7, 82.0], [85.8, 83.0], [85.9, 83.0], [86.0, 83.0], [86.1, 83.0], [86.2, 83.0], [86.3, 83.0], [86.4, 83.0], [86.5, 83.0], [86.6, 83.0], [86.7, 84.0], [86.8, 84.0], [86.9, 84.0], [87.0, 84.0], [87.1, 84.0], [87.2, 84.0], [87.3, 84.0], [87.4, 84.0], [87.5, 84.0], [87.6, 84.0], [87.7, 84.0], [87.8, 85.0], [87.9, 85.0], [88.0, 85.0], [88.1, 85.0], [88.2, 85.0], [88.3, 85.0], [88.4, 85.0], [88.5, 85.0], [88.6, 85.0], [88.7, 85.0], [88.8, 86.0], [88.9, 86.0], [89.0, 86.0], [89.1, 86.0], [89.2, 86.0], [89.3, 86.0], [89.4, 86.0], [89.5, 86.0], [89.6, 87.0], [89.7, 87.0], [89.8, 87.0], [89.9, 87.0], [90.0, 87.0], [90.1, 87.0], [90.2, 87.0], [90.3, 88.0], [90.4, 88.0], [90.5, 88.0], [90.6, 88.0], [90.7, 88.0], [90.8, 88.0], [90.9, 88.0], [91.0, 88.0], [91.1, 88.0], [91.2, 89.0], [91.3, 89.0], [91.4, 89.0], [91.5, 89.0], [91.6, 89.0], [91.7, 90.0], [91.8, 90.0], [91.9, 90.0], [92.0, 90.0], [92.1, 90.0], [92.2, 91.0], [92.3, 91.0], [92.4, 91.0], [92.5, 91.0], [92.6, 92.0], [92.7, 92.0], [92.8, 92.0], [92.9, 92.0], [93.0, 92.0], [93.1, 92.0], [93.2, 92.0], [93.3, 93.0], [93.4, 93.0], [93.5, 93.0], [93.6, 93.0], [93.7, 93.0], [93.8, 94.0], [93.9, 94.0], [94.0, 94.0], [94.1, 94.0], [94.2, 94.0], [94.3, 94.0], [94.4, 95.0], [94.5, 95.0], [94.6, 95.0], [94.7, 96.0], [94.8, 96.0], [94.9, 96.0], [95.0, 97.0], [95.1, 97.0], [95.2, 97.0], [95.3, 97.0], [95.4, 97.0], [95.5, 98.0], [95.6, 98.0], [95.7, 98.0], [95.8, 98.0], [95.9, 99.0], [96.0, 99.0], [96.1, 100.0], [96.2, 100.0], [96.3, 100.0], [96.4, 100.0], [96.5, 101.0], [96.6, 101.0], [96.7, 101.0], [96.8, 101.0], [96.9, 102.0], [97.0, 103.0], [97.1, 103.0], [97.2, 103.0], [97.3, 104.0], [97.4, 104.0], [97.5, 104.0], [97.6, 105.0], [97.7, 105.0], [97.8, 105.0], [97.9, 106.0], [98.0, 107.0], [98.1, 107.0], [98.2, 108.0], [98.3, 109.0], [98.4, 110.0], [98.5, 110.0], [98.6, 111.0], [98.7, 112.0], [98.8, 113.0], [98.9, 113.0], [99.0, 113.0], [99.1, 115.0], [99.2, 116.0], [99.3, 117.0], [99.4, 118.0], [99.5, 119.0], [99.6, 121.0], [99.7, 123.0], [99.8, 127.0], [99.9, 133.0], [100.0, 142.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 157.0, "minX": 0.0, "maxY": 3843.0, "series": [{"data": [[0.0, 3843.0], [100.0, 157.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 100.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4000.0, "series": [{"data": [[0.0, 4000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.3000000000000003, "minX": 1.6673187426E12, "maxY": 10.0, "series": [{"data": [[1.6673212548E12, 2.3000000000000003], [1.6673212466E12, 10.0], [1.6673187482E12, 10.0], [1.6673212467E12, 10.0], [1.6673187484E12, 10.0], [1.6673212465E12, 10.0], [1.6673212547E12, 3.3636363636363638], [1.6673187483E12, 10.0], [1.6673187485E12, 10.0], [1.6673212464E12, 10.0], [1.6673212546E12, 4.642857142857143], [1.6673212544E12, 7.470588235294119], [1.6673187486E12, 10.0], [1.6673212463E12, 10.0], [1.6673212545E12, 5.937500000000001], [1.6673212461E12, 10.0], [1.6673212543E12, 8.0], [1.6673187487E12, 10.0], [1.6673212462E12, 10.0], [1.6673187489E12, 10.0], [1.667321246E12, 10.0], [1.6673212542E12, 8.0], [1.6673187488E12, 10.0], [1.667318749E12, 10.0], [1.6673212541E12, 8.0], [1.6673212459E12, 10.0], [1.6673212457E12, 10.0], [1.6673212539E12, 9.0], [1.6673187491E12, 10.0], [1.667321254E12, 8.8125], [1.6673212458E12, 10.0], [1.6673187472E12, 10.0], [1.6673187554E12, 7.0], [1.6673212477E12, 10.0], [1.6673212475E12, 10.0], [1.6673187473E12, 10.0], [1.6673187555E12, 6.263157894736842], [1.6673212476E12, 10.0], [1.6673187475E12, 10.0], [1.6673212474E12, 10.0], [1.6673187556E12, 3.6363636363636367], [1.6673187474E12, 10.0], [1.6673187476E12, 10.0], [1.6673212473E12, 10.0], [1.6673187477E12, 10.0], [1.6673212472E12, 10.0], [1.6673187479E12, 10.0], [1.667321247E12, 10.0], [1.6673187478E12, 10.0], [1.6673212471E12, 10.0], [1.667318748E12, 10.0], [1.6673212469E12, 10.0], [1.6673187481E12, 10.0], [1.6673212468E12, 10.0], [1.6673187503E12, 10.0], [1.6673212487E12, 10.0], [1.6673187504E12, 10.0], [1.6673212486E12, 10.0], [1.6673212484E12, 10.0], [1.6673187505E12, 10.0], [1.6673212485E12, 10.0], [1.6673187507E12, 10.0], [1.6673212483E12, 10.0], [1.6673187506E12, 10.0], [1.6673187508E12, 10.0], [1.6673187426E12, 4.0], [1.6673212482E12, 10.0], [1.667321248E12, 10.0], [1.6673187509E12, 10.0], [1.6673187427E12, 4.923076923076923], [1.6673212481E12, 10.0], [1.6673187429E12, 7.0], [1.6673187511E12, 10.0], [1.6673212479E12, 10.0], [1.6673187428E12, 6.0], [1.667318751E12, 10.0], [1.6673187512E12, 10.0], [1.667318743E12, 8.0], [1.6673212478E12, 10.0], [1.6673187493E12, 10.0], [1.6673212497E12, 10.0], [1.6673187492E12, 10.0], [1.6673187494E12, 10.0], [1.6673212496E12, 10.0], [1.6673187495E12, 10.0], [1.6673212495E12, 10.0], [1.6673212493E12, 10.0], [1.6673187496E12, 10.0], [1.6673212494E12, 10.0], [1.6673187498E12, 10.0], [1.6673212492E12, 10.0], [1.6673187497E12, 10.0], [1.6673187499E12, 10.0], [1.6673212491E12, 10.0], [1.6673212489E12, 10.0], [1.66731875E12, 10.0], [1.667321249E12, 10.0], [1.6673187502E12, 10.0], [1.6673212488E12, 10.0], [1.6673187501E12, 10.0], [1.6673212425E12, 7.428571428571428], [1.6673212507E12, 10.0], [1.6673187441E12, 10.0], [1.6673187523E12, 10.0], [1.6673212508E12, 10.0], [1.6673212426E12, 8.428571428571427], [1.6673187525E12, 10.0], [1.6673187443E12, 10.0], [1.6673212424E12, 6.285714285714286], [1.6673212506E12, 10.0], [1.6673187524E12, 10.0], [1.6673187442E12, 10.0], [1.6673187444E12, 10.0], [1.6673187526E12, 10.0], [1.6673212423E12, 5.266666666666666], [1.6673212505E12, 10.0], [1.6673187445E12, 10.0], [1.6673187527E12, 10.0], [1.6673212422E12, 4.285714285714286], [1.6673212504E12, 10.0], [1.6673187447E12, 10.0], [1.6673212502E12, 10.0], [1.6673187528E12, 10.0], [1.6673187446E12, 10.0], [1.6673212421E12, 3.3333333333333335], [1.6673212503E12, 10.0], [1.6673187448E12, 10.0], [1.667318753E12, 10.0], [1.6673212501E12, 10.0], [1.6673187529E12, 10.0], [1.6673187449E12, 10.0], [1.6673187531E12, 10.0], [1.66732125E12, 10.0], [1.6673212498E12, 10.0], [1.6673187532E12, 10.0], [1.667318745E12, 10.0], [1.6673212499E12, 10.0], [1.6673187513E12, 10.0], [1.6673187431E12, 9.0], [1.6673212436E12, 10.0], [1.6673212518E12, 10.0], [1.6673212516E12, 10.0], [1.6673212434E12, 10.0], [1.6673187432E12, 10.0], [1.6673187514E12, 10.0], [1.6673212517E12, 10.0], [1.6673212435E12, 10.0], [1.6673187516E12, 10.0], [1.6673187434E12, 10.0], [1.6673212433E12, 10.0], [1.6673212515E12, 10.0], [1.6673187433E12, 10.0], [1.6673187515E12, 10.0], [1.6673187517E12, 10.0], [1.6673187435E12, 10.0], [1.6673212432E12, 10.0], [1.6673212514E12, 10.0], [1.6673212512E12, 10.0], [1.6673187436E12, 10.0], [1.6673187518E12, 10.0], [1.6673212431E12, 10.0], [1.6673212513E12, 10.0], [1.6673187438E12, 10.0], [1.6673212429E12, 10.0], [1.6673212511E12, 10.0], [1.6673187437E12, 10.0], [1.6673187519E12, 10.0], [1.667321243E12, 10.0], [1.6673187521E12, 10.0], [1.6673187439E12, 10.0], [1.6673212428E12, 10.0], [1.667321251E12, 10.0], [1.667318752E12, 10.0], [1.667318744E12, 10.0], [1.6673187522E12, 10.0], [1.6673212509E12, 10.0], [1.6673212427E12, 9.4], [1.6673187544E12, 10.0], [1.6673187462E12, 10.0], [1.6673212446E12, 10.0], [1.6673212528E12, 10.0], [1.6673187545E12, 10.0], [1.6673187463E12, 10.0], [1.6673212445E12, 10.0], [1.6673212527E12, 10.0], [1.6673212525E12, 10.0], [1.6673212443E12, 10.0], [1.6673187464E12, 10.0], [1.6673187546E12, 10.0], [1.6673212444E12, 10.0], [1.6673212526E12, 10.0], [1.6673187548E12, 10.0], [1.6673187466E12, 10.0], [1.6673212524E12, 10.0], [1.6673212442E12, 10.0], [1.6673187465E12, 10.0], [1.6673187547E12, 10.0], [1.6673187549E12, 10.0], [1.6673187467E12, 10.0], [1.6673212441E12, 10.0], [1.6673212523E12, 10.0], [1.6673212521E12, 10.0], [1.6673187468E12, 10.0], [1.667318755E12, 10.0], [1.667321244E12, 10.0], [1.6673212522E12, 10.0], [1.667318747E12, 10.0], [1.6673212438E12, 10.0], [1.667321252E12, 10.0], [1.6673187469E12, 10.0], [1.6673187551E12, 10.0], [1.6673212439E12, 10.0], [1.6673187553E12, 7.7368421052631575], [1.6673187471E12, 10.0], [1.6673212437E12, 10.0], [1.6673212519E12, 10.0], [1.6673187552E12, 8.625], [1.6673187452E12, 10.0], [1.6673187534E12, 10.0], [1.6673212456E12, 10.0], [1.6673212538E12, 9.0], [1.6673187533E12, 10.0], [1.6673187451E12, 10.0], [1.6673187453E12, 10.0], [1.6673187535E12, 10.0], [1.6673212455E12, 10.0], [1.6673212537E12, 9.0], [1.6673187536E12, 10.0], [1.6673187454E12, 10.0], [1.6673212454E12, 10.0], [1.6673212536E12, 9.529411764705882], [1.6673212452E12, 10.0], [1.6673212534E12, 10.0], [1.6673187537E12, 10.0], [1.6673187455E12, 10.0], [1.6673212453E12, 10.0], [1.6673212535E12, 10.0], [1.6673187457E12, 10.0], [1.6673187539E12, 10.0], [1.6673212533E12, 10.0], [1.6673212451E12, 10.0], [1.6673187456E12, 10.0], [1.6673187538E12, 10.0], [1.667318754E12, 10.0], [1.6673187458E12, 10.0], [1.6673212532E12, 10.0], [1.667321245E12, 10.0], [1.6673212448E12, 10.0], [1.667321253E12, 10.0], [1.6673187541E12, 10.0], [1.6673187459E12, 10.0], [1.6673212449E12, 10.0], [1.6673212531E12, 10.0], [1.6673187461E12, 10.0], [1.6673187543E12, 10.0], [1.6673212447E12, 10.0], [1.6673212529E12, 10.0], [1.667318746E12, 10.0], [1.6673187542E12, 10.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673212548E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.5, "minX": 1.0, "maxY": 63.690868472493584, "series": [{"data": [[4.0, 38.69444444444445], [8.0, 52.064814814814824], [2.0, 21.5], [1.0, 20.5], [9.0, 55.70192307692308], [5.0, 35.79069767441862], [10.0, 63.690868472493584], [6.0, 40.44680851063828], [3.0, 35.75000000000001], [7.0, 49.61403508771931]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[9.678000000000015, 61.973999999999975]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 10.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 28740.0, "minX": 1.6673187426E12, "maxY": 183760.0, "series": [{"data": [[1.6673212548E12, 88710.0], [1.6673212466E12, 159670.0], [1.6673187482E12, 137500.0], [1.6673212467E12, 148090.0], [1.6673187484E12, 155840.0], [1.6673212465E12, 142530.0], [1.6673212547E12, 98970.0], [1.6673187483E12, 139930.0], [1.6673187485E12, 131540.0], [1.6673212464E12, 153680.0], [1.6673212546E12, 128010.0], [1.6673212544E12, 145380.0], [1.6673187486E12, 140770.0], [1.6673212463E12, 137350.0], [1.6673212545E12, 142100.0], [1.6673212461E12, 152930.0], [1.6673212543E12, 143520.0], [1.6673187487E12, 133700.0], [1.6673212462E12, 142580.0], [1.6673187489E12, 134110.0], [1.667321246E12, 139640.0], [1.6673212542E12, 114480.0], [1.6673187488E12, 154710.0], [1.667318749E12, 125290.0], [1.6673212541E12, 153160.0], [1.6673212459E12, 131720.0], [1.6673212457E12, 158640.0], [1.6673212539E12, 145140.0], [1.6673187491E12, 151550.0], [1.667321254E12, 144810.0], [1.6673212458E12, 132540.0], [1.6673187472E12, 110820.0], [1.6673187554E12, 100210.0], [1.6673212477E12, 173530.0], [1.6673212475E12, 156570.0], [1.6673187473E12, 141440.0], [1.6673187555E12, 171670.0], [1.6673212476E12, 140500.0], [1.6673187475E12, 157280.0], [1.6673212474E12, 137960.0], [1.6673187556E12, 96820.0], [1.6673187474E12, 128080.0], [1.6673187476E12, 129420.0], [1.6673212473E12, 132080.0], [1.6673187477E12, 136550.0], [1.6673212472E12, 170800.0], [1.6673187479E12, 136680.0], [1.667321247E12, 136620.0], [1.6673187478E12, 128150.0], [1.6673212471E12, 104880.0], [1.667318748E12, 122970.0], [1.6673212469E12, 140930.0], [1.6673187481E12, 141680.0], [1.6673212468E12, 118040.0], [1.6673187503E12, 149740.0], [1.6673212487E12, 160970.0], [1.6673187504E12, 131400.0], [1.6673212486E12, 183760.0], [1.6673212484E12, 145020.0], [1.6673187505E12, 126240.0], [1.6673212485E12, 134370.0], [1.6673187507E12, 133630.0], [1.6673212483E12, 121000.0], [1.6673187506E12, 148430.0], [1.6673187508E12, 127030.0], [1.6673187426E12, 76300.0], [1.6673212482E12, 164760.0], [1.667321248E12, 130480.0], [1.6673187509E12, 111290.0], [1.6673187427E12, 110210.0], [1.6673212481E12, 143240.0], [1.6673187429E12, 95140.0], [1.6673187511E12, 123450.0], [1.6673212479E12, 149920.0], [1.6673187428E12, 103910.0], [1.667318751E12, 146500.0], [1.6673187512E12, 147060.0], [1.667318743E12, 110660.0], [1.6673212478E12, 136300.0], [1.6673187493E12, 120230.0], [1.6673212497E12, 126370.0], [1.6673187492E12, 115850.0], [1.6673187494E12, 129080.0], [1.6673212496E12, 150250.0], [1.6673187495E12, 159010.0], [1.6673212495E12, 124010.0], [1.6673212493E12, 133160.0], [1.6673187496E12, 122070.0], [1.6673212494E12, 148740.0], [1.6673187498E12, 143180.0], [1.6673212492E12, 133490.0], [1.6673187497E12, 128480.0], [1.6673187499E12, 144600.0], [1.6673212491E12, 165540.0], [1.6673212489E12, 122040.0], [1.66731875E12, 115900.0], [1.667321249E12, 115460.0], [1.6673187502E12, 110350.0], [1.6673212488E12, 119590.0], [1.6673187501E12, 144840.0], [1.6673212425E12, 127490.0], [1.6673212507E12, 180120.0], [1.6673187441E12, 115510.0], [1.6673187523E12, 151640.0], [1.6673212508E12, 112080.0], [1.6673212426E12, 127460.0], [1.6673187525E12, 128800.0], [1.6673187443E12, 139670.0], [1.6673212424E12, 129080.0], [1.6673212506E12, 91950.0], [1.6673187524E12, 136990.0], [1.6673187442E12, 157640.0], [1.6673187444E12, 159190.0], [1.6673187526E12, 112270.0], [1.6673212423E12, 126030.0], [1.6673212505E12, 137590.0], [1.6673187445E12, 129320.0], [1.6673187527E12, 163950.0], [1.6673212422E12, 120430.0], [1.6673212504E12, 150830.0], [1.6673187447E12, 138830.0], [1.6673212502E12, 141770.0], [1.6673187528E12, 146300.0], [1.6673187446E12, 128240.0], [1.6673212421E12, 56760.0], [1.6673212503E12, 134340.0], [1.6673187448E12, 149590.0], [1.667318753E12, 182050.0], [1.6673212501E12, 146350.0], [1.6673187529E12, 121320.0], [1.6673187449E12, 154910.0], [1.6673187531E12, 113100.0], [1.66732125E12, 139380.0], [1.6673212498E12, 137950.0], [1.6673187532E12, 144630.0], [1.667318745E12, 141970.0], [1.6673212499E12, 144170.0], [1.6673187513E12, 156310.0], [1.6673187431E12, 147390.0], [1.6673212436E12, 133710.0], [1.6673212518E12, 134140.0], [1.6673212516E12, 163410.0], [1.6673212434E12, 125340.0], [1.6673187432E12, 162950.0], [1.6673187514E12, 132120.0], [1.6673212517E12, 116950.0], [1.6673212435E12, 138050.0], [1.6673187516E12, 152630.0], [1.6673187434E12, 125000.0], [1.6673212433E12, 129000.0], [1.6673212515E12, 144190.0], [1.6673187433E12, 115390.0], [1.6673187515E12, 131890.0], [1.6673187517E12, 129450.0], [1.6673187435E12, 154540.0], [1.6673212432E12, 164510.0], [1.6673212514E12, 134240.0], [1.6673212512E12, 140020.0], [1.6673187436E12, 122080.0], [1.6673187518E12, 112490.0], [1.6673212431E12, 122550.0], [1.6673212513E12, 151920.0], [1.6673187438E12, 144590.0], [1.6673212429E12, 108700.0], [1.6673212511E12, 124110.0], [1.6673187437E12, 155640.0], [1.6673187519E12, 121780.0], [1.667321243E12, 149060.0], [1.6673187521E12, 126230.0], [1.6673187439E12, 135360.0], [1.6673212428E12, 125080.0], [1.667321251E12, 135630.0], [1.667318752E12, 170570.0], [1.667318744E12, 146030.0], [1.6673187522E12, 156220.0], [1.6673212509E12, 145200.0], [1.6673212427E12, 137650.0], [1.6673187544E12, 127570.0], [1.6673187462E12, 132530.0], [1.6673212446E12, 150910.0], [1.6673212528E12, 154710.0], [1.6673187545E12, 147630.0], [1.6673187463E12, 159690.0], [1.6673212445E12, 116160.0], [1.6673212527E12, 140700.0], [1.6673212525E12, 149980.0], [1.6673212443E12, 158090.0], [1.6673187464E12, 152960.0], [1.6673187546E12, 118490.0], [1.6673212444E12, 136200.0], [1.6673212526E12, 159910.0], [1.6673187548E12, 123010.0], [1.6673187466E12, 149110.0], [1.6673212524E12, 126660.0], [1.6673212442E12, 146520.0], [1.6673187465E12, 125710.0], [1.6673187547E12, 148300.0], [1.6673187549E12, 138790.0], [1.6673187467E12, 128900.0], [1.6673212441E12, 145690.0], [1.6673212523E12, 140660.0], [1.6673212521E12, 130760.0], [1.6673187468E12, 130530.0], [1.667318755E12, 106460.0], [1.667321244E12, 132500.0], [1.6673212522E12, 138210.0], [1.667318747E12, 139480.0], [1.6673212438E12, 132910.0], [1.667321252E12, 158530.0], [1.6673187469E12, 131460.0], [1.6673187551E12, 141240.0], [1.6673212439E12, 146160.0], [1.6673187553E12, 161120.0], [1.6673187471E12, 159980.0], [1.6673212437E12, 130640.0], [1.6673212519E12, 164250.0], [1.6673187552E12, 142940.0], [1.6673187452E12, 152570.0], [1.6673187534E12, 148470.0], [1.6673212456E12, 144840.0], [1.6673212538E12, 155270.0], [1.6673187533E12, 137970.0], [1.6673187451E12, 131750.0], [1.6673187453E12, 138840.0], [1.6673187535E12, 151890.0], [1.6673212455E12, 128720.0], [1.6673212537E12, 138100.0], [1.6673187536E12, 111270.0], [1.6673187454E12, 111530.0], [1.6673212454E12, 160620.0], [1.6673212536E12, 149330.0], [1.6673212452E12, 133490.0], [1.6673212534E12, 159630.0], [1.6673187537E12, 159490.0], [1.6673187455E12, 172230.0], [1.6673212453E12, 147720.0], [1.6673212535E12, 144800.0], [1.6673187457E12, 140240.0], [1.6673187539E12, 109600.0], [1.6673212533E12, 129810.0], [1.6673212451E12, 137120.0], [1.6673187456E12, 104650.0], [1.6673187538E12, 164170.0], [1.667318754E12, 157610.0], [1.6673187458E12, 140860.0], [1.6673212532E12, 154610.0], [1.667321245E12, 148980.0], [1.6673212448E12, 106880.0], [1.667321253E12, 153180.0], [1.6673187541E12, 119260.0], [1.6673187459E12, 138230.0], [1.6673212449E12, 127970.0], [1.6673212531E12, 147440.0], [1.6673187461E12, 142300.0], [1.6673187543E12, 126530.0], [1.6673212447E12, 161250.0], [1.6673212529E12, 148030.0], [1.667318746E12, 119780.0], [1.6673187542E12, 148200.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6673212548E12, 47900.0], [1.6673212466E12, 86220.0], [1.6673187482E12, 71850.0], [1.6673212467E12, 81430.0], [1.6673187484E12, 81430.0], [1.6673212465E12, 76640.0], [1.6673212547E12, 52690.0], [1.6673187483E12, 71850.0], [1.6673187485E12, 71850.0], [1.6673212464E12, 81430.0], [1.6673212546E12, 67060.0], [1.6673212544E12, 81430.0], [1.6673187486E12, 76640.0], [1.6673212463E12, 76640.0], [1.6673212545E12, 76640.0], [1.6673212461E12, 81430.0], [1.6673212543E12, 76640.0], [1.6673187487E12, 71850.0], [1.6673212462E12, 71850.0], [1.6673187489E12, 71850.0], [1.667321246E12, 76640.0], [1.6673212542E12, 62270.0], [1.6673187488E12, 81430.0], [1.667318749E12, 67060.0], [1.6673212541E12, 86220.0], [1.6673212459E12, 67060.0], [1.6673212457E12, 86220.0], [1.6673212539E12, 81430.0], [1.6673187491E12, 81430.0], [1.667321254E12, 76640.0], [1.6673212458E12, 67060.0], [1.6673187472E12, 62270.0], [1.6673187554E12, 52690.0], [1.6673212477E12, 86220.0], [1.6673212475E12, 86220.0], [1.6673187473E12, 76640.0], [1.6673187555E12, 91010.0], [1.6673212476E12, 76640.0], [1.6673187475E12, 81430.0], [1.6673212474E12, 76640.0], [1.6673187556E12, 52690.0], [1.6673187474E12, 67060.0], [1.6673187476E12, 67060.0], [1.6673212473E12, 71850.0], [1.6673187477E12, 71850.0], [1.6673212472E12, 86220.0], [1.6673187479E12, 76640.0], [1.667321247E12, 71850.0], [1.6673187478E12, 67060.0], [1.6673212471E12, 57480.0], [1.667318748E12, 67060.0], [1.6673212469E12, 71850.0], [1.6673187481E12, 76640.0], [1.6673212468E12, 62270.0], [1.6673187503E12, 81430.0], [1.6673212487E12, 81430.0], [1.6673187504E12, 76640.0], [1.6673212486E12, 95800.0], [1.6673212484E12, 76640.0], [1.6673187505E12, 67060.0], [1.6673212485E12, 71850.0], [1.6673187507E12, 71850.0], [1.6673212483E12, 67060.0], [1.6673187506E12, 81430.0], [1.6673187508E12, 71850.0], [1.6673187426E12, 38320.0], [1.6673212482E12, 86220.0], [1.667321248E12, 71850.0], [1.6673187509E12, 62270.0], [1.6673187427E12, 62270.0], [1.6673212481E12, 76640.0], [1.6673187429E12, 52690.0], [1.6673187511E12, 67060.0], [1.6673212479E12, 81430.0], [1.6673187428E12, 57480.0], [1.667318751E12, 86220.0], [1.6673187512E12, 81430.0], [1.667318743E12, 57480.0], [1.6673212478E12, 71850.0], [1.6673187493E12, 62270.0], [1.6673212497E12, 71850.0], [1.6673187492E12, 62270.0], [1.6673187494E12, 67060.0], [1.6673212496E12, 81430.0], [1.6673187495E12, 86220.0], [1.6673212495E12, 71850.0], [1.6673212493E12, 71850.0], [1.6673187496E12, 67060.0], [1.6673212494E12, 81430.0], [1.6673187498E12, 76640.0], [1.6673212492E12, 71850.0], [1.6673187497E12, 67060.0], [1.6673187499E12, 76640.0], [1.6673212491E12, 86220.0], [1.6673212489E12, 67060.0], [1.66731875E12, 62270.0], [1.667321249E12, 62270.0], [1.6673187502E12, 62270.0], [1.6673212488E12, 67060.0], [1.6673187501E12, 81430.0], [1.6673212425E12, 67060.0], [1.6673212507E12, 95800.0], [1.6673187441E12, 62270.0], [1.6673187523E12, 76640.0], [1.6673212508E12, 62270.0], [1.6673212426E12, 67060.0], [1.6673187525E12, 67060.0], [1.6673187443E12, 76640.0], [1.6673212424E12, 67060.0], [1.6673212506E12, 47900.0], [1.6673187524E12, 71850.0], [1.6673187442E12, 81430.0], [1.6673187444E12, 86220.0], [1.6673187526E12, 62270.0], [1.6673212423E12, 71850.0], [1.6673212505E12, 76640.0], [1.6673187445E12, 67060.0], [1.6673187527E12, 91010.0], [1.6673212422E12, 67060.0], [1.6673212504E12, 81430.0], [1.6673187447E12, 76640.0], [1.6673212502E12, 81430.0], [1.6673187528E12, 76640.0], [1.6673187446E12, 67060.0], [1.6673212421E12, 28740.0], [1.6673212503E12, 76640.0], [1.6673187448E12, 81430.0], [1.667318753E12, 95800.0], [1.6673212501E12, 81430.0], [1.6673187529E12, 62270.0], [1.6673187449E12, 81430.0], [1.6673187531E12, 62270.0], [1.66732125E12, 76640.0], [1.6673212498E12, 76640.0], [1.6673187532E12, 81430.0], [1.667318745E12, 76640.0], [1.6673212499E12, 76640.0], [1.6673187513E12, 81430.0], [1.6673187431E12, 76640.0], [1.6673212436E12, 71850.0], [1.6673212518E12, 67060.0], [1.6673212516E12, 86220.0], [1.6673212434E12, 71850.0], [1.6673187432E12, 86220.0], [1.6673187514E12, 71850.0], [1.6673212517E12, 62270.0], [1.6673212435E12, 71850.0], [1.6673187516E12, 81430.0], [1.6673187434E12, 67060.0], [1.6673212433E12, 67060.0], [1.6673212515E12, 76640.0], [1.6673187433E12, 62270.0], [1.6673187515E12, 71850.0], [1.6673187517E12, 71850.0], [1.6673187435E12, 81430.0], [1.6673212432E12, 86220.0], [1.6673212514E12, 71850.0], [1.6673212512E12, 81430.0], [1.6673187436E12, 67060.0], [1.6673187518E12, 67060.0], [1.6673212431E12, 67060.0], [1.6673212513E12, 81430.0], [1.6673187438E12, 76640.0], [1.6673212429E12, 57480.0], [1.6673212511E12, 71850.0], [1.6673187437E12, 81430.0], [1.6673187519E12, 71850.0], [1.667321243E12, 81430.0], [1.6673187521E12, 67060.0], [1.6673187439E12, 76640.0], [1.6673212428E12, 67060.0], [1.667321251E12, 76640.0], [1.667318752E12, 91010.0], [1.667318744E12, 76640.0], [1.6673187522E12, 86220.0], [1.6673212509E12, 76640.0], [1.6673212427E12, 71850.0], [1.6673187544E12, 67060.0], [1.6673187462E12, 71850.0], [1.6673212446E12, 86220.0], [1.6673212528E12, 81430.0], [1.6673187545E12, 81430.0], [1.6673187463E12, 81430.0], [1.6673212445E12, 62270.0], [1.6673212527E12, 76640.0], [1.6673212525E12, 81430.0], [1.6673212443E12, 86220.0], [1.6673187464E12, 76640.0], [1.6673187546E12, 62270.0], [1.6673212444E12, 71850.0], [1.6673212526E12, 86220.0], [1.6673187548E12, 67060.0], [1.6673187466E12, 76640.0], [1.6673212524E12, 71850.0], [1.6673212442E12, 81430.0], [1.6673187465E12, 71850.0], [1.6673187547E12, 81430.0], [1.6673187549E12, 76640.0], [1.6673187467E12, 67060.0], [1.6673212441E12, 76640.0], [1.6673212523E12, 71850.0], [1.6673212521E12, 67060.0], [1.6673187468E12, 71850.0], [1.667318755E12, 57480.0], [1.667321244E12, 67060.0], [1.6673212522E12, 76640.0], [1.667318747E12, 71850.0], [1.6673212438E12, 71850.0], [1.667321252E12, 86220.0], [1.6673187469E12, 71850.0], [1.6673187551E12, 76640.0], [1.6673212439E12, 81430.0], [1.6673187553E12, 91010.0], [1.6673187471E12, 86220.0], [1.6673212437E12, 67060.0], [1.6673212519E12, 91010.0], [1.6673187552E12, 76640.0], [1.6673187452E12, 86220.0], [1.6673187534E12, 81430.0], [1.6673212456E12, 76640.0], [1.6673212538E12, 81430.0], [1.6673187533E12, 71850.0], [1.6673187451E12, 76640.0], [1.6673187453E12, 76640.0], [1.6673187535E12, 81430.0], [1.6673212455E12, 71850.0], [1.6673212537E12, 76640.0], [1.6673187536E12, 57480.0], [1.6673187454E12, 62270.0], [1.6673212454E12, 86220.0], [1.6673212536E12, 81430.0], [1.6673212452E12, 71850.0], [1.6673212534E12, 81430.0], [1.6673187537E12, 86220.0], [1.6673187455E12, 95800.0], [1.6673212453E12, 76640.0], [1.6673212535E12, 76640.0], [1.6673187457E12, 76640.0], [1.6673187539E12, 57480.0], [1.6673212533E12, 67060.0], [1.6673212451E12, 76640.0], [1.6673187456E12, 57480.0], [1.6673187538E12, 86220.0], [1.667318754E12, 86220.0], [1.6673187458E12, 71850.0], [1.6673212532E12, 81430.0], [1.667321245E12, 81430.0], [1.6673212448E12, 57480.0], [1.667321253E12, 81430.0], [1.6673187541E12, 62270.0], [1.6673187459E12, 71850.0], [1.6673212449E12, 71850.0], [1.6673212531E12, 81430.0], [1.6673187461E12, 76640.0], [1.6673187543E12, 67060.0], [1.6673212447E12, 91010.0], [1.6673212529E12, 76640.0], [1.667318746E12, 67060.0], [1.6673187542E12, 76640.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673212548E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 23.5, "minX": 1.6673187426E12, "maxY": 77.42857142857144, "series": [{"data": [[1.6673212548E12, 23.5], [1.6673212466E12, 66.11111111111109], [1.6673187482E12, 69.2], [1.6673212467E12, 57.52941176470588], [1.6673187484E12, 63.23529411764706], [1.6673212465E12, 54.81250000000001], [1.6673212547E12, 27.545454545454543], [1.6673187483E12, 64.86666666666667], [1.6673187485E12, 62.599999999999994], [1.6673212464E12, 62.0], [1.6673212546E12, 36.92857142857142], [1.6673212544E12, 50.23529411764706], [1.6673187486E12, 67.62500000000001], [1.6673212463E12, 61.75000000000001], [1.6673212545E12, 41.5625], [1.6673212461E12, 59.1764705882353], [1.6673212543E12, 50.43750000000001], [1.6673187487E12, 61.266666666666666], [1.6673212462E12, 62.866666666666674], [1.6673187489E12, 58.93333333333334], [1.667321246E12, 62.12499999999999], [1.6673212542E12, 55.0], [1.6673187488E12, 58.88235294117647], [1.667318749E12, 72.0], [1.6673212541E12, 44.33333333333333], [1.6673212459E12, 72.71428571428572], [1.6673212457E12, 52.333333333333336], [1.6673212539E12, 55.294117647058826], [1.6673187491E12, 66.11764705882352], [1.667321254E12, 57.12500000000001], [1.6673212458E12, 67.7857142857143], [1.6673187472E12, 73.61538461538461], [1.6673187554E12, 58.45454545454546], [1.6673212477E12, 59.83333333333334], [1.6673212475E12, 56.22222222222222], [1.6673187473E12, 59.8125], [1.6673187555E12, 39.578947368421055], [1.6673212476E12, 56.37499999999999], [1.6673187475E12, 68.29411764705883], [1.6673212474E12, 63.31249999999999], [1.6673187556E12, 29.54545454545455], [1.6673187474E12, 58.142857142857146], [1.6673187476E12, 74.14285714285714], [1.6673212473E12, 58.800000000000004], [1.6673187477E12, 67.53333333333333], [1.6673212472E12, 62.27777777777778], [1.6673187479E12, 62.5], [1.667321247E12, 73.80000000000001], [1.6673187478E12, 65.14285714285715], [1.6673212471E12, 73.16666666666666], [1.667318748E12, 69.28571428571428], [1.6673212469E12, 63.46666666666666], [1.6673187481E12, 62.8125], [1.6673212468E12, 70.99999999999999], [1.6673187503E12, 66.23529411764706], [1.6673212487E12, 58.52941176470588], [1.6673187504E12, 67.25000000000001], [1.6673212486E12, 58.85000000000001], [1.6673212484E12, 63.0], [1.6673187505E12, 64.71428571428571], [1.6673212485E12, 60.133333333333326], [1.6673187507E12, 68.8], [1.6673212483E12, 62.85714285714285], [1.6673187506E12, 58.99999999999999], [1.6673187508E12, 71.46666666666668], [1.6673187426E12, 66.75], [1.6673212482E12, 61.5], [1.667321248E12, 61.666666666666664], [1.6673187509E12, 65.76923076923077], [1.6673187427E12, 35.53846153846154], [1.6673212481E12, 65.12500000000001], [1.6673187429E12, 55.81818181818182], [1.6673187511E12, 59.92857142857143], [1.6673212479E12, 62.1764705882353], [1.6673187428E12, 44.25000000000001], [1.667318751E12, 60.61111111111111], [1.6673187512E12, 65.94117647058823], [1.667318743E12, 63.91666666666666], [1.6673212478E12, 61.666666666666686], [1.6673187493E12, 70.92307692307692], [1.6673212497E12, 60.599999999999994], [1.6673187492E12, 67.3076923076923], [1.6673187494E12, 72.85714285714286], [1.6673212496E12, 58.352941176470594], [1.6673187495E12, 66.38888888888889], [1.6673212495E12, 69.26666666666668], [1.6673212493E12, 61.26666666666667], [1.6673187496E12, 60.142857142857146], [1.6673212494E12, 62.64705882352942], [1.6673187498E12, 62.3125], [1.6673212492E12, 67.33333333333334], [1.6673187497E12, 77.42857142857144], [1.6673187499E12, 67.875], [1.6673212491E12, 70.6111111111111], [1.6673212489E12, 62.00000000000001], [1.66731875E12, 65.46153846153847], [1.667321249E12, 60.84615384615385], [1.6673187502E12, 63.92307692307693], [1.6673212488E12, 70.42857142857142], [1.6673187501E12, 61.76470588235294], [1.6673212425E12, 46.78571428571429], [1.6673212507E12, 68.2], [1.6673187441E12, 62.30769230769231], [1.6673187523E12, 61.81250000000001], [1.6673212508E12, 70.53846153846155], [1.6673212426E12, 57.57142857142857], [1.6673187525E12, 66.28571428571429], [1.6673187443E12, 58.125], [1.6673212424E12, 43.35714285714286], [1.6673212506E12, 58.9], [1.6673187524E12, 64.26666666666667], [1.6673187442E12, 64.6470588235294], [1.6673187444E12, 63.16666666666665], [1.6673187526E12, 70.0], [1.6673212423E12, 32.93333333333334], [1.6673212505E12, 63.75], [1.6673187445E12, 61.21428571428571], [1.6673187527E12, 62.57894736842104], [1.6673212422E12, 29.92857142857143], [1.6673212504E12, 59.23529411764706], [1.6673187447E12, 64.9375], [1.6673212502E12, 60.705882352941174], [1.6673187528E12, 59.4375], [1.6673187446E12, 71.64285714285712], [1.6673212421E12, 52.5], [1.6673212503E12, 61.75], [1.6673187448E12, 61.23529411764706], [1.667318753E12, 64.94999999999999], [1.6673212501E12, 56.64705882352942], [1.6673187529E12, 66.07692307692307], [1.6673187449E12, 57.41176470588235], [1.6673187531E12, 55.46153846153846], [1.66732125E12, 62.56249999999999], [1.6673212498E12, 64.4375], [1.6673187532E12, 66.6470588235294], [1.667318745E12, 59.4375], [1.6673212499E12, 63.87499999999999], [1.6673187513E12, 59.941176470588225], [1.6673187431E12, 56.1875], [1.6673212436E12, 67.46666666666668], [1.6673212518E12, 72.78571428571429], [1.6673212516E12, 61.55555555555556], [1.6673212434E12, 56.8], [1.6673187432E12, 55.77777777777778], [1.6673187514E12, 66.73333333333332], [1.6673212517E12, 61.46153846153847], [1.6673212435E12, 61.733333333333334], [1.6673187516E12, 60.411764705882355], [1.6673187434E12, 71.28571428571429], [1.6673212433E12, 71.78571428571429], [1.6673212515E12, 59.0625], [1.6673187433E12, 65.92307692307692], [1.6673187515E12, 66.93333333333334], [1.6673187517E12, 67.19999999999999], [1.6673187435E12, 64.3529411764706], [1.6673212432E12, 55.66666666666667], [1.6673212514E12, 63.99999999999999], [1.6673212512E12, 60.05882352941177], [1.6673187436E12, 64.71428571428572], [1.6673187518E12, 64.71428571428572], [1.6673212431E12, 75.35714285714286], [1.6673212513E12, 62.47058823529412], [1.6673187438E12, 62.0], [1.6673212429E12, 67.58333333333333], [1.6673212511E12, 57.46666666666666], [1.6673187437E12, 63.999999999999986], [1.6673187519E12, 61.73333333333334], [1.667321243E12, 68.5294117647059], [1.6673187521E12, 61.07142857142857], [1.6673187439E12, 58.375], [1.6673212428E12, 67.28571428571429], [1.667321251E12, 70.375], [1.667318752E12, 59.68421052631578], [1.667318744E12, 66.8125], [1.6673187522E12, 62.22222222222225], [1.6673212509E12, 65.1875], [1.6673212427E12, 57.06666666666666], [1.6673187544E12, 68.0], [1.6673187462E12, 70.26666666666668], [1.6673212446E12, 64.22222222222223], [1.6673212528E12, 64.76470588235294], [1.6673187545E12, 64.6470588235294], [1.6673187463E12, 58.29411764705883], [1.6673212445E12, 59.61538461538461], [1.6673212527E12, 52.00000000000001], [1.6673212525E12, 66.76470588235293], [1.6673212443E12, 59.166666666666664], [1.6673187464E12, 61.062500000000014], [1.6673187546E12, 63.307692307692314], [1.6673212444E12, 62.8], [1.6673212526E12, 59.611111111111114], [1.6673187548E12, 65.42857142857142], [1.6673187466E12, 70.375], [1.6673212524E12, 54.06666666666667], [1.6673212442E12, 61.64705882352941], [1.6673187465E12, 62.4], [1.6673187547E12, 71.64705882352939], [1.6673187549E12, 65.3125], [1.6673187467E12, 70.85714285714286], [1.6673212441E12, 63.499999999999986], [1.6673212523E12, 70.93333333333335], [1.6673212521E12, 70.28571428571428], [1.6673187468E12, 59.666666666666664], [1.667318755E12, 69.08333333333333], [1.667321244E12, 65.14285714285714], [1.6673212522E12, 58.5625], [1.667318747E12, 68.8], [1.6673212438E12, 70.60000000000001], [1.667321252E12, 57.611111111111114], [1.6673187469E12, 65.4], [1.6673187551E12, 71.9375], [1.6673212439E12, 60.23529411764706], [1.6673187553E12, 43.263157894736835], [1.6673187471E12, 59.6111111111111], [1.6673212437E12, 76.07142857142858], [1.6673212519E12, 60.10526315789475], [1.6673187552E12, 61.8125], [1.6673187452E12, 60.444444444444436], [1.6673187534E12, 58.29411764705883], [1.6673212456E12, 71.37500000000001], [1.6673212538E12, 53.99999999999999], [1.6673187533E12, 69.06666666666665], [1.6673187451E12, 60.3125], [1.6673187453E12, 64.6875], [1.6673187535E12, 59.41176470588235], [1.6673212455E12, 61.13333333333333], [1.6673212537E12, 51.5625], [1.6673187536E12, 68.83333333333334], [1.6673187454E12, 62.53846153846154], [1.6673212454E12, 58.27777777777778], [1.6673212536E12, 55.05882352941177], [1.6673212452E12, 62.266666666666666], [1.6673212534E12, 59.588235294117645], [1.6673187537E12, 66.7777777777778], [1.6673187455E12, 58.9], [1.6673212453E12, 63.18750000000001], [1.6673212535E12, 70.06250000000001], [1.6673187457E12, 60.43749999999999], [1.6673187539E12, 60.74999999999999], [1.6673212533E12, 67.64285714285714], [1.6673212451E12, 60.8125], [1.6673187456E12, 73.58333333333333], [1.6673187538E12, 55.27777777777778], [1.667318754E12, 72.8888888888889], [1.6673187458E12, 69.8], [1.6673212532E12, 60.411764705882355], [1.667321245E12, 65.5294117647059], [1.6673212448E12, 74.33333333333334], [1.667321253E12, 58.94117647058823], [1.6673187541E12, 61.99999999999999], [1.6673187459E12, 70.66666666666669], [1.6673212449E12, 65.66666666666664], [1.6673212531E12, 60.705882352941174], [1.6673187461E12, 67.93749999999999], [1.6673187543E12, 62.57142857142857], [1.6673212447E12, 52.57894736842104], [1.6673212529E12, 57.4375], [1.667318746E12, 55.42857142857143], [1.6673187542E12, 72.31249999999999]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673212548E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 23.5, "minX": 1.6673187426E12, "maxY": 77.35714285714286, "series": [{"data": [[1.6673212548E12, 23.5], [1.6673212466E12, 66.11111111111109], [1.6673187482E12, 69.06666666666665], [1.6673212467E12, 57.411764705882355], [1.6673187484E12, 63.11764705882353], [1.6673212465E12, 54.6875], [1.6673212547E12, 27.454545454545453], [1.6673187483E12, 64.80000000000001], [1.6673187485E12, 62.599999999999994], [1.6673212464E12, 62.0], [1.6673212546E12, 36.85714285714286], [1.6673212544E12, 50.17647058823529], [1.6673187486E12, 67.62500000000001], [1.6673212463E12, 61.5], [1.6673212545E12, 41.5625], [1.6673212461E12, 59.11764705882353], [1.6673212543E12, 50.0], [1.6673187487E12, 61.06666666666667], [1.6673212462E12, 62.866666666666674], [1.6673187489E12, 58.93333333333334], [1.667321246E12, 62.12499999999999], [1.6673212542E12, 54.92307692307692], [1.6673187488E12, 58.705882352941174], [1.667318749E12, 71.85714285714286], [1.6673212541E12, 44.27777777777777], [1.6673212459E12, 72.71428571428572], [1.6673212457E12, 52.27777777777778], [1.6673212539E12, 55.11764705882353], [1.6673187491E12, 66.0], [1.667321254E12, 57.06249999999999], [1.6673212458E12, 67.57142857142857], [1.6673187472E12, 73.46153846153844], [1.6673187554E12, 58.45454545454546], [1.6673212477E12, 59.611111111111114], [1.6673212475E12, 56.166666666666664], [1.6673187473E12, 59.75], [1.6673187555E12, 39.578947368421055], [1.6673212476E12, 56.37499999999999], [1.6673187475E12, 68.23529411764707], [1.6673212474E12, 63.25], [1.6673187556E12, 29.54545454545455], [1.6673187474E12, 58.07142857142857], [1.6673187476E12, 74.07142857142857], [1.6673212473E12, 58.800000000000004], [1.6673187477E12, 67.53333333333333], [1.6673212472E12, 62.111111111111114], [1.6673187479E12, 62.1875], [1.667321247E12, 73.66666666666667], [1.6673187478E12, 65.07142857142858], [1.6673212471E12, 73.08333333333331], [1.667318748E12, 69.28571428571428], [1.6673212469E12, 63.46666666666666], [1.6673187481E12, 62.8125], [1.6673212468E12, 70.92307692307693], [1.6673187503E12, 66.05882352941177], [1.6673212487E12, 58.411764705882355], [1.6673187504E12, 67.25000000000001], [1.6673212486E12, 58.54999999999999], [1.6673212484E12, 62.875], [1.6673187505E12, 64.5], [1.6673212485E12, 59.93333333333333], [1.6673187507E12, 68.59999999999998], [1.6673212483E12, 62.7857142857143], [1.6673187506E12, 58.882352941176464], [1.6673187508E12, 71.26666666666668], [1.6673187426E12, 64.25], [1.6673212482E12, 60.94444444444444], [1.667321248E12, 61.266666666666666], [1.6673187509E12, 65.76923076923077], [1.6673187427E12, 35.46153846153847], [1.6673212481E12, 65.12500000000001], [1.6673187429E12, 55.63636363636363], [1.6673187511E12, 59.92857142857143], [1.6673212479E12, 62.1764705882353], [1.6673187428E12, 44.16666666666667], [1.667318751E12, 60.1111111111111], [1.6673187512E12, 65.88235294117646], [1.667318743E12, 63.50000000000001], [1.6673212478E12, 61.53333333333334], [1.6673187493E12, 70.92307692307692], [1.6673212497E12, 60.599999999999994], [1.6673187492E12, 67.3076923076923], [1.6673187494E12, 72.71428571428571], [1.6673212496E12, 58.176470588235304], [1.6673187495E12, 66.22222222222221], [1.6673212495E12, 69.26666666666668], [1.6673212493E12, 61.26666666666667], [1.6673187496E12, 60.07142857142857], [1.6673212494E12, 62.529411764705884], [1.6673187498E12, 62.3125], [1.6673212492E12, 67.26666666666668], [1.6673187497E12, 77.35714285714286], [1.6673187499E12, 67.75000000000001], [1.6673212491E12, 70.38888888888889], [1.6673212489E12, 61.92857142857143], [1.66731875E12, 65.38461538461539], [1.667321249E12, 60.84615384615385], [1.6673187502E12, 63.92307692307693], [1.6673212488E12, 70.07142857142857], [1.6673187501E12, 61.76470588235294], [1.6673212425E12, 46.642857142857146], [1.6673212507E12, 67.8], [1.6673187441E12, 62.23076923076924], [1.6673187523E12, 61.75], [1.6673212508E12, 70.53846153846155], [1.6673212426E12, 57.5], [1.6673187525E12, 66.21428571428571], [1.6673187443E12, 58.0], [1.6673212424E12, 43.285714285714285], [1.6673212506E12, 58.6], [1.6673187524E12, 64.26666666666667], [1.6673187442E12, 64.6470588235294], [1.6673187444E12, 63.11111111111111], [1.6673187526E12, 70.0], [1.6673212423E12, 32.86666666666666], [1.6673212505E12, 63.62500000000001], [1.6673187445E12, 61.00000000000001], [1.6673187527E12, 62.47368421052631], [1.6673212422E12, 29.785714285714285], [1.6673212504E12, 59.11764705882353], [1.6673187447E12, 64.8125], [1.6673212502E12, 60.64705882352941], [1.6673187528E12, 59.31249999999999], [1.6673187446E12, 71.57142857142857], [1.6673212421E12, 48.0], [1.6673212503E12, 61.68749999999999], [1.6673187448E12, 60.94117647058823], [1.667318753E12, 64.89999999999999], [1.6673212501E12, 56.235294117647065], [1.6673187529E12, 66.07692307692307], [1.6673187449E12, 57.1764705882353], [1.6673187531E12, 55.46153846153846], [1.66732125E12, 62.5], [1.6673212498E12, 64.375], [1.6673187532E12, 66.47058823529412], [1.667318745E12, 59.3125], [1.6673212499E12, 63.62500000000001], [1.6673187513E12, 59.823529411764696], [1.6673187431E12, 56.125], [1.6673212436E12, 67.4], [1.6673212518E12, 72.71428571428571], [1.6673212516E12, 61.44444444444445], [1.6673212434E12, 56.73333333333333], [1.6673187432E12, 55.611111111111114], [1.6673187514E12, 66.73333333333332], [1.6673212517E12, 61.384615384615394], [1.6673212435E12, 61.53333333333334], [1.6673187516E12, 60.35294117647059], [1.6673187434E12, 71.28571428571429], [1.6673212433E12, 71.64285714285714], [1.6673212515E12, 59.00000000000001], [1.6673187433E12, 65.53846153846153], [1.6673187515E12, 66.93333333333334], [1.6673187517E12, 67.13333333333333], [1.6673187435E12, 64.29411764705881], [1.6673212432E12, 55.66666666666667], [1.6673212514E12, 63.93333333333333], [1.6673212512E12, 60.05882352941177], [1.6673187436E12, 64.57142857142857], [1.6673187518E12, 64.49999999999999], [1.6673212431E12, 75.28571428571429], [1.6673212513E12, 62.35294117647059], [1.6673187438E12, 61.81249999999999], [1.6673212429E12, 67.33333333333334], [1.6673212511E12, 57.13333333333333], [1.6673187437E12, 63.705882352941174], [1.6673187519E12, 61.66666666666666], [1.667321243E12, 68.05882352941177], [1.6673187521E12, 61.0], [1.6673187439E12, 58.24999999999999], [1.6673212428E12, 67.2142857142857], [1.667321251E12, 69.8125], [1.667318752E12, 59.526315789473685], [1.667318744E12, 66.5], [1.6673187522E12, 61.555555555555564], [1.6673212509E12, 65.125], [1.6673212427E12, 56.99999999999999], [1.6673187544E12, 67.92857142857142], [1.6673187462E12, 70.26666666666668], [1.6673212446E12, 64.16666666666667], [1.6673212528E12, 64.52941176470588], [1.6673187545E12, 64.6470588235294], [1.6673187463E12, 58.29411764705883], [1.6673212445E12, 59.53846153846155], [1.6673212527E12, 51.9375], [1.6673212525E12, 66.6470588235294], [1.6673212443E12, 59.111111111111114], [1.6673187464E12, 61.062500000000014], [1.6673187546E12, 63.307692307692314], [1.6673212444E12, 62.733333333333334], [1.6673212526E12, 59.611111111111114], [1.6673187548E12, 65.07142857142857], [1.6673187466E12, 70.3125], [1.6673212524E12, 54.06666666666667], [1.6673212442E12, 61.529411764705884], [1.6673187465E12, 62.33333333333334], [1.6673187547E12, 71.52941176470587], [1.6673187549E12, 65.06250000000001], [1.6673187467E12, 70.71428571428572], [1.6673212441E12, 63.12499999999999], [1.6673212523E12, 70.80000000000001], [1.6673212521E12, 70.28571428571428], [1.6673187468E12, 59.53333333333333], [1.667318755E12, 68.83333333333333], [1.667321244E12, 64.92857142857142], [1.6673212522E12, 58.5625], [1.667318747E12, 68.59999999999998], [1.6673212438E12, 70.60000000000001], [1.667321252E12, 57.611111111111114], [1.6673187469E12, 65.4], [1.6673187551E12, 71.875], [1.6673212439E12, 60.23529411764706], [1.6673187553E12, 43.10526315789473], [1.6673187471E12, 59.38888888888888], [1.6673212437E12, 75.92857142857143], [1.6673212519E12, 59.8421052631579], [1.6673187552E12, 61.74999999999999], [1.6673187452E12, 60.38888888888889], [1.6673187534E12, 58.29411764705883], [1.6673212456E12, 71.3125], [1.6673212538E12, 53.88235294117647], [1.6673187533E12, 68.93333333333332], [1.6673187451E12, 60.3125], [1.6673187453E12, 64.1875], [1.6673187535E12, 59.352941176470594], [1.6673212455E12, 60.66666666666668], [1.6673212537E12, 51.5625], [1.6673187536E12, 68.83333333333334], [1.6673187454E12, 62.15384615384615], [1.6673212454E12, 57.94444444444444], [1.6673212536E12, 55.05882352941177], [1.6673212452E12, 61.99999999999999], [1.6673212534E12, 59.470588235294116], [1.6673187537E12, 66.72222222222223], [1.6673187455E12, 58.800000000000004], [1.6673212453E12, 63.18750000000001], [1.6673212535E12, 70.0], [1.6673187457E12, 60.1875], [1.6673187539E12, 60.666666666666664], [1.6673212533E12, 67.14285714285712], [1.6673212451E12, 60.5], [1.6673187456E12, 73.33333333333333], [1.6673187538E12, 55.22222222222222], [1.667318754E12, 72.8888888888889], [1.6673187458E12, 69.8], [1.6673212532E12, 60.29411764705882], [1.667321245E12, 65.3529411764706], [1.6673212448E12, 74.24999999999999], [1.667321253E12, 58.41176470588237], [1.6673187541E12, 61.99999999999999], [1.6673187459E12, 70.33333333333334], [1.6673212449E12, 65.6], [1.6673212531E12, 60.705882352941174], [1.6673187461E12, 67.75], [1.6673187543E12, 62.42857142857144], [1.6673212447E12, 52.31578947368421], [1.6673212529E12, 57.1875], [1.667318746E12, 55.285714285714285], [1.6673187542E12, 72.18750000000001]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673212548E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6673187426E12, "maxY": 16.125, "series": [{"data": [[1.6673212548E12, 0.0], [1.6673212466E12, 0.0], [1.6673187482E12, 0.0], [1.6673212467E12, 0.0], [1.6673187484E12, 0.0], [1.6673212465E12, 0.0], [1.6673212547E12, 0.0], [1.6673187483E12, 0.0], [1.6673187485E12, 0.0], [1.6673212464E12, 0.0], [1.6673212546E12, 0.0], [1.6673212544E12, 0.0], [1.6673187486E12, 0.0], [1.6673212463E12, 0.0], [1.6673212545E12, 0.0], [1.6673212461E12, 0.0], [1.6673212543E12, 0.0], [1.6673187487E12, 0.0], [1.6673212462E12, 0.0], [1.6673187489E12, 0.20000000000000004], [1.667321246E12, 0.0], [1.6673212542E12, 0.0], [1.6673187488E12, 0.0], [1.667318749E12, 0.0], [1.6673212541E12, 0.0], [1.6673212459E12, 0.0], [1.6673212457E12, 0.0], [1.6673212539E12, 0.0], [1.6673187491E12, 0.17647058823529413], [1.667321254E12, 0.0], [1.6673212458E12, 0.0], [1.6673187472E12, 0.0], [1.6673187554E12, 0.0], [1.6673212477E12, 0.0], [1.6673212475E12, 0.0], [1.6673187473E12, 0.0], [1.6673187555E12, 0.0], [1.6673212476E12, 0.0], [1.6673187475E12, 0.0], [1.6673212474E12, 0.0], [1.6673187556E12, 0.0], [1.6673187474E12, 0.0], [1.6673187476E12, 0.0], [1.6673212473E12, 0.0], [1.6673187477E12, 0.0], [1.6673212472E12, 0.0], [1.6673187479E12, 0.0], [1.667321247E12, 0.0], [1.6673187478E12, 0.0], [1.6673212471E12, 0.0], [1.667318748E12, 0.0], [1.6673212469E12, 0.0], [1.6673187481E12, 0.0], [1.6673212468E12, 0.0], [1.6673187503E12, 0.0], [1.6673212487E12, 0.11764705882352944], [1.6673187504E12, 0.0], [1.6673212486E12, 0.05000000000000001], [1.6673212484E12, 0.0], [1.6673187505E12, 0.0], [1.6673212485E12, 0.13333333333333336], [1.6673187507E12, 0.0], [1.6673212483E12, 0.14285714285714288], [1.6673187506E12, 0.0], [1.6673187508E12, 0.0], [1.6673187426E12, 16.125], [1.6673212482E12, 0.0], [1.667321248E12, 0.0], [1.6673187509E12, 0.0], [1.6673187427E12, 0.07692307692307691], [1.6673212481E12, 0.12500000000000003], [1.6673187429E12, 0.0909090909090909], [1.6673187511E12, 0.0], [1.6673212479E12, 0.0], [1.6673187428E12, 0.16666666666666669], [1.667318751E12, 0.0], [1.6673187512E12, 0.0], [1.667318743E12, 0.08333333333333334], [1.6673212478E12, 0.13333333333333336], [1.6673187493E12, 0.0], [1.6673212497E12, 0.0], [1.6673187492E12, 0.0], [1.6673187494E12, 0.2857142857142857], [1.6673212496E12, 0.0], [1.6673187495E12, 0.0], [1.6673212495E12, 0.0], [1.6673212493E12, 0.06666666666666667], [1.6673187496E12, 0.0], [1.6673212494E12, 0.0], [1.6673187498E12, 0.0], [1.6673212492E12, 0.13333333333333336], [1.6673187497E12, 0.07142857142857144], [1.6673187499E12, 0.0], [1.6673212491E12, 0.0], [1.6673212489E12, 0.0], [1.66731875E12, 0.0], [1.667321249E12, 0.07692307692307693], [1.6673187502E12, 0.0], [1.6673212488E12, 0.0], [1.6673187501E12, 0.0], [1.6673212425E12, 0.07142857142857144], [1.6673212507E12, 0.0], [1.6673187441E12, 0.0], [1.6673187523E12, 0.0], [1.6673212508E12, 0.0], [1.6673212426E12, 0.07142857142857144], [1.6673187525E12, 0.0], [1.6673187443E12, 0.0], [1.6673212424E12, 0.0], [1.6673212506E12, 0.0], [1.6673187524E12, 0.0], [1.6673187442E12, 0.0], [1.6673187444E12, 0.0], [1.6673187526E12, 0.0], [1.6673212423E12, 0.2], [1.6673212505E12, 0.0], [1.6673187445E12, 0.0], [1.6673187527E12, 0.0], [1.6673212422E12, 0.14285714285714288], [1.6673212504E12, 0.0], [1.6673187447E12, 0.0], [1.6673212502E12, 0.0], [1.6673187528E12, 0.0], [1.6673187446E12, 0.0], [1.6673212421E12, 13.0], [1.6673212503E12, 0.0], [1.6673187448E12, 0.0], [1.667318753E12, 0.0], [1.6673212501E12, 0.0], [1.6673187529E12, 0.0], [1.6673187449E12, 0.0], [1.6673187531E12, 0.0], [1.66732125E12, 0.0], [1.6673212498E12, 0.0], [1.6673187532E12, 0.0], [1.667318745E12, 0.0], [1.6673212499E12, 0.0], [1.6673187513E12, 0.0], [1.6673187431E12, 0.06250000000000001], [1.6673212436E12, 0.0], [1.6673212518E12, 0.0], [1.6673212516E12, 0.0], [1.6673212434E12, 0.0], [1.6673187432E12, 0.05555555555555555], [1.6673187514E12, 0.0], [1.6673212517E12, 0.0], [1.6673212435E12, 0.0], [1.6673187516E12, 0.0], [1.6673187434E12, 0.0], [1.6673212433E12, 0.0], [1.6673212515E12, 0.0], [1.6673187433E12, 0.0], [1.6673187515E12, 0.0], [1.6673187517E12, 0.0], [1.6673187435E12, 0.0], [1.6673212432E12, 0.0], [1.6673212514E12, 0.0], [1.6673212512E12, 0.0], [1.6673187436E12, 0.0], [1.6673187518E12, 0.0], [1.6673212431E12, 0.0], [1.6673212513E12, 0.0], [1.6673187438E12, 0.0], [1.6673212429E12, 0.0], [1.6673212511E12, 0.0], [1.6673187437E12, 0.0], [1.6673187519E12, 0.0], [1.667321243E12, 0.0], [1.6673187521E12, 0.0], [1.6673187439E12, 0.0], [1.6673212428E12, 0.14285714285714288], [1.667321251E12, 0.0], [1.667318752E12, 0.0], [1.667318744E12, 0.0], [1.6673187522E12, 0.0], [1.6673212509E12, 0.0], [1.6673212427E12, 0.13333333333333336], [1.6673187544E12, 0.0], [1.6673187462E12, 0.0], [1.6673212446E12, 0.0], [1.6673212528E12, 0.0], [1.6673187545E12, 0.0], [1.6673187463E12, 0.0], [1.6673212445E12, 0.0], [1.6673212527E12, 0.0], [1.6673212525E12, 0.0], [1.6673212443E12, 0.0], [1.6673187464E12, 0.0], [1.6673187546E12, 0.0], [1.6673212444E12, 0.0], [1.6673212526E12, 0.0], [1.6673187548E12, 0.0], [1.6673187466E12, 0.0], [1.6673212524E12, 0.0], [1.6673212442E12, 0.0], [1.6673187465E12, 0.0], [1.6673187547E12, 0.0], [1.6673187549E12, 0.0], [1.6673187467E12, 0.0], [1.6673212441E12, 0.0], [1.6673212523E12, 0.0], [1.6673212521E12, 0.0], [1.6673187468E12, 0.0], [1.667318755E12, 0.0], [1.667321244E12, 0.0], [1.6673212522E12, 0.0], [1.667318747E12, 0.0], [1.6673212438E12, 0.0], [1.667321252E12, 0.0], [1.6673187469E12, 0.0], [1.6673187551E12, 0.0], [1.6673212439E12, 0.0], [1.6673187553E12, 0.0], [1.6673187471E12, 0.0], [1.6673212437E12, 0.0], [1.6673212519E12, 0.0], [1.6673187552E12, 0.0], [1.6673187452E12, 0.0], [1.6673187534E12, 0.0], [1.6673212456E12, 0.0], [1.6673212538E12, 0.0], [1.6673187533E12, 0.0], [1.6673187451E12, 0.0], [1.6673187453E12, 0.0], [1.6673187535E12, 0.0], [1.6673212455E12, 0.0], [1.6673212537E12, 0.0], [1.6673187536E12, 0.0], [1.6673187454E12, 0.0], [1.6673212454E12, 0.0], [1.6673212536E12, 0.0], [1.6673212452E12, 0.0], [1.6673212534E12, 0.0], [1.6673187537E12, 0.0], [1.6673187455E12, 0.0], [1.6673212453E12, 0.0], [1.6673212535E12, 0.0], [1.6673187457E12, 0.0], [1.6673187539E12, 0.0], [1.6673212533E12, 0.0], [1.6673212451E12, 0.0], [1.6673187456E12, 0.0], [1.6673187538E12, 0.0], [1.667318754E12, 0.0], [1.6673187458E12, 0.0], [1.6673212532E12, 0.0], [1.667321245E12, 0.0], [1.6673212448E12, 0.0], [1.667321253E12, 0.0], [1.6673187541E12, 0.0], [1.6673187459E12, 0.0], [1.6673212449E12, 0.0], [1.6673212531E12, 0.0], [1.6673187461E12, 0.0], [1.6673187543E12, 0.0], [1.6673212447E12, 0.0], [1.6673212529E12, 0.0], [1.667318746E12, 0.0], [1.6673187542E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673212548E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 17.0, "minX": 1.6673187426E12, "maxY": 142.0, "series": [{"data": [[1.6673212548E12, 30.0], [1.6673212466E12, 111.0], [1.6673187482E12, 96.0], [1.6673212467E12, 79.0], [1.6673187484E12, 93.0], [1.6673212465E12, 88.0], [1.6673212547E12, 37.0], [1.6673187483E12, 101.0], [1.6673187485E12, 96.0], [1.6673212464E12, 81.0], [1.6673212546E12, 67.0], [1.6673212544E12, 81.0], [1.6673187486E12, 100.0], [1.6673212463E12, 106.0], [1.6673212545E12, 54.0], [1.6673212461E12, 101.0], [1.6673212543E12, 65.0], [1.6673187487E12, 100.0], [1.6673212462E12, 106.0], [1.6673187489E12, 91.0], [1.667321246E12, 96.0], [1.6673212542E12, 70.0], [1.6673187488E12, 86.0], [1.667318749E12, 95.0], [1.6673212541E12, 58.0], [1.6673212459E12, 100.0], [1.6673212457E12, 80.0], [1.6673212539E12, 88.0], [1.6673187491E12, 103.0], [1.667321254E12, 82.0], [1.6673212458E12, 93.0], [1.6673187472E12, 113.0], [1.6673187554E12, 78.0], [1.6673212477E12, 78.0], [1.6673212475E12, 75.0], [1.6673187473E12, 100.0], [1.6673187555E12, 62.0], [1.6673212476E12, 87.0], [1.6673187475E12, 104.0], [1.6673212474E12, 112.0], [1.6673187556E12, 38.0], [1.6673187474E12, 97.0], [1.6673187476E12, 115.0], [1.6673212473E12, 93.0], [1.6673187477E12, 92.0], [1.6673212472E12, 106.0], [1.6673187479E12, 85.0], [1.667321247E12, 117.0], [1.6673187478E12, 110.0], [1.6673212471E12, 112.0], [1.667318748E12, 142.0], [1.6673212469E12, 130.0], [1.6673187481E12, 91.0], [1.6673212468E12, 96.0], [1.6673187503E12, 106.0], [1.6673212487E12, 79.0], [1.6673187504E12, 90.0], [1.6673212486E12, 90.0], [1.6673212484E12, 104.0], [1.6673187505E12, 93.0], [1.6673212485E12, 88.0], [1.6673187507E12, 129.0], [1.6673212483E12, 79.0], [1.6673187506E12, 90.0], [1.6673187508E12, 114.0], [1.6673187426E12, 122.0], [1.6673212482E12, 97.0], [1.667321248E12, 91.0], [1.6673187509E12, 94.0], [1.6673187427E12, 55.0], [1.6673212481E12, 103.0], [1.6673187429E12, 89.0], [1.6673187511E12, 79.0], [1.6673212479E12, 97.0], [1.6673187428E12, 64.0], [1.667318751E12, 89.0], [1.6673187512E12, 93.0], [1.667318743E12, 96.0], [1.6673212478E12, 98.0], [1.6673187493E12, 104.0], [1.6673212497E12, 98.0], [1.6673187492E12, 108.0], [1.6673187494E12, 110.0], [1.6673212496E12, 88.0], [1.6673187495E12, 121.0], [1.6673212495E12, 126.0], [1.6673212493E12, 79.0], [1.6673187496E12, 92.0], [1.6673212494E12, 86.0], [1.6673187498E12, 104.0], [1.6673212492E12, 113.0], [1.6673187497E12, 124.0], [1.6673187499E12, 102.0], [1.6673212491E12, 112.0], [1.6673212489E12, 88.0], [1.66731875E12, 88.0], [1.667321249E12, 76.0], [1.6673187502E12, 113.0], [1.6673212488E12, 109.0], [1.6673187501E12, 99.0], [1.6673212425E12, 61.0], [1.6673212507E12, 127.0], [1.6673187441E12, 89.0], [1.6673187523E12, 79.0], [1.6673212508E12, 103.0], [1.6673212426E12, 76.0], [1.6673187525E12, 116.0], [1.6673187443E12, 83.0], [1.6673212424E12, 60.0], [1.6673212506E12, 79.0], [1.6673187524E12, 94.0], [1.6673187442E12, 93.0], [1.6673187444E12, 105.0], [1.6673187526E12, 99.0], [1.6673212423E12, 41.0], [1.6673212505E12, 101.0], [1.6673187445E12, 84.0], [1.6673187527E12, 83.0], [1.6673212422E12, 44.0], [1.6673212504E12, 94.0], [1.6673187447E12, 116.0], [1.6673212502E12, 113.0], [1.6673187528E12, 85.0], [1.6673187446E12, 92.0], [1.6673212421E12, 91.0], [1.6673212503E12, 105.0], [1.6673187448E12, 93.0], [1.667318753E12, 98.0], [1.6673212501E12, 101.0], [1.6673187529E12, 86.0], [1.6673187449E12, 92.0], [1.6673187531E12, 76.0], [1.66732125E12, 84.0], [1.6673212498E12, 90.0], [1.6673187532E12, 110.0], [1.667318745E12, 88.0], [1.6673212499E12, 94.0], [1.6673187513E12, 81.0], [1.6673187431E12, 75.0], [1.6673212436E12, 100.0], [1.6673212518E12, 137.0], [1.6673212516E12, 90.0], [1.6673212434E12, 79.0], [1.6673187432E12, 95.0], [1.6673187514E12, 89.0], [1.6673212517E12, 87.0], [1.6673212435E12, 89.0], [1.6673187516E12, 96.0], [1.6673187434E12, 112.0], [1.6673212433E12, 99.0], [1.6673212515E12, 95.0], [1.6673187433E12, 109.0], [1.6673187515E12, 106.0], [1.6673187517E12, 93.0], [1.6673187435E12, 98.0], [1.6673212432E12, 82.0], [1.6673212514E12, 92.0], [1.6673212512E12, 82.0], [1.6673187436E12, 102.0], [1.6673187518E12, 94.0], [1.6673212431E12, 117.0], [1.6673212513E12, 84.0], [1.6673187438E12, 92.0], [1.6673212429E12, 115.0], [1.6673212511E12, 80.0], [1.6673187437E12, 108.0], [1.6673187519E12, 84.0], [1.667321243E12, 95.0], [1.6673187521E12, 98.0], [1.6673187439E12, 78.0], [1.6673212428E12, 99.0], [1.667321251E12, 105.0], [1.667318752E12, 85.0], [1.667318744E12, 111.0], [1.6673187522E12, 119.0], [1.6673212509E12, 134.0], [1.6673212427E12, 84.0], [1.6673187544E12, 104.0], [1.6673187462E12, 105.0], [1.6673212446E12, 120.0], [1.6673212528E12, 98.0], [1.6673187545E12, 94.0], [1.6673187463E12, 84.0], [1.6673212445E12, 85.0], [1.6673212527E12, 77.0], [1.6673212525E12, 103.0], [1.6673212443E12, 83.0], [1.6673187464E12, 97.0], [1.6673187546E12, 97.0], [1.6673212444E12, 74.0], [1.6673212526E12, 111.0], [1.6673187548E12, 93.0], [1.6673187466E12, 123.0], [1.6673212524E12, 82.0], [1.6673212442E12, 86.0], [1.6673187465E12, 101.0], [1.6673187547E12, 118.0], [1.6673187549E12, 97.0], [1.6673187467E12, 110.0], [1.6673212441E12, 116.0], [1.6673212523E12, 107.0], [1.6673212521E12, 133.0], [1.6673187468E12, 86.0], [1.667318755E12, 101.0], [1.667321244E12, 92.0], [1.6673212522E12, 80.0], [1.667318747E12, 105.0], [1.6673212438E12, 122.0], [1.667321252E12, 86.0], [1.6673187469E12, 92.0], [1.6673187551E12, 117.0], [1.6673212439E12, 85.0], [1.6673187553E12, 60.0], [1.6673187471E12, 84.0], [1.6673212437E12, 113.0], [1.6673212519E12, 96.0], [1.6673187552E12, 93.0], [1.6673187452E12, 105.0], [1.6673187534E12, 102.0], [1.6673212456E12, 102.0], [1.6673212538E12, 81.0], [1.6673187533E12, 109.0], [1.6673187451E12, 118.0], [1.6673187453E12, 97.0], [1.6673187535E12, 81.0], [1.6673212455E12, 120.0], [1.6673212537E12, 71.0], [1.6673187536E12, 87.0], [1.6673187454E12, 84.0], [1.6673212454E12, 85.0], [1.6673212536E12, 98.0], [1.6673212452E12, 98.0], [1.6673212534E12, 100.0], [1.6673187537E12, 102.0], [1.6673187455E12, 97.0], [1.6673212453E12, 130.0], [1.6673212535E12, 110.0], [1.6673187457E12, 78.0], [1.6673187539E12, 91.0], [1.6673212533E12, 98.0], [1.6673212451E12, 86.0], [1.6673187456E12, 107.0], [1.6673187538E12, 94.0], [1.667318754E12, 124.0], [1.6673187458E12, 117.0], [1.6673212532E12, 85.0], [1.667321245E12, 94.0], [1.6673212448E12, 104.0], [1.667321253E12, 113.0], [1.6673187541E12, 103.0], [1.6673187459E12, 97.0], [1.6673212449E12, 97.0], [1.6673212531E12, 113.0], [1.6673187461E12, 100.0], [1.6673187543E12, 94.0], [1.6673212447E12, 79.0], [1.6673212529E12, 84.0], [1.667318746E12, 80.0], [1.6673187542E12, 103.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6673212548E12, 29.9], [1.6673212466E12, 110.1], [1.6673187482E12, 93.6], [1.6673212467E12, 75.0], [1.6673187484E12, 91.4], [1.6673212465E12, 88.0], [1.6673212547E12, 36.0], [1.6673187483E12, 90.2], [1.6673187485E12, 93.6], [1.6673212464E12, 78.6], [1.6673212546E12, 58.0], [1.6673212544E12, 76.19999999999999], [1.6673187486E12, 93.7], [1.6673212463E12, 101.10000000000001], [1.6673212545E12, 54.0], [1.6673212461E12, 90.6], [1.6673212543E12, 64.3], [1.6673187487E12, 85.60000000000001], [1.6673212462E12, 91.60000000000001], [1.6673187489E12, 88.6], [1.667321246E12, 90.4], [1.6673212542E12, 69.2], [1.6673187488E12, 81.19999999999999], [1.667318749E12, 94.0], [1.6673212541E12, 57.1], [1.6673212459E12, 95.0], [1.6673212457E12, 79.1], [1.6673212539E12, 84.0], [1.6673187491E12, 100.6], [1.667321254E12, 75.7], [1.6673212458E12, 90.0], [1.6673187472E12, 109.39999999999999], [1.6673187554E12, 77.4], [1.6673212477E12, 73.5], [1.6673212475E12, 71.4], [1.6673187473E12, 86.70000000000002], [1.6673187555E12, 49.0], [1.6673212476E12, 86.3], [1.6673187475E12, 88.79999999999998], [1.6673212474E12, 96.60000000000002], [1.6673187556E12, 37.400000000000006], [1.6673187474E12, 87.0], [1.6673187476E12, 111.5], [1.6673212473E12, 87.60000000000001], [1.6673187477E12, 90.8], [1.6673212472E12, 93.40000000000002], [1.6673187479E12, 82.9], [1.667321247E12, 117.0], [1.6673187478E12, 102.5], [1.6673212471E12, 111.10000000000001], [1.667318748E12, 118.0], [1.6673212469E12, 112.60000000000001], [1.6673187481E12, 84.7], [1.6673212468E12, 95.6], [1.6673187503E12, 106.0], [1.6673212487E12, 75.0], [1.6673187504E12, 88.6], [1.6673212486E12, 81.60000000000001], [1.6673212484E12, 91.4], [1.6673187505E12, 92.5], [1.6673212485E12, 85.6], [1.6673187507E12, 117.60000000000001], [1.6673212483E12, 79.0], [1.6673187506E12, 78.79999999999998], [1.6673187508E12, 108.0], [1.6673187426E12, 122.0], [1.6673212482E12, 92.5], [1.667321248E12, 82.60000000000001], [1.6673187509E12, 93.6], [1.6673187427E12, 49.8], [1.6673212481E12, 93.20000000000002], [1.6673187429E12, 88.0], [1.6673187511E12, 79.0], [1.6673212479E12, 88.19999999999999], [1.6673187428E12, 63.400000000000006], [1.667318751E12, 82.70000000000002], [1.6673187512E12, 92.2], [1.667318743E12, 93.9], [1.6673212478E12, 92.60000000000001], [1.6673187493E12, 101.6], [1.6673212497E12, 96.8], [1.6673187492E12, 100.8], [1.6673187494E12, 108.0], [1.6673212496E12, 75.99999999999999], [1.6673187495E12, 112.9], [1.6673212495E12, 113.4], [1.6673212493E12, 79.0], [1.6673187496E12, 86.5], [1.6673212494E12, 81.19999999999999], [1.6673187498E12, 103.3], [1.6673212492E12, 109.4], [1.6673187497E12, 118.5], [1.6673187499E12, 97.80000000000001], [1.6673212491E12, 107.5], [1.6673212489E12, 85.5], [1.66731875E12, 85.6], [1.667321249E12, 75.6], [1.6673187502E12, 103.39999999999999], [1.6673212488E12, 103.5], [1.6673187501E12, 90.19999999999999], [1.6673212425E12, 58.0], [1.6673212507E12, 114.60000000000008], [1.6673187441E12, 87.8], [1.6673187523E12, 78.3], [1.6673212508E12, 98.19999999999999], [1.6673212426E12, 73.5], [1.6673187525E12, 103.5], [1.6673187443E12, 77.4], [1.6673212424E12, 57.5], [1.6673212506E12, 78.6], [1.6673187524E12, 92.2], [1.6673187442E12, 85.8], [1.6673187444E12, 89.70000000000002], [1.6673187526E12, 97.8], [1.6673212423E12, 40.4], [1.6673212505E12, 96.10000000000001], [1.6673187445E12, 82.0], [1.6673187527E12, 81.0], [1.6673212422E12, 39.5], [1.6673212504E12, 86.0], [1.6673187447E12, 96.40000000000002], [1.6673212502E12, 102.6], [1.6673187528E12, 83.6], [1.6673187446E12, 89.5], [1.6673212421E12, 91.0], [1.6673212503E12, 104.3], [1.6673187448E12, 89.0], [1.667318753E12, 95.70000000000003], [1.6673212501E12, 87.39999999999999], [1.6673187529E12, 85.2], [1.6673187449E12, 88.8], [1.6673187531E12, 74.4], [1.66732125E12, 80.5], [1.6673212498E12, 88.6], [1.6673187532E12, 97.19999999999999], [1.667318745E12, 83.80000000000001], [1.6673212499E12, 93.3], [1.6673187513E12, 79.4], [1.6673187431E12, 72.2], [1.6673212436E12, 92.80000000000001], [1.6673212518E12, 127.5], [1.6673212516E12, 89.1], [1.6673212434E12, 77.8], [1.6673187432E12, 74.30000000000004], [1.6673187514E12, 87.2], [1.6673212517E12, 82.6], [1.6673212435E12, 87.8], [1.6673187516E12, 88.8], [1.6673187434E12, 107.5], [1.6673212433E12, 90.5], [1.6673212515E12, 83.80000000000001], [1.6673187433E12, 105.39999999999999], [1.6673187515E12, 103.0], [1.6673187517E12, 88.2], [1.6673187435E12, 94.8], [1.6673212432E12, 76.60000000000001], [1.6673212514E12, 90.8], [1.6673212512E12, 78.8], [1.6673187436E12, 94.5], [1.6673187518E12, 88.5], [1.6673212431E12, 112.0], [1.6673212513E12, 81.6], [1.6673187438E12, 85.0], [1.6673212429E12, 109.30000000000003], [1.6673212511E12, 77.6], [1.6673187437E12, 102.39999999999999], [1.6673187519E12, 81.6], [1.667321243E12, 87.8], [1.6673187521E12, 96.0], [1.6673187439E12, 78.0], [1.6673212428E12, 92.0], [1.667321251E12, 104.3], [1.667318752E12, 79.0], [1.667318744E12, 96.30000000000001], [1.6673187522E12, 106.40000000000002], [1.6673212509E12, 103.20000000000003], [1.6673212427E12, 84.0], [1.6673187544E12, 102.0], [1.6673187462E12, 102.6], [1.6673212446E12, 106.50000000000003], [1.6673212528E12, 93.19999999999999], [1.6673187545E12, 84.39999999999999], [1.6673187463E12, 78.39999999999999], [1.6673212445E12, 84.2], [1.6673212527E12, 72.80000000000001], [1.6673212525E12, 99.8], [1.6673212443E12, 83.0], [1.6673187464E12, 87.9], [1.6673187546E12, 89.8], [1.6673212444E12, 72.8], [1.6673212526E12, 104.70000000000002], [1.6673187548E12, 91.0], [1.6673187466E12, 111.80000000000001], [1.6673212524E12, 79.6], [1.6673212442E12, 85.2], [1.6673187465E12, 96.8], [1.6673187547E12, 104.39999999999999], [1.6673187549E12, 92.80000000000001], [1.6673187467E12, 110.0], [1.6673212441E12, 104.80000000000001], [1.6673212523E12, 99.80000000000001], [1.6673212521E12, 118.0], [1.6673187468E12, 81.8], [1.667318755E12, 99.80000000000001], [1.667321244E12, 88.5], [1.6673212522E12, 79.3], [1.667318747E12, 103.8], [1.6673212438E12, 119.0], [1.667321252E12, 74.30000000000001], [1.6673187469E12, 88.4], [1.6673187551E12, 105.80000000000001], [1.6673212439E12, 84.2], [1.6673187553E12, 58.0], [1.6673187471E12, 82.2], [1.6673212437E12, 110.0], [1.6673212519E12, 80.0], [1.6673187552E12, 86.7], [1.6673187452E12, 89.70000000000002], [1.6673187534E12, 87.6], [1.6673212456E12, 102.0], [1.6673212538E12, 68.19999999999999], [1.6673187533E12, 103.0], [1.6673187451E12, 95.60000000000002], [1.6673187453E12, 94.9], [1.6673187535E12, 77.8], [1.6673212455E12, 117.0], [1.6673212537E12, 70.3], [1.6673187536E12, 86.7], [1.6673187454E12, 82.8], [1.6673212454E12, 76.00000000000001], [1.6673212536E12, 80.39999999999998], [1.6673212452E12, 94.4], [1.6673212534E12, 93.6], [1.6673187537E12, 84.90000000000003], [1.6673187455E12, 90.70000000000003], [1.6673212453E12, 98.50000000000003], [1.6673212535E12, 108.6], [1.6673187457E12, 75.2], [1.6673187539E12, 87.4], [1.6673212533E12, 94.0], [1.6673212451E12, 80.4], [1.6673187456E12, 106.4], [1.6673187538E12, 77.80000000000003], [1.667318754E12, 115.9], [1.6673187458E12, 103.80000000000001], [1.6673212532E12, 81.8], [1.667321245E12, 87.6], [1.6673212448E12, 101.00000000000001], [1.667321253E12, 113.0], [1.6673187541E12, 96.19999999999999], [1.6673187459E12, 97.0], [1.6673212449E12, 93.4], [1.6673212531E12, 87.39999999999998], [1.6673187461E12, 94.4], [1.6673187543E12, 90.5], [1.6673212447E12, 79.0], [1.6673212529E12, 82.6], [1.667318746E12, 76.5], [1.6673187542E12, 98.80000000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6673212548E12, 30.0], [1.6673212466E12, 111.0], [1.6673187482E12, 96.0], [1.6673212467E12, 79.0], [1.6673187484E12, 93.0], [1.6673212465E12, 88.0], [1.6673212547E12, 37.0], [1.6673187483E12, 101.0], [1.6673187485E12, 96.0], [1.6673212464E12, 81.0], [1.6673212546E12, 67.0], [1.6673212544E12, 81.0], [1.6673187486E12, 100.0], [1.6673212463E12, 106.0], [1.6673212545E12, 54.0], [1.6673212461E12, 101.0], [1.6673212543E12, 65.0], [1.6673187487E12, 100.0], [1.6673212462E12, 106.0], [1.6673187489E12, 91.0], [1.667321246E12, 96.0], [1.6673212542E12, 70.0], [1.6673187488E12, 86.0], [1.667318749E12, 95.0], [1.6673212541E12, 58.0], [1.6673212459E12, 100.0], [1.6673212457E12, 80.0], [1.6673212539E12, 88.0], [1.6673187491E12, 103.0], [1.667321254E12, 82.0], [1.6673212458E12, 93.0], [1.6673187472E12, 113.0], [1.6673187554E12, 78.0], [1.6673212477E12, 78.0], [1.6673212475E12, 75.0], [1.6673187473E12, 100.0], [1.6673187555E12, 62.0], [1.6673212476E12, 87.0], [1.6673187475E12, 104.0], [1.6673212474E12, 112.0], [1.6673187556E12, 38.0], [1.6673187474E12, 97.0], [1.6673187476E12, 115.0], [1.6673212473E12, 93.0], [1.6673187477E12, 92.0], [1.6673212472E12, 106.0], [1.6673187479E12, 85.0], [1.667321247E12, 117.0], [1.6673187478E12, 110.0], [1.6673212471E12, 112.0], [1.667318748E12, 142.0], [1.6673212469E12, 130.0], [1.6673187481E12, 91.0], [1.6673212468E12, 96.0], [1.6673187503E12, 106.0], [1.6673212487E12, 79.0], [1.6673187504E12, 90.0], [1.6673212486E12, 90.0], [1.6673212484E12, 104.0], [1.6673187505E12, 93.0], [1.6673212485E12, 88.0], [1.6673187507E12, 129.0], [1.6673212483E12, 79.0], [1.6673187506E12, 90.0], [1.6673187508E12, 114.0], [1.6673187426E12, 122.0], [1.6673212482E12, 97.0], [1.667321248E12, 91.0], [1.6673187509E12, 94.0], [1.6673187427E12, 55.0], [1.6673212481E12, 103.0], [1.6673187429E12, 89.0], [1.6673187511E12, 79.0], [1.6673212479E12, 97.0], [1.6673187428E12, 64.0], [1.667318751E12, 89.0], [1.6673187512E12, 93.0], [1.667318743E12, 96.0], [1.6673212478E12, 98.0], [1.6673187493E12, 104.0], [1.6673212497E12, 98.0], [1.6673187492E12, 108.0], [1.6673187494E12, 110.0], [1.6673212496E12, 88.0], [1.6673187495E12, 121.0], [1.6673212495E12, 126.0], [1.6673212493E12, 79.0], [1.6673187496E12, 92.0], [1.6673212494E12, 86.0], [1.6673187498E12, 104.0], [1.6673212492E12, 113.0], [1.6673187497E12, 124.0], [1.6673187499E12, 102.0], [1.6673212491E12, 112.0], [1.6673212489E12, 88.0], [1.66731875E12, 88.0], [1.667321249E12, 76.0], [1.6673187502E12, 113.0], [1.6673212488E12, 109.0], [1.6673187501E12, 99.0], [1.6673212425E12, 61.0], [1.6673212507E12, 127.0], [1.6673187441E12, 89.0], [1.6673187523E12, 79.0], [1.6673212508E12, 103.0], [1.6673212426E12, 76.0], [1.6673187525E12, 116.0], [1.6673187443E12, 83.0], [1.6673212424E12, 60.0], [1.6673212506E12, 79.0], [1.6673187524E12, 94.0], [1.6673187442E12, 93.0], [1.6673187444E12, 105.0], [1.6673187526E12, 99.0], [1.6673212423E12, 41.0], [1.6673212505E12, 101.0], [1.6673187445E12, 84.0], [1.6673187527E12, 83.0], [1.6673212422E12, 44.0], [1.6673212504E12, 94.0], [1.6673187447E12, 116.0], [1.6673212502E12, 113.0], [1.6673187528E12, 85.0], [1.6673187446E12, 92.0], [1.6673212421E12, 91.0], [1.6673212503E12, 105.0], [1.6673187448E12, 93.0], [1.667318753E12, 98.0], [1.6673212501E12, 101.0], [1.6673187529E12, 86.0], [1.6673187449E12, 92.0], [1.6673187531E12, 76.0], [1.66732125E12, 84.0], [1.6673212498E12, 90.0], [1.6673187532E12, 110.0], [1.667318745E12, 88.0], [1.6673212499E12, 94.0], [1.6673187513E12, 81.0], [1.6673187431E12, 75.0], [1.6673212436E12, 100.0], [1.6673212518E12, 137.0], [1.6673212516E12, 90.0], [1.6673212434E12, 79.0], [1.6673187432E12, 95.0], [1.6673187514E12, 89.0], [1.6673212517E12, 87.0], [1.6673212435E12, 89.0], [1.6673187516E12, 96.0], [1.6673187434E12, 112.0], [1.6673212433E12, 99.0], [1.6673212515E12, 95.0], [1.6673187433E12, 109.0], [1.6673187515E12, 106.0], [1.6673187517E12, 93.0], [1.6673187435E12, 98.0], [1.6673212432E12, 82.0], [1.6673212514E12, 92.0], [1.6673212512E12, 82.0], [1.6673187436E12, 102.0], [1.6673187518E12, 94.0], [1.6673212431E12, 117.0], [1.6673212513E12, 84.0], [1.6673187438E12, 92.0], [1.6673212429E12, 115.0], [1.6673212511E12, 80.0], [1.6673187437E12, 108.0], [1.6673187519E12, 84.0], [1.667321243E12, 95.0], [1.6673187521E12, 98.0], [1.6673187439E12, 78.0], [1.6673212428E12, 99.0], [1.667321251E12, 105.0], [1.667318752E12, 85.0], [1.667318744E12, 111.0], [1.6673187522E12, 119.0], [1.6673212509E12, 134.0], [1.6673212427E12, 84.0], [1.6673187544E12, 104.0], [1.6673187462E12, 105.0], [1.6673212446E12, 120.0], [1.6673212528E12, 98.0], [1.6673187545E12, 94.0], [1.6673187463E12, 84.0], [1.6673212445E12, 85.0], [1.6673212527E12, 77.0], [1.6673212525E12, 103.0], [1.6673212443E12, 83.0], [1.6673187464E12, 97.0], [1.6673187546E12, 97.0], [1.6673212444E12, 74.0], [1.6673212526E12, 111.0], [1.6673187548E12, 93.0], [1.6673187466E12, 123.0], [1.6673212524E12, 82.0], [1.6673212442E12, 86.0], [1.6673187465E12, 101.0], [1.6673187547E12, 118.0], [1.6673187549E12, 97.0], [1.6673187467E12, 110.0], [1.6673212441E12, 116.0], [1.6673212523E12, 107.0], [1.6673212521E12, 133.0], [1.6673187468E12, 86.0], [1.667318755E12, 101.0], [1.667321244E12, 92.0], [1.6673212522E12, 80.0], [1.667318747E12, 105.0], [1.6673212438E12, 122.0], [1.667321252E12, 86.0], [1.6673187469E12, 92.0], [1.6673187551E12, 117.0], [1.6673212439E12, 85.0], [1.6673187553E12, 60.0], [1.6673187471E12, 84.0], [1.6673212437E12, 113.0], [1.6673212519E12, 96.0], [1.6673187552E12, 93.0], [1.6673187452E12, 105.0], [1.6673187534E12, 102.0], [1.6673212456E12, 102.0], [1.6673212538E12, 81.0], [1.6673187533E12, 109.0], [1.6673187451E12, 118.0], [1.6673187453E12, 97.0], [1.6673187535E12, 81.0], [1.6673212455E12, 120.0], [1.6673212537E12, 71.0], [1.6673187536E12, 87.0], [1.6673187454E12, 84.0], [1.6673212454E12, 85.0], [1.6673212536E12, 98.0], [1.6673212452E12, 98.0], [1.6673212534E12, 100.0], [1.6673187537E12, 102.0], [1.6673187455E12, 97.0], [1.6673212453E12, 130.0], [1.6673212535E12, 110.0], [1.6673187457E12, 78.0], [1.6673187539E12, 91.0], [1.6673212533E12, 98.0], [1.6673212451E12, 86.0], [1.6673187456E12, 107.0], [1.6673187538E12, 94.0], [1.667318754E12, 124.0], [1.6673187458E12, 117.0], [1.6673212532E12, 85.0], [1.667321245E12, 94.0], [1.6673212448E12, 104.0], [1.667321253E12, 113.0], [1.6673187541E12, 103.0], [1.6673187459E12, 97.0], [1.6673212449E12, 97.0], [1.6673212531E12, 113.0], [1.6673187461E12, 100.0], [1.6673187543E12, 94.0], [1.6673212447E12, 79.0], [1.6673212529E12, 84.0], [1.667318746E12, 80.0], [1.6673187542E12, 103.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6673212548E12, 30.0], [1.6673212466E12, 111.0], [1.6673187482E12, 96.0], [1.6673212467E12, 79.0], [1.6673187484E12, 93.0], [1.6673212465E12, 88.0], [1.6673212547E12, 37.0], [1.6673187483E12, 101.0], [1.6673187485E12, 96.0], [1.6673212464E12, 81.0], [1.6673212546E12, 67.0], [1.6673212544E12, 81.0], [1.6673187486E12, 100.0], [1.6673212463E12, 106.0], [1.6673212545E12, 54.0], [1.6673212461E12, 101.0], [1.6673212543E12, 65.0], [1.6673187487E12, 100.0], [1.6673212462E12, 106.0], [1.6673187489E12, 91.0], [1.667321246E12, 96.0], [1.6673212542E12, 70.0], [1.6673187488E12, 86.0], [1.667318749E12, 95.0], [1.6673212541E12, 58.0], [1.6673212459E12, 100.0], [1.6673212457E12, 80.0], [1.6673212539E12, 88.0], [1.6673187491E12, 103.0], [1.667321254E12, 82.0], [1.6673212458E12, 93.0], [1.6673187472E12, 113.0], [1.6673187554E12, 78.0], [1.6673212477E12, 78.0], [1.6673212475E12, 75.0], [1.6673187473E12, 100.0], [1.6673187555E12, 62.0], [1.6673212476E12, 87.0], [1.6673187475E12, 104.0], [1.6673212474E12, 112.0], [1.6673187556E12, 38.0], [1.6673187474E12, 97.0], [1.6673187476E12, 115.0], [1.6673212473E12, 93.0], [1.6673187477E12, 92.0], [1.6673212472E12, 106.0], [1.6673187479E12, 85.0], [1.667321247E12, 117.0], [1.6673187478E12, 110.0], [1.6673212471E12, 112.0], [1.667318748E12, 142.0], [1.6673212469E12, 130.0], [1.6673187481E12, 91.0], [1.6673212468E12, 96.0], [1.6673187503E12, 106.0], [1.6673212487E12, 79.0], [1.6673187504E12, 90.0], [1.6673212486E12, 89.6], [1.6673212484E12, 104.0], [1.6673187505E12, 93.0], [1.6673212485E12, 88.0], [1.6673187507E12, 129.0], [1.6673212483E12, 79.0], [1.6673187506E12, 90.0], [1.6673187508E12, 114.0], [1.6673187426E12, 122.0], [1.6673212482E12, 97.0], [1.667321248E12, 91.0], [1.6673187509E12, 94.0], [1.6673187427E12, 55.0], [1.6673212481E12, 103.0], [1.6673187429E12, 89.0], [1.6673187511E12, 79.0], [1.6673212479E12, 97.0], [1.6673187428E12, 64.0], [1.667318751E12, 89.0], [1.6673187512E12, 93.0], [1.667318743E12, 96.0], [1.6673212478E12, 98.0], [1.6673187493E12, 104.0], [1.6673212497E12, 98.0], [1.6673187492E12, 108.0], [1.6673187494E12, 110.0], [1.6673212496E12, 88.0], [1.6673187495E12, 121.0], [1.6673212495E12, 126.0], [1.6673212493E12, 79.0], [1.6673187496E12, 92.0], [1.6673212494E12, 86.0], [1.6673187498E12, 104.0], [1.6673212492E12, 113.0], [1.6673187497E12, 124.0], [1.6673187499E12, 102.0], [1.6673212491E12, 112.0], [1.6673212489E12, 88.0], [1.66731875E12, 88.0], [1.667321249E12, 76.0], [1.6673187502E12, 113.0], [1.6673212488E12, 109.0], [1.6673187501E12, 99.0], [1.6673212425E12, 61.0], [1.6673212507E12, 126.55], [1.6673187441E12, 89.0], [1.6673187523E12, 79.0], [1.6673212508E12, 103.0], [1.6673212426E12, 76.0], [1.6673187525E12, 116.0], [1.6673187443E12, 83.0], [1.6673212424E12, 60.0], [1.6673212506E12, 79.0], [1.6673187524E12, 94.0], [1.6673187442E12, 93.0], [1.6673187444E12, 105.0], [1.6673187526E12, 99.0], [1.6673212423E12, 41.0], [1.6673212505E12, 101.0], [1.6673187445E12, 84.0], [1.6673187527E12, 83.0], [1.6673212422E12, 44.0], [1.6673212504E12, 94.0], [1.6673187447E12, 116.0], [1.6673212502E12, 113.0], [1.6673187528E12, 85.0], [1.6673187446E12, 92.0], [1.6673212421E12, 91.0], [1.6673212503E12, 105.0], [1.6673187448E12, 93.0], [1.667318753E12, 97.95], [1.6673212501E12, 101.0], [1.6673187529E12, 86.0], [1.6673187449E12, 92.0], [1.6673187531E12, 76.0], [1.66732125E12, 84.0], [1.6673212498E12, 90.0], [1.6673187532E12, 110.0], [1.667318745E12, 88.0], [1.6673212499E12, 94.0], [1.6673187513E12, 81.0], [1.6673187431E12, 75.0], [1.6673212436E12, 100.0], [1.6673212518E12, 137.0], [1.6673212516E12, 90.0], [1.6673212434E12, 79.0], [1.6673187432E12, 95.0], [1.6673187514E12, 89.0], [1.6673212517E12, 87.0], [1.6673212435E12, 89.0], [1.6673187516E12, 96.0], [1.6673187434E12, 112.0], [1.6673212433E12, 99.0], [1.6673212515E12, 95.0], [1.6673187433E12, 109.0], [1.6673187515E12, 106.0], [1.6673187517E12, 93.0], [1.6673187435E12, 98.0], [1.6673212432E12, 82.0], [1.6673212514E12, 92.0], [1.6673212512E12, 82.0], [1.6673187436E12, 102.0], [1.6673187518E12, 94.0], [1.6673212431E12, 117.0], [1.6673212513E12, 84.0], [1.6673187438E12, 92.0], [1.6673212429E12, 115.0], [1.6673212511E12, 80.0], [1.6673187437E12, 108.0], [1.6673187519E12, 84.0], [1.667321243E12, 95.0], [1.6673187521E12, 98.0], [1.6673187439E12, 78.0], [1.6673212428E12, 99.0], [1.667321251E12, 105.0], [1.667318752E12, 85.0], [1.667318744E12, 111.0], [1.6673187522E12, 119.0], [1.6673212509E12, 134.0], [1.6673212427E12, 84.0], [1.6673187544E12, 104.0], [1.6673187462E12, 105.0], [1.6673212446E12, 120.0], [1.6673212528E12, 98.0], [1.6673187545E12, 94.0], [1.6673187463E12, 84.0], [1.6673212445E12, 85.0], [1.6673212527E12, 77.0], [1.6673212525E12, 103.0], [1.6673212443E12, 83.0], [1.6673187464E12, 97.0], [1.6673187546E12, 97.0], [1.6673212444E12, 74.0], [1.6673212526E12, 111.0], [1.6673187548E12, 93.0], [1.6673187466E12, 123.0], [1.6673212524E12, 82.0], [1.6673212442E12, 86.0], [1.6673187465E12, 101.0], [1.6673187547E12, 118.0], [1.6673187549E12, 97.0], [1.6673187467E12, 110.0], [1.6673212441E12, 116.0], [1.6673212523E12, 107.0], [1.6673212521E12, 133.0], [1.6673187468E12, 86.0], [1.667318755E12, 101.0], [1.667321244E12, 92.0], [1.6673212522E12, 80.0], [1.667318747E12, 105.0], [1.6673212438E12, 122.0], [1.667321252E12, 86.0], [1.6673187469E12, 92.0], [1.6673187551E12, 117.0], [1.6673212439E12, 85.0], [1.6673187553E12, 60.0], [1.6673187471E12, 84.0], [1.6673212437E12, 113.0], [1.6673212519E12, 96.0], [1.6673187552E12, 93.0], [1.6673187452E12, 105.0], [1.6673187534E12, 102.0], [1.6673212456E12, 102.0], [1.6673212538E12, 81.0], [1.6673187533E12, 109.0], [1.6673187451E12, 118.0], [1.6673187453E12, 97.0], [1.6673187535E12, 81.0], [1.6673212455E12, 120.0], [1.6673212537E12, 71.0], [1.6673187536E12, 87.0], [1.6673187454E12, 84.0], [1.6673212454E12, 85.0], [1.6673212536E12, 98.0], [1.6673212452E12, 98.0], [1.6673212534E12, 100.0], [1.6673187537E12, 102.0], [1.6673187455E12, 96.75], [1.6673212453E12, 130.0], [1.6673212535E12, 110.0], [1.6673187457E12, 78.0], [1.6673187539E12, 91.0], [1.6673212533E12, 98.0], [1.6673212451E12, 86.0], [1.6673187456E12, 107.0], [1.6673187538E12, 94.0], [1.667318754E12, 124.0], [1.6673187458E12, 117.0], [1.6673212532E12, 85.0], [1.667321245E12, 94.0], [1.6673212448E12, 104.0], [1.667321253E12, 113.0], [1.6673187541E12, 103.0], [1.6673187459E12, 97.0], [1.6673212449E12, 97.0], [1.6673212531E12, 113.0], [1.6673187461E12, 100.0], [1.6673187543E12, 94.0], [1.6673212447E12, 79.0], [1.6673212529E12, 84.0], [1.667318746E12, 80.0], [1.6673187542E12, 103.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6673212548E12, 17.0], [1.6673212466E12, 28.0], [1.6673187482E12, 37.0], [1.6673212467E12, 37.0], [1.6673187484E12, 36.0], [1.6673212465E12, 27.0], [1.6673212547E12, 18.0], [1.6673187483E12, 29.0], [1.6673187485E12, 20.0], [1.6673212464E12, 42.0], [1.6673212546E12, 24.0], [1.6673212544E12, 36.0], [1.6673187486E12, 42.0], [1.6673212463E12, 27.0], [1.6673212545E12, 28.0], [1.6673212461E12, 30.0], [1.6673212543E12, 32.0], [1.6673187487E12, 35.0], [1.6673212462E12, 42.0], [1.6673187489E12, 30.0], [1.667321246E12, 40.0], [1.6673212542E12, 34.0], [1.6673187488E12, 33.0], [1.667318749E12, 31.0], [1.6673212541E12, 27.0], [1.6673212459E12, 40.0], [1.6673212457E12, 31.0], [1.6673212539E12, 26.0], [1.6673187491E12, 31.0], [1.667321254E12, 42.0], [1.6673212458E12, 38.0], [1.6673187472E12, 48.0], [1.6673187554E12, 47.0], [1.6673212477E12, 27.0], [1.6673212475E12, 32.0], [1.6673187473E12, 32.0], [1.6673187555E12, 24.0], [1.6673212476E12, 33.0], [1.6673187475E12, 38.0], [1.6673212474E12, 39.0], [1.6673187556E12, 19.0], [1.6673187474E12, 40.0], [1.6673187476E12, 41.0], [1.6673212473E12, 39.0], [1.6673187477E12, 42.0], [1.6673212472E12, 34.0], [1.6673187479E12, 36.0], [1.667321247E12, 29.0], [1.6673187478E12, 30.0], [1.6673212471E12, 45.0], [1.667318748E12, 43.0], [1.6673212469E12, 35.0], [1.6673187481E12, 41.0], [1.6673212468E12, 34.0], [1.6673187503E12, 27.0], [1.6673212487E12, 38.0], [1.6673187504E12, 36.0], [1.6673212486E12, 34.0], [1.6673212484E12, 41.0], [1.6673187505E12, 40.0], [1.6673212485E12, 31.0], [1.6673187507E12, 34.0], [1.6673212483E12, 29.0], [1.6673187506E12, 38.0], [1.6673187508E12, 47.0], [1.6673187426E12, 27.0], [1.6673212482E12, 31.0], [1.667321248E12, 27.0], [1.6673187509E12, 47.0], [1.6673187427E12, 25.0], [1.6673212481E12, 33.0], [1.6673187429E12, 31.0], [1.6673187511E12, 40.0], [1.6673212479E12, 31.0], [1.6673187428E12, 26.0], [1.667318751E12, 32.0], [1.6673187512E12, 36.0], [1.667318743E12, 43.0], [1.6673212478E12, 31.0], [1.6673187493E12, 40.0], [1.6673212497E12, 33.0], [1.6673187492E12, 45.0], [1.6673187494E12, 37.0], [1.6673212496E12, 34.0], [1.6673187495E12, 30.0], [1.6673212495E12, 41.0], [1.6673212493E12, 37.0], [1.6673187496E12, 30.0], [1.6673212494E12, 28.0], [1.6673187498E12, 37.0], [1.6673212492E12, 37.0], [1.6673187497E12, 40.0], [1.6673187499E12, 29.0], [1.6673212491E12, 39.0], [1.6673212489E12, 42.0], [1.66731875E12, 34.0], [1.667321249E12, 37.0], [1.6673187502E12, 42.0], [1.6673212488E12, 47.0], [1.6673187501E12, 31.0], [1.6673212425E12, 36.0], [1.6673212507E12, 28.0], [1.6673187441E12, 27.0], [1.6673187523E12, 36.0], [1.6673212508E12, 46.0], [1.6673212426E12, 40.0], [1.6673187525E12, 41.0], [1.6673187443E12, 37.0], [1.6673212424E12, 26.0], [1.6673212506E12, 28.0], [1.6673187524E12, 38.0], [1.6673187442E12, 29.0], [1.6673187444E12, 37.0], [1.6673187526E12, 33.0], [1.6673212423E12, 18.0], [1.6673212505E12, 17.0], [1.6673187445E12, 37.0], [1.6673187527E12, 31.0], [1.6673212422E12, 22.0], [1.6673212504E12, 32.0], [1.6673187447E12, 20.0], [1.6673212502E12, 44.0], [1.6673187528E12, 37.0], [1.6673187446E12, 47.0], [1.6673212421E12, 24.0], [1.6673212503E12, 30.0], [1.6673187448E12, 35.0], [1.667318753E12, 30.0], [1.6673212501E12, 35.0], [1.6673187529E12, 41.0], [1.6673187449E12, 32.0], [1.6673187531E12, 39.0], [1.66732125E12, 40.0], [1.6673212498E12, 41.0], [1.6673187532E12, 35.0], [1.667318745E12, 33.0], [1.6673212499E12, 33.0], [1.6673187513E12, 41.0], [1.6673187431E12, 41.0], [1.6673212436E12, 32.0], [1.6673212518E12, 34.0], [1.6673212516E12, 42.0], [1.6673212434E12, 34.0], [1.6673187432E12, 35.0], [1.6673187514E12, 41.0], [1.6673212517E12, 40.0], [1.6673212435E12, 32.0], [1.6673187516E12, 36.0], [1.6673187434E12, 43.0], [1.6673212433E12, 59.0], [1.6673212515E12, 21.0], [1.6673187433E12, 32.0], [1.6673187515E12, 36.0], [1.6673187517E12, 49.0], [1.6673187435E12, 42.0], [1.6673212432E12, 29.0], [1.6673212514E12, 36.0], [1.6673212512E12, 37.0], [1.6673187436E12, 30.0], [1.6673187518E12, 43.0], [1.6673212431E12, 53.0], [1.6673212513E12, 37.0], [1.6673187438E12, 29.0], [1.6673212429E12, 45.0], [1.6673212511E12, 35.0], [1.6673187437E12, 39.0], [1.6673187519E12, 38.0], [1.667321243E12, 38.0], [1.6673187521E12, 29.0], [1.6673187439E12, 35.0], [1.6673212428E12, 39.0], [1.667321251E12, 36.0], [1.667318752E12, 35.0], [1.667318744E12, 33.0], [1.6673187522E12, 24.0], [1.6673212509E12, 41.0], [1.6673212427E12, 29.0], [1.6673187544E12, 46.0], [1.6673187462E12, 28.0], [1.6673212446E12, 27.0], [1.6673212528E12, 42.0], [1.6673187545E12, 45.0], [1.6673187463E12, 29.0], [1.6673212445E12, 40.0], [1.6673212527E12, 29.0], [1.6673212525E12, 22.0], [1.6673212443E12, 37.0], [1.6673187464E12, 40.0], [1.6673187546E12, 46.0], [1.6673212444E12, 49.0], [1.6673212526E12, 24.0], [1.6673187548E12, 40.0], [1.6673187466E12, 47.0], [1.6673212524E12, 34.0], [1.6673212442E12, 39.0], [1.6673187465E12, 37.0], [1.6673187547E12, 43.0], [1.6673187549E12, 41.0], [1.6673187467E12, 43.0], [1.6673212441E12, 29.0], [1.6673212523E12, 37.0], [1.6673212521E12, 40.0], [1.6673187468E12, 37.0], [1.667318755E12, 42.0], [1.667321244E12, 33.0], [1.6673212522E12, 27.0], [1.667318747E12, 38.0], [1.6673212438E12, 38.0], [1.667321252E12, 27.0], [1.6673187469E12, 40.0], [1.6673187551E12, 39.0], [1.6673212439E12, 37.0], [1.6673187553E12, 27.0], [1.6673187471E12, 24.0], [1.6673212437E12, 39.0], [1.6673212519E12, 30.0], [1.6673187552E12, 40.0], [1.6673187452E12, 20.0], [1.6673187534E12, 33.0], [1.6673212456E12, 40.0], [1.6673212538E12, 37.0], [1.6673187533E12, 27.0], [1.6673187451E12, 30.0], [1.6673187453E12, 43.0], [1.6673187535E12, 36.0], [1.6673212455E12, 28.0], [1.6673212537E12, 35.0], [1.6673187536E12, 44.0], [1.6673187454E12, 36.0], [1.6673212454E12, 39.0], [1.6673212536E12, 28.0], [1.6673212452E12, 32.0], [1.6673212534E12, 34.0], [1.6673187537E12, 43.0], [1.6673187455E12, 36.0], [1.6673212453E12, 41.0], [1.6673212535E12, 34.0], [1.6673187457E12, 29.0], [1.6673187539E12, 30.0], [1.6673212533E12, 34.0], [1.6673212451E12, 32.0], [1.6673187456E12, 43.0], [1.6673187538E12, 41.0], [1.667318754E12, 41.0], [1.6673187458E12, 44.0], [1.6673212532E12, 33.0], [1.667321245E12, 38.0], [1.6673212448E12, 28.0], [1.667321253E12, 30.0], [1.6673187541E12, 21.0], [1.6673187459E12, 48.0], [1.6673212449E12, 37.0], [1.6673212531E12, 42.0], [1.6673187461E12, 43.0], [1.6673187543E12, 25.0], [1.6673212447E12, 32.0], [1.6673212529E12, 37.0], [1.667318746E12, 35.0], [1.6673187542E12, 37.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6673212548E12, 23.5], [1.6673212466E12, 62.5], [1.6673187482E12, 71.0], [1.6673212467E12, 60.0], [1.6673187484E12, 57.0], [1.6673212465E12, 48.0], [1.6673212547E12, 28.0], [1.6673187483E12, 64.0], [1.6673187485E12, 61.0], [1.6673212464E12, 62.0], [1.6673212546E12, 33.5], [1.6673212544E12, 46.0], [1.6673187486E12, 65.5], [1.6673212463E12, 55.5], [1.6673212545E12, 43.0], [1.6673212461E12, 53.0], [1.6673212543E12, 51.5], [1.6673187487E12, 65.0], [1.6673212462E12, 60.0], [1.6673187489E12, 54.0], [1.667321246E12, 61.0], [1.6673212542E12, 53.0], [1.6673187488E12, 60.0], [1.667318749E12, 74.0], [1.6673212541E12, 45.0], [1.6673212459E12, 74.5], [1.6673212457E12, 50.5], [1.6673212539E12, 59.0], [1.6673187491E12, 61.0], [1.667321254E12, 55.0], [1.6673212458E12, 66.5], [1.6673187472E12, 69.0], [1.6673187554E12, 54.0], [1.6673212477E12, 62.0], [1.6673212475E12, 55.5], [1.6673187473E12, 58.0], [1.6673187555E12, 36.0], [1.6673212476E12, 52.5], [1.6673187475E12, 73.0], [1.6673212474E12, 54.5], [1.6673187556E12, 32.0], [1.6673187474E12, 56.5], [1.6673187476E12, 74.0], [1.6673212473E12, 52.0], [1.6673187477E12, 67.0], [1.6673212472E12, 59.0], [1.6673187479E12, 64.5], [1.667321247E12, 75.0], [1.6673187478E12, 63.0], [1.6673212471E12, 64.5], [1.667318748E12, 63.0], [1.6673212469E12, 54.0], [1.6673187481E12, 63.0], [1.6673212468E12, 63.0], [1.6673187503E12, 63.0], [1.6673212487E12, 60.0], [1.6673187504E12, 67.0], [1.6673212486E12, 62.0], [1.6673212484E12, 60.0], [1.6673187505E12, 62.5], [1.6673212485E12, 58.0], [1.6673187507E12, 67.0], [1.6673212483E12, 64.5], [1.6673187506E12, 55.0], [1.6673187508E12, 73.0], [1.6673187426E12, 37.0], [1.6673212482E12, 56.5], [1.667321248E12, 63.0], [1.6673187509E12, 62.0], [1.6673187427E12, 35.0], [1.6673212481E12, 67.5], [1.6673187429E12, 57.0], [1.6673187511E12, 60.0], [1.6673212479E12, 61.0], [1.6673187428E12, 43.0], [1.667318751E12, 59.0], [1.6673187512E12, 66.0], [1.667318743E12, 62.5], [1.6673212478E12, 59.0], [1.6673187493E12, 71.0], [1.6673212497E12, 54.0], [1.6673187492E12, 62.0], [1.6673187494E12, 73.0], [1.6673212496E12, 59.0], [1.6673187495E12, 63.0], [1.6673212495E12, 62.0], [1.6673212493E12, 67.0], [1.6673187496E12, 59.5], [1.6673212494E12, 70.0], [1.6673187498E12, 54.5], [1.6673212492E12, 63.0], [1.6673187497E12, 75.5], [1.6673187499E12, 63.5], [1.6673212491E12, 65.0], [1.6673212489E12, 65.0], [1.66731875E12, 66.0], [1.667321249E12, 66.0], [1.6673187502E12, 62.0], [1.6673212488E12, 65.5], [1.6673187501E12, 65.0], [1.6673212425E12, 47.0], [1.6673212507E12, 64.5], [1.6673187441E12, 64.0], [1.6673187523E12, 66.5], [1.6673212508E12, 71.0], [1.6673212426E12, 57.5], [1.6673187525E12, 60.0], [1.6673187443E12, 66.5], [1.6673212424E12, 42.5], [1.6673212506E12, 58.5], [1.6673187524E12, 64.0], [1.6673187442E12, 68.0], [1.6673187444E12, 61.5], [1.6673187526E12, 73.0], [1.6673212423E12, 35.0], [1.6673212505E12, 63.5], [1.6673187445E12, 62.0], [1.6673187527E12, 69.0], [1.6673212422E12, 29.5], [1.6673212504E12, 62.0], [1.6673187447E12, 65.0], [1.6673212502E12, 54.0], [1.6673187528E12, 57.0], [1.6673187446E12, 74.0], [1.6673212421E12, 39.0], [1.6673212503E12, 54.0], [1.6673187448E12, 63.0], [1.667318753E12, 69.5], [1.6673212501E12, 53.0], [1.6673187529E12, 64.0], [1.6673187449E12, 54.0], [1.6673187531E12, 54.0], [1.66732125E12, 63.0], [1.6673212498E12, 62.5], [1.6673187532E12, 58.0], [1.667318745E12, 60.5], [1.6673212499E12, 60.5], [1.6673187513E12, 56.0], [1.6673187431E12, 54.5], [1.6673212436E12, 69.0], [1.6673212518E12, 61.0], [1.6673212516E12, 61.5], [1.6673212434E12, 48.0], [1.6673187432E12, 55.0], [1.6673187514E12, 67.0], [1.6673212517E12, 61.0], [1.6673212435E12, 56.0], [1.6673187516E12, 59.0], [1.6673187434E12, 63.5], [1.6673212433E12, 70.5], [1.6673212515E12, 59.5], [1.6673187433E12, 64.0], [1.6673187515E12, 65.0], [1.6673187517E12, 66.0], [1.6673187435E12, 59.0], [1.6673212432E12, 51.5], [1.6673212514E12, 62.0], [1.6673212512E12, 57.0], [1.6673187436E12, 61.5], [1.6673187518E12, 65.5], [1.6673212431E12, 70.0], [1.6673212513E12, 69.0], [1.6673187438E12, 64.0], [1.6673212429E12, 61.5], [1.6673212511E12, 48.0], [1.6673187437E12, 57.0], [1.6673187519E12, 61.0], [1.667321243E12, 69.0], [1.6673187521E12, 55.0], [1.6673187439E12, 58.0], [1.6673212428E12, 63.0], [1.667321251E12, 71.0], [1.667318752E12, 57.0], [1.667318744E12, 66.5], [1.6673187522E12, 56.5], [1.6673212509E12, 60.5], [1.6673212427E12, 59.0], [1.6673187544E12, 65.0], [1.6673187462E12, 72.0], [1.6673212446E12, 64.0], [1.6673212528E12, 62.0], [1.6673187545E12, 63.0], [1.6673187463E12, 58.0], [1.6673212445E12, 53.0], [1.6673212527E12, 49.5], [1.6673212525E12, 67.0], [1.6673212443E12, 57.0], [1.6673187464E12, 58.0], [1.6673187546E12, 63.0], [1.6673212444E12, 63.0], [1.6673212526E12, 52.5], [1.6673187548E12, 62.0], [1.6673187466E12, 69.0], [1.6673212524E12, 45.0], [1.6673212442E12, 54.0], [1.6673187465E12, 62.0], [1.6673187547E12, 72.0], [1.6673187549E12, 62.5], [1.6673187467E12, 63.0], [1.6673212441E12, 56.5], [1.6673212523E12, 76.0], [1.6673212521E12, 66.5], [1.6673187468E12, 63.0], [1.667318755E12, 67.5], [1.667321244E12, 65.0], [1.6673212522E12, 60.5], [1.667318747E12, 61.0], [1.6673212438E12, 65.0], [1.667321252E12, 60.0], [1.6673187469E12, 62.0], [1.6673187551E12, 66.5], [1.6673212439E12, 59.0], [1.6673187553E12, 41.0], [1.6673187471E12, 60.0], [1.6673212437E12, 78.5], [1.6673212519E12, 63.0], [1.6673187552E12, 63.5], [1.6673187452E12, 57.5], [1.6673187534E12, 56.0], [1.6673212456E12, 70.5], [1.6673212538E12, 55.0], [1.6673187533E12, 73.0], [1.6673187451E12, 59.5], [1.6673187453E12, 62.5], [1.6673187535E12, 60.0], [1.6673212455E12, 55.0], [1.6673212537E12, 50.5], [1.6673187536E12, 71.5], [1.6673187454E12, 60.0], [1.6673212454E12, 62.5], [1.6673212536E12, 50.0], [1.6673212452E12, 66.0], [1.6673212534E12, 50.0], [1.6673187537E12, 63.5], [1.6673187455E12, 58.0], [1.6673212453E12, 52.5], [1.6673212535E12, 68.0], [1.6673187457E12, 62.5], [1.6673187539E12, 57.5], [1.6673212533E12, 65.0], [1.6673212451E12, 60.5], [1.6673187456E12, 71.0], [1.6673187538E12, 52.0], [1.667318754E12, 73.5], [1.6673187458E12, 65.0], [1.6673212532E12, 62.0], [1.667321245E12, 64.0], [1.6673212448E12, 82.5], [1.667321253E12, 56.0], [1.6673187541E12, 65.0], [1.6673187459E12, 73.0], [1.6673212449E12, 63.0], [1.6673212531E12, 52.0], [1.6673187461E12, 68.0], [1.6673187543E12, 63.0], [1.6673212447E12, 49.0], [1.6673212529E12, 59.0], [1.667318746E12, 52.5], [1.6673187542E12, 76.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673212548E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 38.0, "minX": 44.0, "maxY": 66.0, "series": [{"data": [[131.0, 45.0], [149.0, 65.0], [150.0, 64.0], [153.0, 60.0], [158.0, 62.0], [157.0, 62.0], [152.0, 65.0], [155.0, 64.0], [159.0, 61.0], [154.0, 66.0], [160.0, 60.0], [162.0, 62.0], [165.0, 56.0], [44.0, 38.0], [104.0, 49.0], [118.0, 48.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 165.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 38.0, "minX": 44.0, "maxY": 66.0, "series": [{"data": [[131.0, 45.0], [149.0, 65.0], [150.0, 64.0], [153.0, 60.0], [158.0, 62.0], [157.0, 62.0], [152.0, 65.0], [155.0, 64.0], [159.0, 61.0], [154.0, 66.0], [160.0, 60.0], [162.0, 62.0], [165.0, 56.0], [44.0, 38.0], [104.0, 49.0], [118.0, 48.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 165.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 30.0, "minX": 1.6673187425E12, "maxY": 200.0, "series": [{"data": [[1.6673212548E12, 70.0], [1.6673212466E12, 180.0], [1.6673187482E12, 150.0], [1.6673212467E12, 160.0], [1.6673187484E12, 170.0], [1.6673212465E12, 160.0], [1.6673212547E12, 100.0], [1.6673187483E12, 150.0], [1.6673187485E12, 150.0], [1.6673212464E12, 180.0], [1.6673212546E12, 130.0], [1.6673212544E12, 160.0], [1.6673187486E12, 160.0], [1.6673212463E12, 150.0], [1.6673212545E12, 140.0], [1.6673212461E12, 170.0], [1.6673212543E12, 160.0], [1.6673187487E12, 150.0], [1.6673212462E12, 150.0], [1.6673187489E12, 150.0], [1.667321246E12, 160.0], [1.6673212542E12, 130.0], [1.6673187488E12, 170.0], [1.667318749E12, 140.0], [1.6673212541E12, 180.0], [1.6673212459E12, 140.0], [1.6673212457E12, 180.0], [1.6673212539E12, 170.0], [1.6673187491E12, 170.0], [1.667321254E12, 150.0], [1.6673212458E12, 140.0], [1.6673187472E12, 130.0], [1.6673187554E12, 110.0], [1.6673212477E12, 180.0], [1.6673212475E12, 180.0], [1.6673187473E12, 160.0], [1.6673187555E12, 170.0], [1.6673212476E12, 160.0], [1.6673187475E12, 170.0], [1.6673212474E12, 160.0], [1.6673187556E12, 60.0], [1.6673187474E12, 140.0], [1.6673187476E12, 140.0], [1.6673212473E12, 150.0], [1.6673187477E12, 150.0], [1.6673212472E12, 180.0], [1.6673187479E12, 160.0], [1.667321247E12, 140.0], [1.6673187478E12, 140.0], [1.6673212471E12, 140.0], [1.667318748E12, 140.0], [1.6673212469E12, 140.0], [1.6673187481E12, 160.0], [1.6673212468E12, 140.0], [1.6673187503E12, 170.0], [1.6673212487E12, 170.0], [1.6673187504E12, 160.0], [1.6673212486E12, 200.0], [1.6673212484E12, 160.0], [1.6673187505E12, 140.0], [1.6673212485E12, 150.0], [1.6673187425E12, 30.0], [1.6673187507E12, 150.0], [1.6673212483E12, 140.0], [1.6673187506E12, 170.0], [1.6673187508E12, 150.0], [1.6673187426E12, 90.0], [1.6673212482E12, 180.0], [1.667321248E12, 150.0], [1.6673187509E12, 130.0], [1.6673187427E12, 140.0], [1.6673212481E12, 160.0], [1.6673187429E12, 120.0], [1.6673187511E12, 140.0], [1.6673212479E12, 170.0], [1.6673187428E12, 130.0], [1.667318751E12, 180.0], [1.6673187512E12, 170.0], [1.667318743E12, 130.0], [1.6673212478E12, 150.0], [1.6673187493E12, 130.0], [1.6673212497E12, 150.0], [1.6673187492E12, 130.0], [1.6673187494E12, 140.0], [1.6673212496E12, 170.0], [1.6673187495E12, 180.0], [1.6673212495E12, 150.0], [1.6673212493E12, 150.0], [1.6673187496E12, 140.0], [1.6673212494E12, 170.0], [1.6673187498E12, 160.0], [1.6673212492E12, 150.0], [1.6673187497E12, 140.0], [1.6673187499E12, 160.0], [1.6673212491E12, 180.0], [1.6673212489E12, 140.0], [1.66731875E12, 130.0], [1.667321249E12, 130.0], [1.6673187502E12, 130.0], [1.6673212488E12, 140.0], [1.6673187501E12, 170.0], [1.6673212425E12, 150.0], [1.6673212507E12, 200.0], [1.6673187441E12, 130.0], [1.6673187523E12, 160.0], [1.6673212508E12, 130.0], [1.6673212426E12, 150.0], [1.6673187525E12, 140.0], [1.6673187443E12, 160.0], [1.6673212424E12, 160.0], [1.6673212506E12, 100.0], [1.6673187524E12, 150.0], [1.6673187442E12, 170.0], [1.6673187444E12, 170.0], [1.6673187526E12, 130.0], [1.6673212423E12, 150.0], [1.6673212505E12, 160.0], [1.6673187445E12, 150.0], [1.6673187527E12, 190.0], [1.6673212422E12, 150.0], [1.6673212504E12, 170.0], [1.6673187447E12, 160.0], [1.667321242E12, 30.0], [1.6673212502E12, 170.0], [1.6673187528E12, 160.0], [1.6673187446E12, 140.0], [1.6673212421E12, 70.0], [1.6673212503E12, 160.0], [1.6673187448E12, 170.0], [1.667318753E12, 200.0], [1.6673212501E12, 170.0], [1.6673187529E12, 130.0], [1.6673187449E12, 160.0], [1.6673187531E12, 130.0], [1.66732125E12, 160.0], [1.6673212498E12, 160.0], [1.6673187532E12, 170.0], [1.667318745E12, 170.0], [1.6673212499E12, 160.0], [1.6673187513E12, 170.0], [1.6673187431E12, 180.0], [1.6673212436E12, 150.0], [1.6673212518E12, 140.0], [1.6673212516E12, 180.0], [1.6673212434E12, 150.0], [1.6673187432E12, 180.0], [1.6673187514E12, 150.0], [1.6673212517E12, 130.0], [1.6673212435E12, 150.0], [1.6673187516E12, 170.0], [1.6673187434E12, 140.0], [1.6673212433E12, 140.0], [1.6673212515E12, 160.0], [1.6673187433E12, 130.0], [1.6673187515E12, 150.0], [1.6673187517E12, 150.0], [1.6673187435E12, 170.0], [1.6673212432E12, 180.0], [1.6673212514E12, 150.0], [1.6673212512E12, 170.0], [1.6673187436E12, 140.0], [1.6673187518E12, 140.0], [1.6673212431E12, 140.0], [1.6673212513E12, 170.0], [1.6673187438E12, 160.0], [1.6673212429E12, 120.0], [1.6673212511E12, 150.0], [1.6673187437E12, 170.0], [1.6673187519E12, 150.0], [1.667321243E12, 170.0], [1.6673187521E12, 140.0], [1.6673187439E12, 160.0], [1.6673212428E12, 150.0], [1.667321251E12, 160.0], [1.667318752E12, 190.0], [1.667318744E12, 160.0], [1.6673187522E12, 180.0], [1.6673212509E12, 160.0], [1.6673212427E12, 150.0], [1.6673187544E12, 140.0], [1.6673187462E12, 150.0], [1.6673212446E12, 180.0], [1.6673212528E12, 170.0], [1.6673187545E12, 170.0], [1.6673187463E12, 170.0], [1.6673212445E12, 130.0], [1.6673212527E12, 160.0], [1.6673212525E12, 170.0], [1.6673212443E12, 180.0], [1.6673187464E12, 160.0], [1.6673187546E12, 130.0], [1.6673212444E12, 150.0], [1.6673212526E12, 180.0], [1.6673187548E12, 140.0], [1.6673187466E12, 160.0], [1.6673212524E12, 150.0], [1.6673212442E12, 170.0], [1.6673187465E12, 150.0], [1.6673187547E12, 170.0], [1.6673187549E12, 160.0], [1.6673187467E12, 140.0], [1.6673212441E12, 160.0], [1.6673212523E12, 150.0], [1.6673212521E12, 140.0], [1.6673187468E12, 150.0], [1.667318755E12, 120.0], [1.667321244E12, 140.0], [1.6673212522E12, 160.0], [1.667318747E12, 150.0], [1.6673212438E12, 150.0], [1.667321252E12, 180.0], [1.6673187469E12, 150.0], [1.6673187551E12, 160.0], [1.6673212439E12, 170.0], [1.6673187553E12, 180.0], [1.6673187471E12, 180.0], [1.6673212437E12, 140.0], [1.6673212519E12, 190.0], [1.6673187552E12, 140.0], [1.6673187452E12, 180.0], [1.6673187534E12, 170.0], [1.6673212456E12, 170.0], [1.6673212538E12, 170.0], [1.6673187533E12, 150.0], [1.6673187451E12, 160.0], [1.6673187453E12, 160.0], [1.6673187535E12, 170.0], [1.6673212455E12, 140.0], [1.6673212537E12, 160.0], [1.6673187536E12, 120.0], [1.6673187454E12, 130.0], [1.6673212454E12, 180.0], [1.6673212536E12, 160.0], [1.6673212452E12, 150.0], [1.6673212534E12, 170.0], [1.6673187537E12, 180.0], [1.6673187455E12, 200.0], [1.6673212453E12, 160.0], [1.6673212535E12, 160.0], [1.6673187457E12, 160.0], [1.6673187539E12, 120.0], [1.6673212533E12, 140.0], [1.6673212451E12, 160.0], [1.6673187456E12, 120.0], [1.6673187538E12, 180.0], [1.667318754E12, 180.0], [1.6673187458E12, 150.0], [1.6673212532E12, 170.0], [1.667321245E12, 170.0], [1.6673212448E12, 120.0], [1.667321253E12, 170.0], [1.6673187541E12, 130.0], [1.6673187459E12, 150.0], [1.6673212449E12, 150.0], [1.6673212531E12, 170.0], [1.6673187461E12, 160.0], [1.6673187543E12, 140.0], [1.6673212447E12, 190.0], [1.6673212529E12, 160.0], [1.667318746E12, 140.0], [1.6673187542E12, 160.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673212548E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.6673187426E12, "maxY": 200.0, "series": [{"data": [[1.6673212548E12, 100.0], [1.6673212466E12, 180.0], [1.6673187482E12, 150.0], [1.6673212467E12, 170.0], [1.6673187484E12, 170.0], [1.6673212465E12, 160.0], [1.6673212547E12, 110.0], [1.6673187483E12, 150.0], [1.6673187485E12, 150.0], [1.6673212464E12, 170.0], [1.6673212546E12, 140.0], [1.6673212544E12, 170.0], [1.6673187486E12, 160.0], [1.6673212463E12, 160.0], [1.6673212545E12, 160.0], [1.6673212461E12, 170.0], [1.6673212543E12, 160.0], [1.6673187487E12, 150.0], [1.6673212462E12, 150.0], [1.6673187489E12, 150.0], [1.667321246E12, 160.0], [1.6673212542E12, 130.0], [1.6673187488E12, 170.0], [1.667318749E12, 140.0], [1.6673212541E12, 180.0], [1.6673212459E12, 140.0], [1.6673212457E12, 180.0], [1.6673212539E12, 170.0], [1.6673187491E12, 170.0], [1.667321254E12, 160.0], [1.6673212458E12, 140.0], [1.6673187472E12, 130.0], [1.6673187554E12, 110.0], [1.6673212477E12, 180.0], [1.6673212475E12, 180.0], [1.6673187473E12, 160.0], [1.6673187555E12, 190.0], [1.6673212476E12, 160.0], [1.6673187475E12, 170.0], [1.6673212474E12, 160.0], [1.6673187556E12, 110.0], [1.6673187474E12, 140.0], [1.6673187476E12, 140.0], [1.6673212473E12, 150.0], [1.6673187477E12, 150.0], [1.6673212472E12, 180.0], [1.6673187479E12, 160.0], [1.667321247E12, 150.0], [1.6673187478E12, 140.0], [1.6673212471E12, 120.0], [1.667318748E12, 140.0], [1.6673212469E12, 150.0], [1.6673187481E12, 160.0], [1.6673212468E12, 130.0], [1.6673187503E12, 170.0], [1.6673212487E12, 170.0], [1.6673187504E12, 160.0], [1.6673212486E12, 200.0], [1.6673212484E12, 160.0], [1.6673187505E12, 140.0], [1.6673212485E12, 150.0], [1.6673187507E12, 150.0], [1.6673212483E12, 140.0], [1.6673187506E12, 170.0], [1.6673187508E12, 150.0], [1.6673187426E12, 80.0], [1.6673212482E12, 180.0], [1.667321248E12, 150.0], [1.6673187509E12, 130.0], [1.6673187427E12, 130.0], [1.6673212481E12, 160.0], [1.6673187429E12, 110.0], [1.6673187511E12, 140.0], [1.6673212479E12, 170.0], [1.6673187428E12, 120.0], [1.667318751E12, 180.0], [1.6673187512E12, 170.0], [1.667318743E12, 120.0], [1.6673212478E12, 150.0], [1.6673187493E12, 130.0], [1.6673212497E12, 150.0], [1.6673187492E12, 130.0], [1.6673187494E12, 140.0], [1.6673212496E12, 170.0], [1.6673187495E12, 180.0], [1.6673212495E12, 150.0], [1.6673212493E12, 150.0], [1.6673187496E12, 140.0], [1.6673212494E12, 170.0], [1.6673187498E12, 160.0], [1.6673212492E12, 150.0], [1.6673187497E12, 140.0], [1.6673187499E12, 160.0], [1.6673212491E12, 180.0], [1.6673212489E12, 140.0], [1.66731875E12, 130.0], [1.667321249E12, 130.0], [1.6673187502E12, 130.0], [1.6673212488E12, 140.0], [1.6673187501E12, 170.0], [1.6673212425E12, 140.0], [1.6673212507E12, 200.0], [1.6673187441E12, 130.0], [1.6673187523E12, 160.0], [1.6673212508E12, 130.0], [1.6673212426E12, 140.0], [1.6673187525E12, 140.0], [1.6673187443E12, 160.0], [1.6673212424E12, 140.0], [1.6673212506E12, 100.0], [1.6673187524E12, 150.0], [1.6673187442E12, 170.0], [1.6673187444E12, 180.0], [1.6673187526E12, 130.0], [1.6673212423E12, 150.0], [1.6673212505E12, 160.0], [1.6673187445E12, 140.0], [1.6673187527E12, 190.0], [1.6673212422E12, 140.0], [1.6673212504E12, 170.0], [1.6673187447E12, 160.0], [1.6673212502E12, 170.0], [1.6673187528E12, 160.0], [1.6673187446E12, 140.0], [1.6673212421E12, 60.0], [1.6673212503E12, 160.0], [1.6673187448E12, 170.0], [1.667318753E12, 200.0], [1.6673212501E12, 170.0], [1.6673187529E12, 130.0], [1.6673187449E12, 170.0], [1.6673187531E12, 130.0], [1.66732125E12, 160.0], [1.6673212498E12, 160.0], [1.6673187532E12, 170.0], [1.667318745E12, 160.0], [1.6673212499E12, 160.0], [1.6673187513E12, 170.0], [1.6673187431E12, 160.0], [1.6673212436E12, 150.0], [1.6673212518E12, 140.0], [1.6673212516E12, 180.0], [1.6673212434E12, 150.0], [1.6673187432E12, 180.0], [1.6673187514E12, 150.0], [1.6673212517E12, 130.0], [1.6673212435E12, 150.0], [1.6673187516E12, 170.0], [1.6673187434E12, 140.0], [1.6673212433E12, 140.0], [1.6673212515E12, 160.0], [1.6673187433E12, 130.0], [1.6673187515E12, 150.0], [1.6673187517E12, 150.0], [1.6673187435E12, 170.0], [1.6673212432E12, 180.0], [1.6673212514E12, 150.0], [1.6673212512E12, 170.0], [1.6673187436E12, 140.0], [1.6673187518E12, 140.0], [1.6673212431E12, 140.0], [1.6673212513E12, 170.0], [1.6673187438E12, 160.0], [1.6673212429E12, 120.0], [1.6673212511E12, 150.0], [1.6673187437E12, 170.0], [1.6673187519E12, 150.0], [1.667321243E12, 170.0], [1.6673187521E12, 140.0], [1.6673187439E12, 160.0], [1.6673212428E12, 140.0], [1.667321251E12, 160.0], [1.667318752E12, 190.0], [1.667318744E12, 160.0], [1.6673187522E12, 180.0], [1.6673212509E12, 160.0], [1.6673212427E12, 150.0], [1.6673187544E12, 140.0], [1.6673187462E12, 150.0], [1.6673212446E12, 180.0], [1.6673212528E12, 170.0], [1.6673187545E12, 170.0], [1.6673187463E12, 170.0], [1.6673212445E12, 130.0], [1.6673212527E12, 160.0], [1.6673212525E12, 170.0], [1.6673212443E12, 180.0], [1.6673187464E12, 160.0], [1.6673187546E12, 130.0], [1.6673212444E12, 150.0], [1.6673212526E12, 180.0], [1.6673187548E12, 140.0], [1.6673187466E12, 160.0], [1.6673212524E12, 150.0], [1.6673212442E12, 170.0], [1.6673187465E12, 150.0], [1.6673187547E12, 170.0], [1.6673187549E12, 160.0], [1.6673187467E12, 140.0], [1.6673212441E12, 160.0], [1.6673212523E12, 150.0], [1.6673212521E12, 140.0], [1.6673187468E12, 150.0], [1.667318755E12, 120.0], [1.667321244E12, 140.0], [1.6673212522E12, 160.0], [1.667318747E12, 150.0], [1.6673212438E12, 150.0], [1.667321252E12, 180.0], [1.6673187469E12, 150.0], [1.6673187551E12, 160.0], [1.6673212439E12, 170.0], [1.6673187553E12, 190.0], [1.6673187471E12, 180.0], [1.6673212437E12, 140.0], [1.6673212519E12, 190.0], [1.6673187552E12, 160.0], [1.6673187452E12, 180.0], [1.6673187534E12, 170.0], [1.6673212456E12, 160.0], [1.6673212538E12, 170.0], [1.6673187533E12, 150.0], [1.6673187451E12, 160.0], [1.6673187453E12, 160.0], [1.6673187535E12, 170.0], [1.6673212455E12, 150.0], [1.6673212537E12, 160.0], [1.6673187536E12, 120.0], [1.6673187454E12, 130.0], [1.6673212454E12, 180.0], [1.6673212536E12, 170.0], [1.6673212452E12, 150.0], [1.6673212534E12, 170.0], [1.6673187537E12, 180.0], [1.6673187455E12, 200.0], [1.6673212453E12, 160.0], [1.6673212535E12, 160.0], [1.6673187457E12, 160.0], [1.6673187539E12, 120.0], [1.6673212533E12, 140.0], [1.6673212451E12, 160.0], [1.6673187456E12, 120.0], [1.6673187538E12, 180.0], [1.667318754E12, 180.0], [1.6673187458E12, 150.0], [1.6673212532E12, 170.0], [1.667321245E12, 170.0], [1.6673212448E12, 120.0], [1.667321253E12, 170.0], [1.6673187541E12, 130.0], [1.6673187459E12, 150.0], [1.6673212449E12, 150.0], [1.6673212531E12, 170.0], [1.6673187461E12, 160.0], [1.6673187543E12, 140.0], [1.6673212447E12, 190.0], [1.6673212529E12, 160.0], [1.667318746E12, 140.0], [1.6673187542E12, 160.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673212548E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.6673187426E12, "maxY": 200.0, "series": [{"data": [[1.6673212548E12, 100.0], [1.6673212466E12, 180.0], [1.6673187482E12, 150.0], [1.6673212467E12, 170.0], [1.6673187484E12, 170.0], [1.6673212465E12, 160.0], [1.6673212547E12, 110.0], [1.6673187483E12, 150.0], [1.6673187485E12, 150.0], [1.6673212464E12, 170.0], [1.6673212546E12, 140.0], [1.6673212544E12, 170.0], [1.6673187486E12, 160.0], [1.6673212463E12, 160.0], [1.6673212545E12, 160.0], [1.6673212461E12, 170.0], [1.6673212543E12, 160.0], [1.6673187487E12, 150.0], [1.6673212462E12, 150.0], [1.6673187489E12, 150.0], [1.667321246E12, 160.0], [1.6673212542E12, 130.0], [1.6673187488E12, 170.0], [1.667318749E12, 140.0], [1.6673212541E12, 180.0], [1.6673212459E12, 140.0], [1.6673212457E12, 180.0], [1.6673212539E12, 170.0], [1.6673187491E12, 170.0], [1.667321254E12, 160.0], [1.6673212458E12, 140.0], [1.6673187472E12, 130.0], [1.6673187554E12, 110.0], [1.6673212477E12, 180.0], [1.6673212475E12, 180.0], [1.6673187473E12, 160.0], [1.6673187555E12, 190.0], [1.6673212476E12, 160.0], [1.6673187475E12, 170.0], [1.6673212474E12, 160.0], [1.6673187556E12, 110.0], [1.6673187474E12, 140.0], [1.6673187476E12, 140.0], [1.6673212473E12, 150.0], [1.6673187477E12, 150.0], [1.6673212472E12, 180.0], [1.6673187479E12, 160.0], [1.667321247E12, 150.0], [1.6673187478E12, 140.0], [1.6673212471E12, 120.0], [1.667318748E12, 140.0], [1.6673212469E12, 150.0], [1.6673187481E12, 160.0], [1.6673212468E12, 130.0], [1.6673187503E12, 170.0], [1.6673212487E12, 170.0], [1.6673187504E12, 160.0], [1.6673212486E12, 200.0], [1.6673212484E12, 160.0], [1.6673187505E12, 140.0], [1.6673212485E12, 150.0], [1.6673187507E12, 150.0], [1.6673212483E12, 140.0], [1.6673187506E12, 170.0], [1.6673187508E12, 150.0], [1.6673187426E12, 80.0], [1.6673212482E12, 180.0], [1.667321248E12, 150.0], [1.6673187509E12, 130.0], [1.6673187427E12, 130.0], [1.6673212481E12, 160.0], [1.6673187429E12, 110.0], [1.6673187511E12, 140.0], [1.6673212479E12, 170.0], [1.6673187428E12, 120.0], [1.667318751E12, 180.0], [1.6673187512E12, 170.0], [1.667318743E12, 120.0], [1.6673212478E12, 150.0], [1.6673187493E12, 130.0], [1.6673212497E12, 150.0], [1.6673187492E12, 130.0], [1.6673187494E12, 140.0], [1.6673212496E12, 170.0], [1.6673187495E12, 180.0], [1.6673212495E12, 150.0], [1.6673212493E12, 150.0], [1.6673187496E12, 140.0], [1.6673212494E12, 170.0], [1.6673187498E12, 160.0], [1.6673212492E12, 150.0], [1.6673187497E12, 140.0], [1.6673187499E12, 160.0], [1.6673212491E12, 180.0], [1.6673212489E12, 140.0], [1.66731875E12, 130.0], [1.667321249E12, 130.0], [1.6673187502E12, 130.0], [1.6673212488E12, 140.0], [1.6673187501E12, 170.0], [1.6673212425E12, 140.0], [1.6673212507E12, 200.0], [1.6673187441E12, 130.0], [1.6673187523E12, 160.0], [1.6673212508E12, 130.0], [1.6673212426E12, 140.0], [1.6673187525E12, 140.0], [1.6673187443E12, 160.0], [1.6673212424E12, 140.0], [1.6673212506E12, 100.0], [1.6673187524E12, 150.0], [1.6673187442E12, 170.0], [1.6673187444E12, 180.0], [1.6673187526E12, 130.0], [1.6673212423E12, 150.0], [1.6673212505E12, 160.0], [1.6673187445E12, 140.0], [1.6673187527E12, 190.0], [1.6673212422E12, 140.0], [1.6673212504E12, 170.0], [1.6673187447E12, 160.0], [1.6673212502E12, 170.0], [1.6673187528E12, 160.0], [1.6673187446E12, 140.0], [1.6673212421E12, 60.0], [1.6673212503E12, 160.0], [1.6673187448E12, 170.0], [1.667318753E12, 200.0], [1.6673212501E12, 170.0], [1.6673187529E12, 130.0], [1.6673187449E12, 170.0], [1.6673187531E12, 130.0], [1.66732125E12, 160.0], [1.6673212498E12, 160.0], [1.6673187532E12, 170.0], [1.667318745E12, 160.0], [1.6673212499E12, 160.0], [1.6673187513E12, 170.0], [1.6673187431E12, 160.0], [1.6673212436E12, 150.0], [1.6673212518E12, 140.0], [1.6673212516E12, 180.0], [1.6673212434E12, 150.0], [1.6673187432E12, 180.0], [1.6673187514E12, 150.0], [1.6673212517E12, 130.0], [1.6673212435E12, 150.0], [1.6673187516E12, 170.0], [1.6673187434E12, 140.0], [1.6673212433E12, 140.0], [1.6673212515E12, 160.0], [1.6673187433E12, 130.0], [1.6673187515E12, 150.0], [1.6673187517E12, 150.0], [1.6673187435E12, 170.0], [1.6673212432E12, 180.0], [1.6673212514E12, 150.0], [1.6673212512E12, 170.0], [1.6673187436E12, 140.0], [1.6673187518E12, 140.0], [1.6673212431E12, 140.0], [1.6673212513E12, 170.0], [1.6673187438E12, 160.0], [1.6673212429E12, 120.0], [1.6673212511E12, 150.0], [1.6673187437E12, 170.0], [1.6673187519E12, 150.0], [1.667321243E12, 170.0], [1.6673187521E12, 140.0], [1.6673187439E12, 160.0], [1.6673212428E12, 140.0], [1.667321251E12, 160.0], [1.667318752E12, 190.0], [1.667318744E12, 160.0], [1.6673187522E12, 180.0], [1.6673212509E12, 160.0], [1.6673212427E12, 150.0], [1.6673187544E12, 140.0], [1.6673187462E12, 150.0], [1.6673212446E12, 180.0], [1.6673212528E12, 170.0], [1.6673187545E12, 170.0], [1.6673187463E12, 170.0], [1.6673212445E12, 130.0], [1.6673212527E12, 160.0], [1.6673212525E12, 170.0], [1.6673212443E12, 180.0], [1.6673187464E12, 160.0], [1.6673187546E12, 130.0], [1.6673212444E12, 150.0], [1.6673212526E12, 180.0], [1.6673187548E12, 140.0], [1.6673187466E12, 160.0], [1.6673212524E12, 150.0], [1.6673212442E12, 170.0], [1.6673187465E12, 150.0], [1.6673187547E12, 170.0], [1.6673187549E12, 160.0], [1.6673187467E12, 140.0], [1.6673212441E12, 160.0], [1.6673212523E12, 150.0], [1.6673212521E12, 140.0], [1.6673187468E12, 150.0], [1.667318755E12, 120.0], [1.667321244E12, 140.0], [1.6673212522E12, 160.0], [1.667318747E12, 150.0], [1.6673212438E12, 150.0], [1.667321252E12, 180.0], [1.6673187469E12, 150.0], [1.6673187551E12, 160.0], [1.6673212439E12, 170.0], [1.6673187553E12, 190.0], [1.6673187471E12, 180.0], [1.6673212437E12, 140.0], [1.6673212519E12, 190.0], [1.6673187552E12, 160.0], [1.6673187452E12, 180.0], [1.6673187534E12, 170.0], [1.6673212456E12, 160.0], [1.6673212538E12, 170.0], [1.6673187533E12, 150.0], [1.6673187451E12, 160.0], [1.6673187453E12, 160.0], [1.6673187535E12, 170.0], [1.6673212455E12, 150.0], [1.6673212537E12, 160.0], [1.6673187536E12, 120.0], [1.6673187454E12, 130.0], [1.6673212454E12, 180.0], [1.6673212536E12, 170.0], [1.6673212452E12, 150.0], [1.6673212534E12, 170.0], [1.6673187537E12, 180.0], [1.6673187455E12, 200.0], [1.6673212453E12, 160.0], [1.6673212535E12, 160.0], [1.6673187457E12, 160.0], [1.6673187539E12, 120.0], [1.6673212533E12, 140.0], [1.6673212451E12, 160.0], [1.6673187456E12, 120.0], [1.6673187538E12, 180.0], [1.667318754E12, 180.0], [1.6673187458E12, 150.0], [1.6673212532E12, 170.0], [1.667321245E12, 170.0], [1.6673212448E12, 120.0], [1.667321253E12, 170.0], [1.6673187541E12, 130.0], [1.6673187459E12, 150.0], [1.6673212449E12, 150.0], [1.6673212531E12, 170.0], [1.6673187461E12, 160.0], [1.6673187543E12, 140.0], [1.6673212447E12, 190.0], [1.6673212529E12, 160.0], [1.667318746E12, 140.0], [1.6673187542E12, 160.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673212548E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 60.0, "minX": 1.6673187426E12, "maxY": 200.0, "series": [{"data": [[1.6673212548E12, 100.0], [1.6673212466E12, 180.0], [1.6673187482E12, 150.0], [1.6673212467E12, 170.0], [1.6673187484E12, 170.0], [1.6673212465E12, 160.0], [1.6673212547E12, 110.0], [1.6673187483E12, 150.0], [1.6673187485E12, 150.0], [1.6673212464E12, 170.0], [1.6673212546E12, 140.0], [1.6673212544E12, 170.0], [1.6673187486E12, 160.0], [1.6673212463E12, 160.0], [1.6673212545E12, 160.0], [1.6673212461E12, 170.0], [1.6673212543E12, 160.0], [1.6673187487E12, 150.0], [1.6673212462E12, 150.0], [1.6673187489E12, 150.0], [1.667321246E12, 160.0], [1.6673212542E12, 130.0], [1.6673187488E12, 170.0], [1.667318749E12, 140.0], [1.6673212541E12, 180.0], [1.6673212459E12, 140.0], [1.6673212457E12, 180.0], [1.6673212539E12, 170.0], [1.6673187491E12, 170.0], [1.667321254E12, 160.0], [1.6673212458E12, 140.0], [1.6673187472E12, 130.0], [1.6673187554E12, 110.0], [1.6673212477E12, 180.0], [1.6673212475E12, 180.0], [1.6673187473E12, 160.0], [1.6673187555E12, 190.0], [1.6673212476E12, 160.0], [1.6673187475E12, 170.0], [1.6673212474E12, 160.0], [1.6673187556E12, 110.0], [1.6673187474E12, 140.0], [1.6673187476E12, 140.0], [1.6673212473E12, 150.0], [1.6673187477E12, 150.0], [1.6673212472E12, 180.0], [1.6673187479E12, 160.0], [1.667321247E12, 150.0], [1.6673187478E12, 140.0], [1.6673212471E12, 120.0], [1.667318748E12, 140.0], [1.6673212469E12, 150.0], [1.6673187481E12, 160.0], [1.6673212468E12, 130.0], [1.6673187503E12, 170.0], [1.6673212487E12, 170.0], [1.6673187504E12, 160.0], [1.6673212486E12, 200.0], [1.6673212484E12, 160.0], [1.6673187505E12, 140.0], [1.6673212485E12, 150.0], [1.6673187507E12, 150.0], [1.6673212483E12, 140.0], [1.6673187506E12, 170.0], [1.6673187508E12, 150.0], [1.6673187426E12, 80.0], [1.6673212482E12, 180.0], [1.667321248E12, 150.0], [1.6673187509E12, 130.0], [1.6673187427E12, 130.0], [1.6673212481E12, 160.0], [1.6673187429E12, 110.0], [1.6673187511E12, 140.0], [1.6673212479E12, 170.0], [1.6673187428E12, 120.0], [1.667318751E12, 180.0], [1.6673187512E12, 170.0], [1.667318743E12, 120.0], [1.6673212478E12, 150.0], [1.6673187493E12, 130.0], [1.6673212497E12, 150.0], [1.6673187492E12, 130.0], [1.6673187494E12, 140.0], [1.6673212496E12, 170.0], [1.6673187495E12, 180.0], [1.6673212495E12, 150.0], [1.6673212493E12, 150.0], [1.6673187496E12, 140.0], [1.6673212494E12, 170.0], [1.6673187498E12, 160.0], [1.6673212492E12, 150.0], [1.6673187497E12, 140.0], [1.6673187499E12, 160.0], [1.6673212491E12, 180.0], [1.6673212489E12, 140.0], [1.66731875E12, 130.0], [1.667321249E12, 130.0], [1.6673187502E12, 130.0], [1.6673212488E12, 140.0], [1.6673187501E12, 170.0], [1.6673212425E12, 140.0], [1.6673212507E12, 200.0], [1.6673187441E12, 130.0], [1.6673187523E12, 160.0], [1.6673212508E12, 130.0], [1.6673212426E12, 140.0], [1.6673187525E12, 140.0], [1.6673187443E12, 160.0], [1.6673212424E12, 140.0], [1.6673212506E12, 100.0], [1.6673187524E12, 150.0], [1.6673187442E12, 170.0], [1.6673187444E12, 180.0], [1.6673187526E12, 130.0], [1.6673212423E12, 150.0], [1.6673212505E12, 160.0], [1.6673187445E12, 140.0], [1.6673187527E12, 190.0], [1.6673212422E12, 140.0], [1.6673212504E12, 170.0], [1.6673187447E12, 160.0], [1.6673212502E12, 170.0], [1.6673187528E12, 160.0], [1.6673187446E12, 140.0], [1.6673212421E12, 60.0], [1.6673212503E12, 160.0], [1.6673187448E12, 170.0], [1.667318753E12, 200.0], [1.6673212501E12, 170.0], [1.6673187529E12, 130.0], [1.6673187449E12, 170.0], [1.6673187531E12, 130.0], [1.66732125E12, 160.0], [1.6673212498E12, 160.0], [1.6673187532E12, 170.0], [1.667318745E12, 160.0], [1.6673212499E12, 160.0], [1.6673187513E12, 170.0], [1.6673187431E12, 160.0], [1.6673212436E12, 150.0], [1.6673212518E12, 140.0], [1.6673212516E12, 180.0], [1.6673212434E12, 150.0], [1.6673187432E12, 180.0], [1.6673187514E12, 150.0], [1.6673212517E12, 130.0], [1.6673212435E12, 150.0], [1.6673187516E12, 170.0], [1.6673187434E12, 140.0], [1.6673212433E12, 140.0], [1.6673212515E12, 160.0], [1.6673187433E12, 130.0], [1.6673187515E12, 150.0], [1.6673187517E12, 150.0], [1.6673187435E12, 170.0], [1.6673212432E12, 180.0], [1.6673212514E12, 150.0], [1.6673212512E12, 170.0], [1.6673187436E12, 140.0], [1.6673187518E12, 140.0], [1.6673212431E12, 140.0], [1.6673212513E12, 170.0], [1.6673187438E12, 160.0], [1.6673212429E12, 120.0], [1.6673212511E12, 150.0], [1.6673187437E12, 170.0], [1.6673187519E12, 150.0], [1.667321243E12, 170.0], [1.6673187521E12, 140.0], [1.6673187439E12, 160.0], [1.6673212428E12, 140.0], [1.667321251E12, 160.0], [1.667318752E12, 190.0], [1.667318744E12, 160.0], [1.6673187522E12, 180.0], [1.6673212509E12, 160.0], [1.6673212427E12, 150.0], [1.6673187544E12, 140.0], [1.6673187462E12, 150.0], [1.6673212446E12, 180.0], [1.6673212528E12, 170.0], [1.6673187545E12, 170.0], [1.6673187463E12, 170.0], [1.6673212445E12, 130.0], [1.6673212527E12, 160.0], [1.6673212525E12, 170.0], [1.6673212443E12, 180.0], [1.6673187464E12, 160.0], [1.6673187546E12, 130.0], [1.6673212444E12, 150.0], [1.6673212526E12, 180.0], [1.6673187548E12, 140.0], [1.6673187466E12, 160.0], [1.6673212524E12, 150.0], [1.6673212442E12, 170.0], [1.6673187465E12, 150.0], [1.6673187547E12, 170.0], [1.6673187549E12, 160.0], [1.6673187467E12, 140.0], [1.6673212441E12, 160.0], [1.6673212523E12, 150.0], [1.6673212521E12, 140.0], [1.6673187468E12, 150.0], [1.667318755E12, 120.0], [1.667321244E12, 140.0], [1.6673212522E12, 160.0], [1.667318747E12, 150.0], [1.6673212438E12, 150.0], [1.667321252E12, 180.0], [1.6673187469E12, 150.0], [1.6673187551E12, 160.0], [1.6673212439E12, 170.0], [1.6673187553E12, 190.0], [1.6673187471E12, 180.0], [1.6673212437E12, 140.0], [1.6673212519E12, 190.0], [1.6673187552E12, 160.0], [1.6673187452E12, 180.0], [1.6673187534E12, 170.0], [1.6673212456E12, 160.0], [1.6673212538E12, 170.0], [1.6673187533E12, 150.0], [1.6673187451E12, 160.0], [1.6673187453E12, 160.0], [1.6673187535E12, 170.0], [1.6673212455E12, 150.0], [1.6673212537E12, 160.0], [1.6673187536E12, 120.0], [1.6673187454E12, 130.0], [1.6673212454E12, 180.0], [1.6673212536E12, 170.0], [1.6673212452E12, 150.0], [1.6673212534E12, 170.0], [1.6673187537E12, 180.0], [1.6673187455E12, 200.0], [1.6673212453E12, 160.0], [1.6673212535E12, 160.0], [1.6673187457E12, 160.0], [1.6673187539E12, 120.0], [1.6673212533E12, 140.0], [1.6673212451E12, 160.0], [1.6673187456E12, 120.0], [1.6673187538E12, 180.0], [1.667318754E12, 180.0], [1.6673187458E12, 150.0], [1.6673212532E12, 170.0], [1.667321245E12, 170.0], [1.6673212448E12, 120.0], [1.667321253E12, 170.0], [1.6673187541E12, 130.0], [1.6673187459E12, 150.0], [1.6673212449E12, 150.0], [1.6673212531E12, 170.0], [1.6673187461E12, 160.0], [1.6673187543E12, 140.0], [1.6673212447E12, 190.0], [1.6673212529E12, 160.0], [1.667318746E12, 140.0], [1.6673187542E12, 160.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673212548E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

