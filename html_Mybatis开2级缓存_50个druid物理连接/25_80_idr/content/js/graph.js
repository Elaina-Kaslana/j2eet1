/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 15.0, "minX": 0.0, "maxY": 424.0, "series": [{"data": [[0.0, 15.0], [0.1, 19.0], [0.2, 22.0], [0.3, 24.0], [0.4, 25.0], [0.5, 27.0], [0.6, 28.0], [0.7, 30.0], [0.8, 31.0], [0.9, 32.0], [1.0, 33.0], [1.1, 34.0], [1.2, 35.0], [1.3, 37.0], [1.4, 37.0], [1.5, 38.0], [1.6, 39.0], [1.7, 40.0], [1.8, 41.0], [1.9, 42.0], [2.0, 43.0], [2.1, 44.0], [2.2, 45.0], [2.3, 46.0], [2.4, 48.0], [2.5, 49.0], [2.6, 49.0], [2.7, 50.0], [2.8, 51.0], [2.9, 53.0], [3.0, 54.0], [3.1, 55.0], [3.2, 56.0], [3.3, 56.0], [3.4, 58.0], [3.5, 58.0], [3.6, 59.0], [3.7, 60.0], [3.8, 60.0], [3.9, 61.0], [4.0, 62.0], [4.1, 62.0], [4.2, 63.0], [4.3, 64.0], [4.4, 64.0], [4.5, 65.0], [4.6, 65.0], [4.7, 66.0], [4.8, 66.0], [4.9, 67.0], [5.0, 68.0], [5.1, 69.0], [5.2, 69.0], [5.3, 70.0], [5.4, 71.0], [5.5, 72.0], [5.6, 73.0], [5.7, 74.0], [5.8, 74.0], [5.9, 75.0], [6.0, 76.0], [6.1, 77.0], [6.2, 77.0], [6.3, 78.0], [6.4, 78.0], [6.5, 78.0], [6.6, 79.0], [6.7, 79.0], [6.8, 79.0], [6.9, 80.0], [7.0, 80.0], [7.1, 81.0], [7.2, 81.0], [7.3, 81.0], [7.4, 82.0], [7.5, 82.0], [7.6, 83.0], [7.7, 84.0], [7.8, 84.0], [7.9, 84.0], [8.0, 85.0], [8.1, 85.0], [8.2, 85.0], [8.3, 86.0], [8.4, 87.0], [8.5, 87.0], [8.6, 87.0], [8.7, 88.0], [8.8, 88.0], [8.9, 89.0], [9.0, 89.0], [9.1, 89.0], [9.2, 90.0], [9.3, 90.0], [9.4, 91.0], [9.5, 91.0], [9.6, 92.0], [9.7, 92.0], [9.8, 92.0], [9.9, 92.0], [10.0, 92.0], [10.1, 93.0], [10.2, 93.0], [10.3, 93.0], [10.4, 93.0], [10.5, 94.0], [10.6, 94.0], [10.7, 94.0], [10.8, 95.0], [10.9, 95.0], [11.0, 96.0], [11.1, 96.0], [11.2, 96.0], [11.3, 97.0], [11.4, 97.0], [11.5, 97.0], [11.6, 98.0], [11.7, 98.0], [11.8, 98.0], [11.9, 98.0], [12.0, 99.0], [12.1, 99.0], [12.2, 99.0], [12.3, 100.0], [12.4, 100.0], [12.5, 100.0], [12.6, 101.0], [12.7, 101.0], [12.8, 101.0], [12.9, 101.0], [13.0, 101.0], [13.1, 101.0], [13.2, 102.0], [13.3, 102.0], [13.4, 102.0], [13.5, 102.0], [13.6, 103.0], [13.7, 103.0], [13.8, 103.0], [13.9, 103.0], [14.0, 103.0], [14.1, 104.0], [14.2, 104.0], [14.3, 104.0], [14.4, 104.0], [14.5, 104.0], [14.6, 104.0], [14.7, 105.0], [14.8, 105.0], [14.9, 105.0], [15.0, 105.0], [15.1, 105.0], [15.2, 106.0], [15.3, 106.0], [15.4, 106.0], [15.5, 106.0], [15.6, 106.0], [15.7, 107.0], [15.8, 107.0], [15.9, 107.0], [16.0, 107.0], [16.1, 107.0], [16.2, 107.0], [16.3, 108.0], [16.4, 108.0], [16.5, 108.0], [16.6, 108.0], [16.7, 108.0], [16.8, 108.0], [16.9, 108.0], [17.0, 109.0], [17.1, 109.0], [17.2, 109.0], [17.3, 109.0], [17.4, 109.0], [17.5, 110.0], [17.6, 110.0], [17.7, 110.0], [17.8, 110.0], [17.9, 110.0], [18.0, 111.0], [18.1, 111.0], [18.2, 111.0], [18.3, 111.0], [18.4, 111.0], [18.5, 112.0], [18.6, 112.0], [18.7, 112.0], [18.8, 112.0], [18.9, 112.0], [19.0, 112.0], [19.1, 113.0], [19.2, 113.0], [19.3, 113.0], [19.4, 113.0], [19.5, 113.0], [19.6, 114.0], [19.7, 114.0], [19.8, 114.0], [19.9, 114.0], [20.0, 114.0], [20.1, 115.0], [20.2, 115.0], [20.3, 115.0], [20.4, 115.0], [20.5, 115.0], [20.6, 115.0], [20.7, 115.0], [20.8, 116.0], [20.9, 116.0], [21.0, 116.0], [21.1, 116.0], [21.2, 116.0], [21.3, 116.0], [21.4, 116.0], [21.5, 117.0], [21.6, 117.0], [21.7, 117.0], [21.8, 117.0], [21.9, 117.0], [22.0, 117.0], [22.1, 117.0], [22.2, 117.0], [22.3, 117.0], [22.4, 118.0], [22.5, 118.0], [22.6, 118.0], [22.7, 118.0], [22.8, 118.0], [22.9, 118.0], [23.0, 118.0], [23.1, 119.0], [23.2, 119.0], [23.3, 119.0], [23.4, 119.0], [23.5, 119.0], [23.6, 119.0], [23.7, 119.0], [23.8, 119.0], [23.9, 119.0], [24.0, 119.0], [24.1, 120.0], [24.2, 120.0], [24.3, 120.0], [24.4, 120.0], [24.5, 120.0], [24.6, 120.0], [24.7, 120.0], [24.8, 120.0], [24.9, 120.0], [25.0, 120.0], [25.1, 120.0], [25.2, 120.0], [25.3, 121.0], [25.4, 121.0], [25.5, 121.0], [25.6, 121.0], [25.7, 121.0], [25.8, 121.0], [25.9, 121.0], [26.0, 122.0], [26.1, 122.0], [26.2, 122.0], [26.3, 122.0], [26.4, 122.0], [26.5, 122.0], [26.6, 122.0], [26.7, 122.0], [26.8, 122.0], [26.9, 123.0], [27.0, 123.0], [27.1, 123.0], [27.2, 123.0], [27.3, 123.0], [27.4, 123.0], [27.5, 123.0], [27.6, 123.0], [27.7, 123.0], [27.8, 124.0], [27.9, 124.0], [28.0, 124.0], [28.1, 124.0], [28.2, 124.0], [28.3, 124.0], [28.4, 124.0], [28.5, 124.0], [28.6, 124.0], [28.7, 125.0], [28.8, 125.0], [28.9, 125.0], [29.0, 125.0], [29.1, 125.0], [29.2, 125.0], [29.3, 125.0], [29.4, 125.0], [29.5, 125.0], [29.6, 125.0], [29.7, 126.0], [29.8, 126.0], [29.9, 126.0], [30.0, 126.0], [30.1, 126.0], [30.2, 126.0], [30.3, 126.0], [30.4, 126.0], [30.5, 126.0], [30.6, 126.0], [30.7, 127.0], [30.8, 127.0], [30.9, 127.0], [31.0, 127.0], [31.1, 127.0], [31.2, 127.0], [31.3, 127.0], [31.4, 127.0], [31.5, 127.0], [31.6, 127.0], [31.7, 127.0], [31.8, 128.0], [31.9, 128.0], [32.0, 128.0], [32.1, 128.0], [32.2, 128.0], [32.3, 128.0], [32.4, 128.0], [32.5, 128.0], [32.6, 128.0], [32.7, 129.0], [32.8, 129.0], [32.9, 129.0], [33.0, 129.0], [33.1, 129.0], [33.2, 129.0], [33.3, 129.0], [33.4, 129.0], [33.5, 129.0], [33.6, 129.0], [33.7, 129.0], [33.8, 129.0], [33.9, 129.0], [34.0, 130.0], [34.1, 130.0], [34.2, 130.0], [34.3, 130.0], [34.4, 130.0], [34.5, 130.0], [34.6, 130.0], [34.7, 130.0], [34.8, 130.0], [34.9, 131.0], [35.0, 131.0], [35.1, 131.0], [35.2, 131.0], [35.3, 131.0], [35.4, 131.0], [35.5, 131.0], [35.6, 131.0], [35.7, 131.0], [35.8, 131.0], [35.9, 131.0], [36.0, 132.0], [36.1, 132.0], [36.2, 132.0], [36.3, 132.0], [36.4, 132.0], [36.5, 132.0], [36.6, 132.0], [36.7, 132.0], [36.8, 132.0], [36.9, 132.0], [37.0, 132.0], [37.1, 133.0], [37.2, 133.0], [37.3, 133.0], [37.4, 133.0], [37.5, 133.0], [37.6, 133.0], [37.7, 133.0], [37.8, 133.0], [37.9, 133.0], [38.0, 133.0], [38.1, 133.0], [38.2, 133.0], [38.3, 133.0], [38.4, 133.0], [38.5, 133.0], [38.6, 134.0], [38.7, 134.0], [38.8, 134.0], [38.9, 134.0], [39.0, 134.0], [39.1, 134.0], [39.2, 134.0], [39.3, 134.0], [39.4, 134.0], [39.5, 134.0], [39.6, 134.0], [39.7, 134.0], [39.8, 134.0], [39.9, 135.0], [40.0, 135.0], [40.1, 135.0], [40.2, 135.0], [40.3, 135.0], [40.4, 135.0], [40.5, 135.0], [40.6, 135.0], [40.7, 135.0], [40.8, 135.0], [40.9, 135.0], [41.0, 135.0], [41.1, 136.0], [41.2, 136.0], [41.3, 136.0], [41.4, 136.0], [41.5, 136.0], [41.6, 136.0], [41.7, 136.0], [41.8, 136.0], [41.9, 136.0], [42.0, 136.0], [42.1, 136.0], [42.2, 136.0], [42.3, 137.0], [42.4, 137.0], [42.5, 137.0], [42.6, 137.0], [42.7, 137.0], [42.8, 137.0], [42.9, 137.0], [43.0, 137.0], [43.1, 137.0], [43.2, 137.0], [43.3, 137.0], [43.4, 137.0], [43.5, 138.0], [43.6, 138.0], [43.7, 138.0], [43.8, 138.0], [43.9, 138.0], [44.0, 138.0], [44.1, 138.0], [44.2, 138.0], [44.3, 138.0], [44.4, 138.0], [44.5, 138.0], [44.6, 139.0], [44.7, 139.0], [44.8, 139.0], [44.9, 139.0], [45.0, 139.0], [45.1, 139.0], [45.2, 139.0], [45.3, 139.0], [45.4, 139.0], [45.5, 139.0], [45.6, 140.0], [45.7, 140.0], [45.8, 140.0], [45.9, 140.0], [46.0, 140.0], [46.1, 140.0], [46.2, 140.0], [46.3, 140.0], [46.4, 140.0], [46.5, 140.0], [46.6, 140.0], [46.7, 140.0], [46.8, 141.0], [46.9, 141.0], [47.0, 141.0], [47.1, 141.0], [47.2, 141.0], [47.3, 141.0], [47.4, 141.0], [47.5, 141.0], [47.6, 141.0], [47.7, 142.0], [47.8, 142.0], [47.9, 142.0], [48.0, 142.0], [48.1, 142.0], [48.2, 142.0], [48.3, 142.0], [48.4, 142.0], [48.5, 142.0], [48.6, 142.0], [48.7, 142.0], [48.8, 142.0], [48.9, 142.0], [49.0, 142.0], [49.1, 143.0], [49.2, 143.0], [49.3, 143.0], [49.4, 143.0], [49.5, 143.0], [49.6, 143.0], [49.7, 143.0], [49.8, 143.0], [49.9, 143.0], [50.0, 143.0], [50.1, 143.0], [50.2, 144.0], [50.3, 144.0], [50.4, 144.0], [50.5, 144.0], [50.6, 144.0], [50.7, 144.0], [50.8, 144.0], [50.9, 144.0], [51.0, 144.0], [51.1, 144.0], [51.2, 144.0], [51.3, 144.0], [51.4, 145.0], [51.5, 145.0], [51.6, 145.0], [51.7, 145.0], [51.8, 145.0], [51.9, 145.0], [52.0, 145.0], [52.1, 145.0], [52.2, 145.0], [52.3, 145.0], [52.4, 145.0], [52.5, 145.0], [52.6, 146.0], [52.7, 146.0], [52.8, 146.0], [52.9, 146.0], [53.0, 146.0], [53.1, 146.0], [53.2, 146.0], [53.3, 146.0], [53.4, 146.0], [53.5, 146.0], [53.6, 147.0], [53.7, 147.0], [53.8, 147.0], [53.9, 147.0], [54.0, 147.0], [54.1, 147.0], [54.2, 147.0], [54.3, 147.0], [54.4, 147.0], [54.5, 148.0], [54.6, 148.0], [54.7, 148.0], [54.8, 148.0], [54.9, 148.0], [55.0, 148.0], [55.1, 148.0], [55.2, 148.0], [55.3, 148.0], [55.4, 148.0], [55.5, 148.0], [55.6, 149.0], [55.7, 149.0], [55.8, 149.0], [55.9, 149.0], [56.0, 149.0], [56.1, 149.0], [56.2, 149.0], [56.3, 149.0], [56.4, 149.0], [56.5, 149.0], [56.6, 149.0], [56.7, 150.0], [56.8, 150.0], [56.9, 150.0], [57.0, 150.0], [57.1, 150.0], [57.2, 150.0], [57.3, 150.0], [57.4, 150.0], [57.5, 150.0], [57.6, 150.0], [57.7, 150.0], [57.8, 151.0], [57.9, 151.0], [58.0, 151.0], [58.1, 151.0], [58.2, 151.0], [58.3, 151.0], [58.4, 151.0], [58.5, 151.0], [58.6, 151.0], [58.7, 151.0], [58.8, 151.0], [58.9, 151.0], [59.0, 152.0], [59.1, 152.0], [59.2, 152.0], [59.3, 152.0], [59.4, 152.0], [59.5, 152.0], [59.6, 152.0], [59.7, 152.0], [59.8, 152.0], [59.9, 152.0], [60.0, 153.0], [60.1, 153.0], [60.2, 153.0], [60.3, 153.0], [60.4, 153.0], [60.5, 153.0], [60.6, 153.0], [60.7, 154.0], [60.8, 154.0], [60.9, 154.0], [61.0, 154.0], [61.1, 154.0], [61.2, 154.0], [61.3, 154.0], [61.4, 154.0], [61.5, 155.0], [61.6, 155.0], [61.7, 155.0], [61.8, 155.0], [61.9, 155.0], [62.0, 155.0], [62.1, 155.0], [62.2, 156.0], [62.3, 156.0], [62.4, 156.0], [62.5, 156.0], [62.6, 156.0], [62.7, 156.0], [62.8, 156.0], [62.9, 156.0], [63.0, 157.0], [63.1, 157.0], [63.2, 157.0], [63.3, 157.0], [63.4, 157.0], [63.5, 157.0], [63.6, 158.0], [63.7, 158.0], [63.8, 158.0], [63.9, 158.0], [64.0, 158.0], [64.1, 158.0], [64.2, 158.0], [64.3, 158.0], [64.4, 159.0], [64.5, 159.0], [64.6, 159.0], [64.7, 159.0], [64.8, 159.0], [64.9, 159.0], [65.0, 159.0], [65.1, 160.0], [65.2, 160.0], [65.3, 160.0], [65.4, 160.0], [65.5, 160.0], [65.6, 160.0], [65.7, 160.0], [65.8, 160.0], [65.9, 161.0], [66.0, 161.0], [66.1, 161.0], [66.2, 161.0], [66.3, 161.0], [66.4, 161.0], [66.5, 161.0], [66.6, 161.0], [66.7, 162.0], [66.8, 162.0], [66.9, 162.0], [67.0, 162.0], [67.1, 162.0], [67.2, 162.0], [67.3, 163.0], [67.4, 163.0], [67.5, 163.0], [67.6, 163.0], [67.7, 163.0], [67.8, 163.0], [67.9, 163.0], [68.0, 163.0], [68.1, 164.0], [68.2, 164.0], [68.3, 164.0], [68.4, 164.0], [68.5, 164.0], [68.6, 164.0], [68.7, 164.0], [68.8, 165.0], [68.9, 165.0], [69.0, 165.0], [69.1, 165.0], [69.2, 166.0], [69.3, 166.0], [69.4, 166.0], [69.5, 166.0], [69.6, 166.0], [69.7, 167.0], [69.8, 167.0], [69.9, 167.0], [70.0, 167.0], [70.1, 167.0], [70.2, 168.0], [70.3, 168.0], [70.4, 168.0], [70.5, 168.0], [70.6, 169.0], [70.7, 169.0], [70.8, 169.0], [70.9, 169.0], [71.0, 169.0], [71.1, 170.0], [71.2, 170.0], [71.3, 170.0], [71.4, 170.0], [71.5, 170.0], [71.6, 170.0], [71.7, 171.0], [71.8, 171.0], [71.9, 171.0], [72.0, 171.0], [72.1, 172.0], [72.2, 172.0], [72.3, 172.0], [72.4, 172.0], [72.5, 173.0], [72.6, 173.0], [72.7, 173.0], [72.8, 173.0], [72.9, 173.0], [73.0, 173.0], [73.1, 174.0], [73.2, 174.0], [73.3, 174.0], [73.4, 174.0], [73.5, 174.0], [73.6, 174.0], [73.7, 175.0], [73.8, 175.0], [73.9, 175.0], [74.0, 175.0], [74.1, 175.0], [74.2, 176.0], [74.3, 176.0], [74.4, 176.0], [74.5, 176.0], [74.6, 176.0], [74.7, 177.0], [74.8, 177.0], [74.9, 177.0], [75.0, 177.0], [75.1, 177.0], [75.2, 178.0], [75.3, 178.0], [75.4, 178.0], [75.5, 178.0], [75.6, 178.0], [75.7, 179.0], [75.8, 179.0], [75.9, 179.0], [76.0, 179.0], [76.1, 179.0], [76.2, 180.0], [76.3, 180.0], [76.4, 180.0], [76.5, 180.0], [76.6, 181.0], [76.7, 181.0], [76.8, 181.0], [76.9, 181.0], [77.0, 182.0], [77.1, 182.0], [77.2, 182.0], [77.3, 183.0], [77.4, 183.0], [77.5, 183.0], [77.6, 183.0], [77.7, 184.0], [77.8, 184.0], [77.9, 184.0], [78.0, 184.0], [78.1, 184.0], [78.2, 185.0], [78.3, 185.0], [78.4, 185.0], [78.5, 186.0], [78.6, 186.0], [78.7, 186.0], [78.8, 186.0], [78.9, 187.0], [79.0, 187.0], [79.1, 187.0], [79.2, 187.0], [79.3, 188.0], [79.4, 188.0], [79.5, 188.0], [79.6, 188.0], [79.7, 189.0], [79.8, 189.0], [79.9, 189.0], [80.0, 189.0], [80.1, 189.0], [80.2, 189.0], [80.3, 190.0], [80.4, 190.0], [80.5, 191.0], [80.6, 191.0], [80.7, 191.0], [80.8, 192.0], [80.9, 192.0], [81.0, 192.0], [81.1, 193.0], [81.2, 193.0], [81.3, 193.0], [81.4, 193.0], [81.5, 194.0], [81.6, 194.0], [81.7, 194.0], [81.8, 194.0], [81.9, 195.0], [82.0, 195.0], [82.1, 196.0], [82.2, 196.0], [82.3, 196.0], [82.4, 197.0], [82.5, 197.0], [82.6, 198.0], [82.7, 198.0], [82.8, 199.0], [82.9, 199.0], [83.0, 199.0], [83.1, 199.0], [83.2, 199.0], [83.3, 200.0], [83.4, 200.0], [83.5, 200.0], [83.6, 200.0], [83.7, 201.0], [83.8, 201.0], [83.9, 201.0], [84.0, 201.0], [84.1, 202.0], [84.2, 202.0], [84.3, 202.0], [84.4, 202.0], [84.5, 203.0], [84.6, 203.0], [84.7, 203.0], [84.8, 204.0], [84.9, 204.0], [85.0, 205.0], [85.1, 205.0], [85.2, 205.0], [85.3, 205.0], [85.4, 206.0], [85.5, 207.0], [85.6, 207.0], [85.7, 208.0], [85.8, 208.0], [85.9, 208.0], [86.0, 208.0], [86.1, 208.0], [86.2, 209.0], [86.3, 210.0], [86.4, 210.0], [86.5, 210.0], [86.6, 211.0], [86.7, 211.0], [86.8, 211.0], [86.9, 212.0], [87.0, 212.0], [87.1, 213.0], [87.2, 213.0], [87.3, 213.0], [87.4, 214.0], [87.5, 214.0], [87.6, 215.0], [87.7, 215.0], [87.8, 216.0], [87.9, 216.0], [88.0, 216.0], [88.1, 216.0], [88.2, 217.0], [88.3, 218.0], [88.4, 218.0], [88.5, 218.0], [88.6, 219.0], [88.7, 219.0], [88.8, 219.0], [88.9, 220.0], [89.0, 220.0], [89.1, 220.0], [89.2, 221.0], [89.3, 221.0], [89.4, 222.0], [89.5, 223.0], [89.6, 224.0], [89.7, 224.0], [89.8, 224.0], [89.9, 225.0], [90.0, 226.0], [90.1, 226.0], [90.2, 227.0], [90.3, 227.0], [90.4, 228.0], [90.5, 229.0], [90.6, 229.0], [90.7, 230.0], [90.8, 230.0], [90.9, 231.0], [91.0, 232.0], [91.1, 232.0], [91.2, 233.0], [91.3, 234.0], [91.4, 235.0], [91.5, 236.0], [91.6, 237.0], [91.7, 237.0], [91.8, 238.0], [91.9, 239.0], [92.0, 240.0], [92.1, 240.0], [92.2, 240.0], [92.3, 241.0], [92.4, 241.0], [92.5, 242.0], [92.6, 243.0], [92.7, 244.0], [92.8, 244.0], [92.9, 245.0], [93.0, 245.0], [93.1, 246.0], [93.2, 246.0], [93.3, 247.0], [93.4, 247.0], [93.5, 248.0], [93.6, 248.0], [93.7, 249.0], [93.8, 249.0], [93.9, 250.0], [94.0, 251.0], [94.1, 251.0], [94.2, 252.0], [94.3, 252.0], [94.4, 252.0], [94.5, 253.0], [94.6, 254.0], [94.7, 254.0], [94.8, 254.0], [94.9, 256.0], [95.0, 256.0], [95.1, 257.0], [95.2, 258.0], [95.3, 258.0], [95.4, 259.0], [95.5, 260.0], [95.6, 260.0], [95.7, 261.0], [95.8, 261.0], [95.9, 262.0], [96.0, 263.0], [96.1, 265.0], [96.2, 265.0], [96.3, 266.0], [96.4, 266.0], [96.5, 268.0], [96.6, 268.0], [96.7, 269.0], [96.8, 270.0], [96.9, 270.0], [97.0, 270.0], [97.1, 271.0], [97.2, 272.0], [97.3, 273.0], [97.4, 275.0], [97.5, 277.0], [97.6, 278.0], [97.7, 279.0], [97.8, 280.0], [97.9, 281.0], [98.0, 284.0], [98.1, 285.0], [98.2, 286.0], [98.3, 288.0], [98.4, 289.0], [98.5, 290.0], [98.6, 293.0], [98.7, 295.0], [98.8, 297.0], [98.9, 300.0], [99.0, 302.0], [99.1, 306.0], [99.2, 308.0], [99.3, 312.0], [99.4, 317.0], [99.5, 327.0], [99.6, 343.0], [99.7, 349.0], [99.8, 373.0], [99.9, 384.0], [100.0, 424.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 2839.0, "series": [{"data": [[0.0, 492.0], [300.0, 45.0], [100.0, 2839.0], [200.0, 623.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 4000.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 4000.0, "series": [{"data": [[0.0, 4000.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 4.9E-324, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.6673186733E12, "maxY": 25.0, "series": [{"data": [[1.6673186745E12, 25.0], [1.6673211893E12, 25.0], [1.6673186827E12, 25.0], [1.6673211811E12, 25.0], [1.6673186746E12, 25.0], [1.6673186828E12, 25.0], [1.6673211892E12, 25.0], [1.667321181E12, 25.0], [1.667318683E12, 25.0], [1.6673186748E12, 25.0], [1.6673211808E12, 25.0], [1.667321189E12, 25.0], [1.6673186747E12, 25.0], [1.6673186829E12, 25.0], [1.6673211809E12, 25.0], [1.6673211891E12, 25.0], [1.6673211807E12, 25.0], [1.6673186831E12, 25.0], [1.6673186749E12, 25.0], [1.6673211889E12, 25.0], [1.6673211806E12, 25.0], [1.6673186832E12, 25.0], [1.667318675E12, 25.0], [1.6673211888E12, 25.0], [1.6673211805E12, 25.0], [1.6673211887E12, 25.0], [1.6673186833E12, 25.0], [1.6673186751E12, 25.0], [1.6673186753E12, 25.0], [1.6673211885E12, 25.0], [1.6673186835E12, 25.0], [1.6673211803E12, 25.0], [1.6673186752E12, 25.0], [1.6673211804E12, 25.0], [1.6673211886E12, 25.0], [1.6673186834E12, 25.0], [1.6673186754E12, 25.0], [1.6673186836E12, 25.0], [1.6673211884E12, 25.0], [1.6673211802E12, 25.0], [1.6673211821E12, 25.0], [1.6673211903E12, 21.949999999999996], [1.6673186817E12, 25.0], [1.6673186735E12, 14.142857142857142], [1.6673211822E12, 25.0], [1.6673186816E12, 25.0], [1.6673186736E12, 17.200000000000003], [1.667321182E12, 25.0], [1.6673211902E12, 23.0], [1.6673186818E12, 25.0], [1.6673186737E12, 19.875], [1.6673211901E12, 23.0], [1.6673186819E12, 25.0], [1.6673211819E12, 25.0], [1.6673186739E12, 24.583333333333336], [1.6673186821E12, 25.0], [1.6673211817E12, 25.0], [1.6673211899E12, 23.0], [1.6673186738E12, 22.166666666666664], [1.667318682E12, 25.0], [1.66732119E12, 23.0], [1.6673211818E12, 25.0], [1.6673186822E12, 25.0], [1.667318674E12, 25.0], [1.6673211816E12, 25.0], [1.6673211898E12, 23.0], [1.6673211815E12, 25.0], [1.6673186823E12, 25.0], [1.6673186741E12, 25.0], [1.6673211897E12, 23.0], [1.6673186743E12, 25.0], [1.6673211814E12, 25.0], [1.6673186824E12, 25.0], [1.6673186742E12, 25.0], [1.6673211896E12, 23.941176470588236], [1.6673186744E12, 25.0], [1.6673211812E12, 25.0], [1.6673211894E12, 25.0], [1.6673186826E12, 25.0], [1.6673211813E12, 25.0], [1.6673211895E12, 24.473684210526315], [1.6673186825E12, 25.0], [1.6673186766E12, 25.0], [1.6673186847E12, 25.0], [1.6673186765E12, 25.0], [1.6673211832E12, 25.0], [1.667321183E12, 25.0], [1.6673186849E12, 24.0], [1.6673186767E12, 25.0], [1.6673211831E12, 25.0], [1.6673186848E12, 24.0], [1.6673186768E12, 25.0], [1.6673211829E12, 25.0], [1.6673211911E12, 1.5], [1.667318685E12, 23.666666666666668], [1.6673186769E12, 25.0], [1.6673211828E12, 25.0], [1.667321191E12, 5.222222222222221], [1.6673186851E12, 23.0], [1.6673186771E12, 25.0], [1.6673186853E12, 19.0], [1.6673211908E12, 12.941176470588237], [1.6673211826E12, 25.0], [1.667318677E12, 25.0], [1.6673186852E12, 20.949999999999992], [1.6673211909E12, 8.764705882352942], [1.6673211827E12, 25.0], [1.6673186854E12, 18.666666666666668], [1.6673186772E12, 25.0], [1.6673211825E12, 25.0], [1.6673211907E12, 16.0], [1.6673186855E12, 17.642857142857142], [1.6673186773E12, 25.0], [1.6673211824E12, 25.0], [1.6673211906E12, 18.94736842105263], [1.6673186775E12, 25.0], [1.6673211904E12, 20.066666666666666], [1.6673211823E12, 25.0], [1.6673186856E12, 16.176470588235293], [1.6673186774E12, 25.0], [1.6673211905E12, 20.0], [1.6673186755E12, 25.0], [1.6673186837E12, 25.0], [1.6673211842E12, 25.0], [1.6673186839E12, 25.0], [1.6673186757E12, 25.0], [1.667321184E12, 25.0], [1.6673186838E12, 25.0], [1.6673186756E12, 25.0], [1.6673211841E12, 25.0], [1.6673211839E12, 25.0], [1.667318684E12, 25.0], [1.6673186758E12, 25.0], [1.6673211838E12, 25.0], [1.6673186841E12, 25.0], [1.6673186759E12, 25.0], [1.667318676E12, 25.0], [1.6673211837E12, 25.0], [1.6673186842E12, 25.0], [1.6673186762E12, 25.0], [1.6673186844E12, 25.0], [1.6673211835E12, 25.0], [1.6673186761E12, 25.0], [1.6673211836E12, 25.0], [1.6673186843E12, 25.0], [1.6673186763E12, 25.0], [1.6673186845E12, 25.0], [1.6673211834E12, 25.0], [1.6673186846E12, 25.0], [1.6673186764E12, 25.0], [1.6673211833E12, 25.0], [1.6673211852E12, 25.0], [1.6673186786E12, 25.0], [1.6673186787E12, 25.0], [1.6673211851E12, 25.0], [1.6673186789E12, 25.0], [1.6673211849E12, 25.0], [1.6673186788E12, 25.0], [1.667321185E12, 25.0], [1.667318679E12, 25.0], [1.6673211848E12, 25.0], [1.6673211847E12, 25.0], [1.6673186791E12, 25.0], [1.6673211846E12, 25.0], [1.6673186792E12, 25.0], [1.6673211844E12, 25.0], [1.6673186794E12, 25.0], [1.6673211845E12, 25.0], [1.6673186793E12, 25.0], [1.6673186795E12, 25.0], [1.6673211843E12, 25.0], [1.6673211862E12, 25.0], [1.6673186776E12, 25.0], [1.6673186858E12, 11.071428571428571], [1.6673211863E12, 25.0], [1.6673186857E12, 13.352941176470589], [1.6673211861E12, 25.0], [1.6673186777E12, 25.0], [1.6673186859E12, 8.133333333333335], [1.667318686E12, 5.388888888888888], [1.667321186E12, 25.0], [1.6673186778E12, 25.0], [1.667318678E12, 25.0], [1.6673211858E12, 25.0], [1.6673186861E12, 1.0], [1.6673186779E12, 25.0], [1.6673211859E12, 25.0], [1.6673186781E12, 25.0], [1.6673211857E12, 25.0], [1.6673186782E12, 25.0], [1.6673211856E12, 25.0], [1.6673211855E12, 25.0], [1.6673186783E12, 25.0], [1.6673211853E12, 25.0], [1.6673186785E12, 25.0], [1.6673211854E12, 25.0], [1.6673186784E12, 25.0], [1.6673186807E12, 25.0], [1.6673211872E12, 25.0], [1.6673211791E12, 25.0], [1.6673186806E12, 25.0], [1.6673211873E12, 25.0], [1.6673211789E12, 20.75], [1.6673211871E12, 25.0], [1.6673186808E12, 25.0], [1.667321179E12, 23.625], [1.6673211788E12, 18.461538461538467], [1.667321187E12, 25.0], [1.6673186809E12, 25.0], [1.6673211869E12, 25.0], [1.667318681E12, 25.0], [1.6673211787E12, 15.733333333333333], [1.6673186812E12, 25.0], [1.6673211785E12, 10.0], [1.6673211867E12, 25.0], [1.6673211868E12, 25.0], [1.6673186811E12, 25.0], [1.6673211786E12, 12.384615384615385], [1.6673186813E12, 25.0], [1.6673211784E12, 8.0], [1.6673211866E12, 25.0], [1.6673186814E12, 25.0], [1.6673211865E12, 25.0], [1.6673186734E12, 12.230769230769232], [1.6673186815E12, 25.0], [1.6673186733E12, 9.647058823529411], [1.6673211864E12, 25.0], [1.6673186796E12, 25.0], [1.6673211801E12, 25.0], [1.6673211883E12, 25.0], [1.6673186798E12, 25.0], [1.6673211881E12, 25.0], [1.6673186797E12, 25.0], [1.66732118E12, 25.0], [1.6673211882E12, 25.0], [1.6673211798E12, 25.0], [1.6673186799E12, 25.0], [1.667321188E12, 25.0], [1.6673211799E12, 25.0], [1.6673211797E12, 25.0], [1.6673211879E12, 25.0], [1.66731868E12, 25.0], [1.6673211796E12, 25.0], [1.6673211878E12, 25.0], [1.6673186801E12, 25.0], [1.6673211876E12, 25.0], [1.6673186803E12, 25.0], [1.6673211794E12, 25.0], [1.6673211877E12, 25.0], [1.6673186802E12, 25.0], [1.6673211795E12, 25.0], [1.6673186804E12, 25.0], [1.6673211793E12, 25.0], [1.6673211875E12, 25.0], [1.6673186805E12, 25.0], [1.6673211792E12, 25.0], [1.6673211874E12, 25.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673211911E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.0, "maxY": 158.92047832586007, "series": [{"data": [[2.0, 21.8], [3.0, 24.25], [4.0, 34.4], [5.0, 37.142857142857146], [6.0, 46.0], [7.0, 54.909090909090914], [8.0, 66.81818181818183], [9.0, 85.0], [10.0, 60.71428571428571], [11.0, 76.99999999999999], [12.0, 77.68181818181817], [13.0, 91.46666666666667], [14.0, 96.00000000000001], [15.0, 84.53333333333333], [16.0, 108.67741935483869], [1.0, 20.0], [17.0, 117.5263157894737], [18.0, 122.44117647058822], [19.0, 115.96551724137932], [20.0, 130.6326530612244], [21.0, 122.73913043478261], [22.0, 122.19047619047618], [23.0, 141.81159420289853], [24.0, 148.92499999999995], [25.0, 158.92047832586007]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[23.795750000000037, 151.39675000000005]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 25.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 4790.0, "minX": 1.6673186733E12, "maxY": 208830.0, "series": [{"data": [[1.6673186745E12, 134380.0], [1.6673211893E12, 173140.0], [1.6673186827E12, 122870.0], [1.6673211811E12, 156730.0], [1.6673186746E12, 148010.0], [1.6673186828E12, 134310.0], [1.6673211892E12, 143060.0], [1.667321181E12, 117310.0], [1.667318683E12, 143940.0], [1.6673186748E12, 138100.0], [1.6673211808E12, 84630.0], [1.667321189E12, 126620.0], [1.6673186747E12, 149940.0], [1.6673186829E12, 137860.0], [1.6673211809E12, 186340.0], [1.6673211891E12, 127320.0], [1.6673211807E12, 134240.0], [1.6673186831E12, 127500.0], [1.6673186749E12, 172830.0], [1.6673211889E12, 141790.0], [1.6673211806E12, 130990.0], [1.6673186832E12, 103010.0], [1.667318675E12, 148330.0], [1.6673211888E12, 157900.0], [1.6673211805E12, 113690.0], [1.6673211887E12, 161620.0], [1.6673186833E12, 153910.0], [1.6673186751E12, 121020.0], [1.6673186753E12, 110660.0], [1.6673211885E12, 139970.0], [1.6673186835E12, 151430.0], [1.6673211803E12, 134150.0], [1.6673186752E12, 129910.0], [1.6673211804E12, 161140.0], [1.6673211886E12, 132350.0], [1.6673186834E12, 133960.0], [1.6673186754E12, 155870.0], [1.6673186836E12, 145720.0], [1.6673211884E12, 165100.0], [1.6673211802E12, 160210.0], [1.6673211821E12, 154570.0], [1.6673211903E12, 177620.0], [1.6673186817E12, 138790.0], [1.6673186735E12, 65900.0], [1.6673211822E12, 121630.0], [1.6673186816E12, 124030.0], [1.6673186736E12, 147070.0], [1.667321182E12, 145720.0], [1.6673211902E12, 140900.0], [1.6673186818E12, 142400.0], [1.6673186737E12, 145880.0], [1.6673211901E12, 161910.0], [1.6673186819E12, 159160.0], [1.6673211819E12, 138470.0], [1.6673186739E12, 105630.0], [1.6673186821E12, 151270.0], [1.6673211817E12, 152620.0], [1.6673211899E12, 146020.0], [1.6673186738E12, 107150.0], [1.667318682E12, 103320.0], [1.66732119E12, 140210.0], [1.6673211818E12, 131490.0], [1.6673186822E12, 108590.0], [1.667318674E12, 117000.0], [1.6673211816E12, 135970.0], [1.6673211898E12, 147040.0], [1.6673211815E12, 134900.0], [1.6673186823E12, 111040.0], [1.6673186741E12, 151030.0], [1.6673211897E12, 130110.0], [1.6673186743E12, 139130.0], [1.6673211814E12, 186410.0], [1.6673186824E12, 170310.0], [1.6673186742E12, 115070.0], [1.6673211896E12, 155630.0], [1.6673186744E12, 169150.0], [1.6673211812E12, 166230.0], [1.6673211894E12, 133510.0], [1.6673186826E12, 134070.0], [1.6673211813E12, 118710.0], [1.6673211895E12, 170130.0], [1.6673186825E12, 133610.0], [1.6673186766E12, 128830.0], [1.6673186847E12, 113130.0], [1.6673186765E12, 143220.0], [1.6673211832E12, 119950.0], [1.667321183E12, 161320.0], [1.6673186849E12, 148770.0], [1.6673186767E12, 144880.0], [1.6673211831E12, 136070.0], [1.6673186848E12, 156490.0], [1.6673186768E12, 154810.0], [1.6673211829E12, 160210.0], [1.6673211911E12, 35910.0], [1.667318685E12, 161790.0], [1.6673186769E12, 134780.0], [1.6673211828E12, 111730.0], [1.667321191E12, 161370.0], [1.6673186851E12, 130020.0], [1.6673186771E12, 134510.0], [1.6673186853E12, 141670.0], [1.6673211908E12, 149790.0], [1.6673211826E12, 174840.0], [1.667318677E12, 124300.0], [1.6673186852E12, 174000.0], [1.6673211909E12, 149270.0], [1.6673211827E12, 142220.0], [1.6673186854E12, 163260.0], [1.6673186772E12, 142430.0], [1.6673211825E12, 158090.0], [1.6673211907E12, 155880.0], [1.6673186855E12, 131090.0], [1.6673186773E12, 137180.0], [1.6673211824E12, 97820.0], [1.6673211906E12, 171200.0], [1.6673186775E12, 140290.0], [1.6673211904E12, 130370.0], [1.6673211823E12, 183690.0], [1.6673186856E12, 157890.0], [1.6673186774E12, 90690.0], [1.6673211905E12, 144650.0], [1.6673186755E12, 190840.0], [1.6673186837E12, 164920.0], [1.6673211842E12, 130230.0], [1.6673186839E12, 156040.0], [1.6673186757E12, 190900.0], [1.667321184E12, 146550.0], [1.6673186838E12, 125170.0], [1.6673186756E12, 142450.0], [1.6673211841E12, 145330.0], [1.6673211839E12, 115640.0], [1.667318684E12, 129870.0], [1.6673186758E12, 114300.0], [1.6673211838E12, 140770.0], [1.6673186841E12, 157810.0], [1.6673186759E12, 125410.0], [1.667318676E12, 147390.0], [1.6673211837E12, 167280.0], [1.6673186842E12, 118950.0], [1.6673186762E12, 182000.0], [1.6673186844E12, 148330.0], [1.6673211835E12, 98300.0], [1.6673186761E12, 112930.0], [1.6673211836E12, 180520.0], [1.6673186843E12, 151570.0], [1.6673186763E12, 80780.0], [1.6673186845E12, 129620.0], [1.6673211834E12, 141140.0], [1.6673186846E12, 136550.0], [1.6673186764E12, 208830.0], [1.6673211833E12, 149230.0], [1.6673211852E12, 145850.0], [1.6673186786E12, 189590.0], [1.6673186787E12, 80210.0], [1.6673211851E12, 148420.0], [1.6673186789E12, 112130.0], [1.6673211849E12, 135200.0], [1.6673186788E12, 172180.0], [1.667321185E12, 120470.0], [1.667318679E12, 143090.0], [1.6673211848E12, 153860.0], [1.6673211847E12, 188300.0], [1.6673186791E12, 157610.0], [1.6673211846E12, 61950.0], [1.6673186792E12, 44480.0], [1.6673211844E12, 162540.0], [1.6673186794E12, 114220.0], [1.6673211845E12, 131240.0], [1.6673186793E12, 194360.0], [1.6673186795E12, 147870.0], [1.6673211843E12, 149160.0], [1.6673211862E12, 136690.0], [1.6673186776E12, 161000.0], [1.6673186858E12, 128790.0], [1.6673211863E12, 182360.0], [1.6673186857E12, 155370.0], [1.6673211861E12, 147770.0], [1.6673186777E12, 170530.0], [1.6673186859E12, 136640.0], [1.667318686E12, 175110.0], [1.667321186E12, 105670.0], [1.6673186778E12, 129760.0], [1.667318678E12, 130870.0], [1.6673211858E12, 188140.0], [1.6673186861E12, 9320.0], [1.6673186779E12, 151950.0], [1.6673211859E12, 192140.0], [1.6673186781E12, 93120.0], [1.6673211857E12, 76240.0], [1.6673186782E12, 189060.0], [1.6673211856E12, 124170.0], [1.6673211855E12, 159890.0], [1.6673186783E12, 146220.0], [1.6673211853E12, 141570.0], [1.6673186785E12, 116050.0], [1.6673211854E12, 139320.0], [1.6673186784E12, 144540.0], [1.6673186807E12, 169700.0], [1.6673211872E12, 119820.0], [1.6673211791E12, 145800.0], [1.6673186806E12, 148850.0], [1.6673211873E12, 139520.0], [1.6673211789E12, 136140.0], [1.6673211871E12, 129410.0], [1.6673186808E12, 137030.0], [1.667321179E12, 135780.0], [1.6673211788E12, 113120.0], [1.667321187E12, 165270.0], [1.6673186809E12, 130140.0], [1.6673211869E12, 139290.0], [1.667318681E12, 138560.0], [1.6673211787E12, 133870.0], [1.6673186812E12, 108220.0], [1.6673211785E12, 104330.0], [1.6673211867E12, 159690.0], [1.6673211868E12, 108250.0], [1.6673186811E12, 133780.0], [1.6673211786E12, 119530.0], [1.6673186813E12, 156190.0], [1.6673211784E12, 64000.0], [1.6673211866E12, 114310.0], [1.6673186814E12, 163070.0], [1.6673211865E12, 135400.0], [1.6673186734E12, 121980.0], [1.6673186815E12, 106120.0], [1.6673186733E12, 144540.0], [1.6673211864E12, 148360.0], [1.6673186796E12, 132190.0], [1.6673211801E12, 147000.0], [1.6673211883E12, 124760.0], [1.6673186798E12, 127920.0], [1.6673211881E12, 140380.0], [1.6673186797E12, 198840.0], [1.66732118E12, 183620.0], [1.6673211882E12, 161550.0], [1.6673211798E12, 140200.0], [1.6673186799E12, 95290.0], [1.667321188E12, 148170.0], [1.6673211799E12, 104280.0], [1.6673211797E12, 93870.0], [1.6673211879E12, 136160.0], [1.66731868E12, 153720.0], [1.6673211796E12, 124650.0], [1.6673211878E12, 108030.0], [1.6673186801E12, 112510.0], [1.6673211876E12, 150550.0], [1.6673186803E12, 181480.0], [1.6673211794E12, 129340.0], [1.6673211877E12, 115530.0], [1.6673186802E12, 120420.0], [1.6673211795E12, 144930.0], [1.6673186804E12, 168470.0], [1.6673211793E12, 103980.0], [1.6673211875E12, 109070.0], [1.6673186805E12, 142010.0], [1.6673211792E12, 133120.0], [1.6673211874E12, 160560.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6673186745E12, 76640.0], [1.6673211893E12, 95800.0], [1.6673186827E12, 67060.0], [1.6673211811E12, 86220.0], [1.6673186746E12, 81430.0], [1.6673186828E12, 71850.0], [1.6673211892E12, 76640.0], [1.667321181E12, 57480.0], [1.667318683E12, 81430.0], [1.6673186748E12, 71850.0], [1.6673211808E12, 47900.0], [1.667321189E12, 67060.0], [1.6673186747E12, 81430.0], [1.6673186829E12, 76640.0], [1.6673211809E12, 100590.0], [1.6673211891E12, 67060.0], [1.6673211807E12, 71850.0], [1.6673186831E12, 67060.0], [1.6673186749E12, 91010.0], [1.6673211889E12, 76640.0], [1.6673211806E12, 71850.0], [1.6673186832E12, 57480.0], [1.667318675E12, 81430.0], [1.6673211888E12, 86220.0], [1.6673211805E12, 62270.0], [1.6673211887E12, 81430.0], [1.6673186833E12, 81430.0], [1.6673186751E12, 71850.0], [1.6673186753E12, 62270.0], [1.6673211885E12, 76640.0], [1.6673186835E12, 81430.0], [1.6673211803E12, 71850.0], [1.6673186752E12, 67060.0], [1.6673211804E12, 91010.0], [1.6673211886E12, 71850.0], [1.6673186834E12, 71850.0], [1.6673186754E12, 86220.0], [1.6673186836E12, 76640.0], [1.6673211884E12, 86220.0], [1.6673211802E12, 86220.0], [1.6673211821E12, 81430.0], [1.6673211903E12, 95800.0], [1.6673186817E12, 71850.0], [1.6673186735E12, 33530.0], [1.6673211822E12, 67060.0], [1.6673186816E12, 67060.0], [1.6673186736E12, 71850.0], [1.667321182E12, 76640.0], [1.6673211902E12, 71850.0], [1.6673186818E12, 76640.0], [1.6673186737E12, 76640.0], [1.6673211901E12, 86220.0], [1.6673186819E12, 86220.0], [1.6673211819E12, 76640.0], [1.6673186739E12, 57480.0], [1.6673186821E12, 81430.0], [1.6673211817E12, 81430.0], [1.6673211899E12, 76640.0], [1.6673186738E12, 57480.0], [1.667318682E12, 57480.0], [1.66732119E12, 71850.0], [1.6673211818E12, 67060.0], [1.6673186822E12, 62270.0], [1.667318674E12, 67060.0], [1.6673211816E12, 76640.0], [1.6673211898E12, 76640.0], [1.6673211815E12, 71850.0], [1.6673186823E12, 57480.0], [1.6673186741E12, 81430.0], [1.6673211897E12, 67060.0], [1.6673186743E12, 71850.0], [1.6673211814E12, 100590.0], [1.6673186824E12, 91010.0], [1.6673186742E12, 67060.0], [1.6673211896E12, 81430.0], [1.6673186744E12, 91010.0], [1.6673211812E12, 86220.0], [1.6673211894E12, 71850.0], [1.6673186826E12, 71850.0], [1.6673211813E12, 67060.0], [1.6673211895E12, 91010.0], [1.6673186825E12, 71850.0], [1.6673186766E12, 67060.0], [1.6673186847E12, 57480.0], [1.6673186765E12, 81430.0], [1.6673211832E12, 67060.0], [1.667321183E12, 91010.0], [1.6673186849E12, 81430.0], [1.6673186767E12, 81430.0], [1.6673211831E12, 71850.0], [1.6673186848E12, 81430.0], [1.6673186768E12, 81430.0], [1.6673211829E12, 86220.0], [1.6673211911E12, 19160.0], [1.667318685E12, 86220.0], [1.6673186769E12, 71850.0], [1.6673211828E12, 57480.0], [1.667321191E12, 86220.0], [1.6673186851E12, 67060.0], [1.6673186771E12, 81430.0], [1.6673186853E12, 76640.0], [1.6673211908E12, 81430.0], [1.6673211826E12, 91010.0], [1.667318677E12, 67060.0], [1.6673186852E12, 95800.0], [1.6673211909E12, 81430.0], [1.6673211827E12, 76640.0], [1.6673186854E12, 86220.0], [1.6673186772E12, 81430.0], [1.6673211825E12, 86220.0], [1.6673211907E12, 86220.0], [1.6673186855E12, 67060.0], [1.6673186773E12, 76640.0], [1.6673211824E12, 57480.0], [1.6673211906E12, 91010.0], [1.6673186775E12, 76640.0], [1.6673211904E12, 71850.0], [1.6673211823E12, 95800.0], [1.6673186856E12, 81430.0], [1.6673186774E12, 47900.0], [1.6673211905E12, 81430.0], [1.6673186755E12, 100590.0], [1.6673186837E12, 86220.0], [1.6673211842E12, 67060.0], [1.6673186839E12, 81430.0], [1.6673186757E12, 100590.0], [1.667321184E12, 81430.0], [1.6673186838E12, 67060.0], [1.6673186756E12, 76640.0], [1.6673211841E12, 76640.0], [1.6673211839E12, 62270.0], [1.667318684E12, 67060.0], [1.6673186758E12, 62270.0], [1.6673211838E12, 81430.0], [1.6673186841E12, 91010.0], [1.6673186759E12, 67060.0], [1.667318676E12, 76640.0], [1.6673211837E12, 91010.0], [1.6673186842E12, 62270.0], [1.6673186762E12, 95800.0], [1.6673186844E12, 76640.0], [1.6673211835E12, 52690.0], [1.6673186761E12, 62270.0], [1.6673211836E12, 91010.0], [1.6673186843E12, 81430.0], [1.6673186763E12, 43110.0], [1.6673186845E12, 71850.0], [1.6673211834E12, 76640.0], [1.6673186846E12, 76640.0], [1.6673186764E12, 114960.0], [1.6673211833E12, 81430.0], [1.6673211852E12, 76640.0], [1.6673186786E12, 100590.0], [1.6673186787E12, 43110.0], [1.6673211851E12, 76640.0], [1.6673186789E12, 62270.0], [1.6673211849E12, 71850.0], [1.6673186788E12, 95800.0], [1.667321185E12, 62270.0], [1.667318679E12, 76640.0], [1.6673211848E12, 81430.0], [1.6673211847E12, 100590.0], [1.6673186791E12, 86220.0], [1.6673211846E12, 33530.0], [1.6673186792E12, 23950.0], [1.6673211844E12, 86220.0], [1.6673186794E12, 62270.0], [1.6673211845E12, 71850.0], [1.6673186793E12, 100590.0], [1.6673186795E12, 76640.0], [1.6673211843E12, 81430.0], [1.6673211862E12, 71850.0], [1.6673186776E12, 86220.0], [1.6673186858E12, 67060.0], [1.6673211863E12, 95800.0], [1.6673186857E12, 81430.0], [1.6673211861E12, 81430.0], [1.6673186777E12, 86220.0], [1.6673186859E12, 71850.0], [1.667318686E12, 86220.0], [1.667321186E12, 57480.0], [1.6673186778E12, 71850.0], [1.667318678E12, 71850.0], [1.6673211858E12, 95800.0], [1.6673186861E12, 4790.0], [1.6673186779E12, 81430.0], [1.6673211859E12, 100590.0], [1.6673186781E12, 47900.0], [1.6673211857E12, 38320.0], [1.6673186782E12, 100590.0], [1.6673211856E12, 67060.0], [1.6673211855E12, 81430.0], [1.6673186783E12, 76640.0], [1.6673211853E12, 76640.0], [1.6673186785E12, 62270.0], [1.6673211854E12, 71850.0], [1.6673186784E12, 81430.0], [1.6673186807E12, 86220.0], [1.6673211872E12, 67060.0], [1.6673211791E12, 76640.0], [1.6673186806E12, 76640.0], [1.6673211873E12, 71850.0], [1.6673211789E12, 76640.0], [1.6673211871E12, 67060.0], [1.6673186808E12, 71850.0], [1.667321179E12, 76640.0], [1.6673211788E12, 62270.0], [1.667321187E12, 86220.0], [1.6673186809E12, 67060.0], [1.6673211869E12, 76640.0], [1.667318681E12, 76640.0], [1.6673211787E12, 71850.0], [1.6673186812E12, 62270.0], [1.6673211785E12, 52690.0], [1.6673211867E12, 86220.0], [1.6673211868E12, 57480.0], [1.6673186811E12, 71850.0], [1.6673211786E12, 62270.0], [1.6673186813E12, 81430.0], [1.6673211784E12, 38320.0], [1.6673211866E12, 57480.0], [1.6673186814E12, 91010.0], [1.6673211865E12, 76640.0], [1.6673186734E12, 62270.0], [1.6673186815E12, 57480.0], [1.6673186733E12, 81430.0], [1.6673211864E12, 81430.0], [1.6673186796E12, 71850.0], [1.6673211801E12, 76640.0], [1.6673211883E12, 67060.0], [1.6673186798E12, 71850.0], [1.6673211881E12, 76640.0], [1.6673186797E12, 100590.0], [1.66732118E12, 95800.0], [1.6673211882E12, 86220.0], [1.6673211798E12, 71850.0], [1.6673186799E12, 52690.0], [1.667321188E12, 81430.0], [1.6673211799E12, 57480.0], [1.6673211797E12, 52690.0], [1.6673211879E12, 71850.0], [1.66731868E12, 81430.0], [1.6673211796E12, 67060.0], [1.6673211878E12, 57480.0], [1.6673186801E12, 57480.0], [1.6673211876E12, 86220.0], [1.6673186803E12, 95800.0], [1.6673211794E12, 71850.0], [1.6673211877E12, 62270.0], [1.6673186802E12, 67060.0], [1.6673211795E12, 76640.0], [1.6673186804E12, 86220.0], [1.6673211793E12, 57480.0], [1.6673211875E12, 62270.0], [1.6673186805E12, 71850.0], [1.6673211792E12, 71850.0], [1.6673211874E12, 86220.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673211911E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 19.5, "minX": 1.6673186733E12, "maxY": 225.7, "series": [{"data": [[1.6673186745E12, 149.5625], [1.6673211893E12, 138.15], [1.6673186827E12, 180.57142857142856], [1.6673211811E12, 199.0], [1.6673186746E12, 158.41176470588235], [1.6673186828E12, 163.20000000000002], [1.6673211892E12, 178.5625], [1.667321181E12, 127.33333333333333], [1.667318683E12, 149.5294117647059], [1.6673186748E12, 164.73333333333335], [1.6673211808E12, 225.7], [1.667321189E12, 167.50000000000006], [1.6673186747E12, 135.64705882352942], [1.6673186829E12, 161.43750000000003], [1.6673211809E12, 175.66666666666666], [1.6673211891E12, 144.2142857142857], [1.6673211807E12, 127.06666666666666], [1.6673186831E12, 167.78571428571428], [1.6673186749E12, 142.89473684210526], [1.6673211889E12, 171.125], [1.6673211806E12, 153.60000000000002], [1.6673186832E12, 178.49999999999997], [1.667318675E12, 162.94117647058823], [1.6673211888E12, 140.05555555555557], [1.6673211805E12, 153.53846153846152], [1.6673211887E12, 142.11764705882356], [1.6673186833E12, 169.64705882352945], [1.6673186751E12, 137.73333333333335], [1.6673186753E12, 148.92307692307693], [1.6673211885E12, 158.06250000000003], [1.6673186835E12, 149.58823529411762], [1.6673211803E12, 140.4], [1.6673186752E12, 160.2857142857143], [1.6673211804E12, 164.1578947368421], [1.6673211886E12, 145.86666666666665], [1.6673186834E12, 165.20000000000002], [1.6673186754E12, 164.33333333333331], [1.6673186836E12, 152.0], [1.6673211884E12, 158.94444444444443], [1.6673211802E12, 147.94444444444446], [1.6673211821E12, 187.47058823529414], [1.6673211903E12, 135.45], [1.6673186817E12, 176.73333333333332], [1.6673186735E12, 87.57142857142857], [1.6673211822E12, 128.21428571428572], [1.6673186816E12, 171.7857142857143], [1.6673186736E12, 137.80000000000004], [1.667321182E12, 164.06250000000003], [1.6673211902E12, 122.46666666666668], [1.6673186818E12, 152.6875], [1.6673186737E12, 115.87499999999999], [1.6673211901E12, 142.11111111111111], [1.6673186819E12, 167.16666666666666], [1.6673211819E12, 171.625], [1.6673186739E12, 156.08333333333334], [1.6673186821E12, 175.2941176470588], [1.6673211817E12, 152.1764705882353], [1.6673211899E12, 157.5], [1.6673186738E12, 114.25], [1.667318682E12, 164.16666666666666], [1.66732119E12, 144.79999999999998], [1.6673211818E12, 137.14285714285714], [1.6673186822E12, 171.15384615384616], [1.667318674E12, 193.92857142857144], [1.6673211816E12, 142.3125], [1.6673211898E12, 158.43750000000003], [1.6673211815E12, 149.13333333333333], [1.6673186823E12, 172.41666666666669], [1.6673186741E12, 176.1764705882353], [1.6673211897E12, 148.85714285714283], [1.6673186743E12, 162.0], [1.6673211814E12, 156.04761904761907], [1.6673186824E12, 143.78947368421052], [1.6673186742E12, 144.14285714285714], [1.6673211896E12, 145.3529411764706], [1.6673186744E12, 152.89473684210526], [1.6673211812E12, 139.0], [1.6673211894E12, 151.46666666666667], [1.6673186826E12, 183.60000000000002], [1.6673211813E12, 133.14285714285714], [1.6673211895E12, 151.1578947368421], [1.6673186825E12, 165.4666666666667], [1.6673186766E12, 131.64285714285714], [1.6673186847E12, 157.00000000000003], [1.6673186765E12, 104.29411764705883], [1.6673211832E12, 143.07142857142858], [1.667321183E12, 142.31578947368422], [1.6673186849E12, 156.6470588235294], [1.6673186767E12, 171.94117647058823], [1.6673211831E12, 147.8], [1.6673186848E12, 175.94117647058823], [1.6673186768E12, 155.4705882352941], [1.6673211829E12, 157.5], [1.6673211911E12, 19.5], [1.667318685E12, 131.94444444444443], [1.6673186769E12, 147.53333333333336], [1.6673211828E12, 184.25], [1.667321191E12, 38.94444444444445], [1.6673186851E12, 143.2142857142857], [1.6673186771E12, 164.17647058823528], [1.6673186853E12, 110.6875], [1.6673211908E12, 98.8235294117647], [1.6673211826E12, 142.26315789473685], [1.667318677E12, 141.57142857142858], [1.6673186852E12, 145.24999999999997], [1.6673211909E12, 57.88235294117647], [1.6673211827E12, 146.68749999999997], [1.6673186854E12, 122.77777777777776], [1.6673186772E12, 163.1176470588235], [1.6673211825E12, 166.72222222222226], [1.6673211907E12, 103.88888888888889], [1.6673186855E12, 120.57142857142857], [1.6673186773E12, 143.1875], [1.6673211824E12, 144.6666666666667], [1.6673211906E12, 112.94736842105263], [1.6673186775E12, 187.0], [1.6673211904E12, 136.66666666666669], [1.6673211823E12, 144.85000000000002], [1.6673186856E12, 107.05882352941178], [1.6673186774E12, 172.70000000000002], [1.6673211905E12, 114.05882352941177], [1.6673186755E12, 144.4285714285714], [1.6673186837E12, 164.6111111111111], [1.6673211842E12, 154.35714285714286], [1.6673186839E12, 161.0588235294118], [1.6673186757E12, 150.33333333333334], [1.667321184E12, 149.35294117647058], [1.6673186838E12, 140.78571428571428], [1.6673186756E12, 129.0625], [1.6673211841E12, 146.4375], [1.6673211839E12, 202.0769230769231], [1.667318684E12, 144.57142857142858], [1.6673186758E12, 129.76923076923075], [1.6673211838E12, 122.94117647058823], [1.6673186841E12, 163.31578947368425], [1.6673186759E12, 176.7857142857143], [1.667318676E12, 161.49999999999997], [1.6673211837E12, 142.1578947368421], [1.6673186842E12, 156.92307692307693], [1.6673186762E12, 158.04999999999998], [1.6673186844E12, 148.375], [1.6673211835E12, 154.54545454545453], [1.6673186761E12, 187.15384615384613], [1.6673211836E12, 183.42105263157896], [1.6673186843E12, 170.52941176470588], [1.6673186763E12, 137.44444444444446], [1.6673186845E12, 159.79999999999998], [1.6673211834E12, 149.68750000000003], [1.6673186846E12, 165.75000000000003], [1.6673186764E12, 184.00000000000003], [1.6673211833E12, 174.23529411764707], [1.6673211852E12, 154.25], [1.6673186786E12, 169.52380952380952], [1.6673186787E12, 145.66666666666666], [1.6673211851E12, 193.125], [1.6673186789E12, 137.0769230769231], [1.6673211849E12, 169.0666666666667], [1.6673186788E12, 185.15], [1.667321185E12, 171.53846153846155], [1.667318679E12, 160.125], [1.6673211848E12, 136.76470588235293], [1.6673211847E12, 181.38095238095238], [1.6673186791E12, 172.77777777777777], [1.6673211846E12, 134.28571428571428], [1.6673186792E12, 145.4], [1.6673211844E12, 174.77777777777777], [1.6673186794E12, 147.00000000000006], [1.6673211845E12, 158.53333333333333], [1.6673186793E12, 184.38095238095238], [1.6673186795E12, 168.4375], [1.6673211843E12, 148.76470588235293], [1.6673211862E12, 137.86666666666667], [1.6673186776E12, 183.83333333333337], [1.6673186858E12, 88.64285714285714], [1.6673211863E12, 151.1], [1.6673186857E12, 94.17647058823528], [1.6673211861E12, 196.76470588235293], [1.6673186777E12, 133.61111111111111], [1.6673186859E12, 60.46666666666667], [1.667318686E12, 42.49999999999999], [1.667321186E12, 131.58333333333334], [1.6673186778E12, 150.13333333333333], [1.667318678E12, 141.13333333333333], [1.6673211858E12, 180.09999999999997], [1.6673186861E12, 21.0], [1.6673186779E12, 148.88235294117644], [1.6673211859E12, 146.38095238095238], [1.6673186781E12, 152.1], [1.6673211857E12, 154.875], [1.6673186782E12, 175.8095238095238], [1.6673211856E12, 185.35714285714286], [1.6673211855E12, 148.05882352941177], [1.6673186783E12, 137.375], [1.6673211853E12, 138.25], [1.6673186785E12, 143.0], [1.6673211854E12, 168.4], [1.6673186784E12, 164.17647058823528], [1.6673186807E12, 135.22222222222226], [1.6673211872E12, 188.07142857142858], [1.6673211791E12, 144.5], [1.6673186806E12, 189.68749999999997], [1.6673211873E12, 181.66666666666669], [1.6673211789E12, 124.0625], [1.6673211871E12, 169.7857142857143], [1.6673186808E12, 124.86666666666669], [1.667321179E12, 122.12499999999999], [1.6673211788E12, 108.38461538461539], [1.667321187E12, 141.83333333333334], [1.6673186809E12, 204.42857142857142], [1.6673211869E12, 158.75000000000006], [1.667318681E12, 147.375], [1.6673211787E12, 96.93333333333334], [1.6673186812E12, 181.3846153846154], [1.6673211785E12, 56.0], [1.6673211867E12, 176.7222222222222], [1.6673211868E12, 176.58333333333334], [1.6673186811E12, 161.39999999999995], [1.6673211786E12, 80.46153846153847], [1.6673186813E12, 165.82352941176467], [1.6673211784E12, 89.125], [1.6673211866E12, 156.16666666666666], [1.6673186814E12, 151.421052631579], [1.6673211865E12, 141.6875], [1.6673186734E12, 68.92307692307695], [1.6673186815E12, 148.0], [1.6673186733E12, 75.82352941176471], [1.6673211864E12, 138.8235294117647], [1.6673186796E12, 189.33333333333334], [1.6673211801E12, 142.125], [1.6673211883E12, 152.92857142857142], [1.6673186798E12, 130.46666666666667], [1.6673211881E12, 165.1875], [1.6673186797E12, 149.9047619047619], [1.66732118E12, 169.70000000000005], [1.6673211882E12, 157.38888888888889], [1.6673211798E12, 191.26666666666665], [1.6673186799E12, 154.63636363636363], [1.667321188E12, 151.1764705882353], [1.6673211799E12, 203.5], [1.6673211797E12, 173.72727272727272], [1.6673211879E12, 173.1333333333333], [1.66731868E12, 210.05882352941177], [1.6673211796E12, 160.92857142857142], [1.6673211878E12, 184.75], [1.6673186801E12, 143.08333333333331], [1.6673211876E12, 173.22222222222223], [1.6673186803E12, 165.20000000000007], [1.6673211794E12, 166.73333333333335], [1.6673211877E12, 163.6153846153846], [1.6673186802E12, 160.6428571428571], [1.6673211795E12, 183.0625], [1.6673186804E12, 151.16666666666666], [1.6673211793E12, 160.16666666666666], [1.6673211875E12, 153.23076923076923], [1.6673186805E12, 129.46666666666664], [1.6673211792E12, 145.86666666666667], [1.6673211874E12, 137.4444444444444]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673211911E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 19.5, "minX": 1.6673186733E12, "maxY": 225.6, "series": [{"data": [[1.6673186745E12, 149.5625], [1.6673211893E12, 137.89999999999998], [1.6673186827E12, 180.07142857142856], [1.6673211811E12, 198.33333333333334], [1.6673186746E12, 158.29411764705878], [1.6673186828E12, 163.0], [1.6673211892E12, 178.375], [1.667321181E12, 127.16666666666666], [1.667318683E12, 149.47058823529414], [1.6673186748E12, 164.4], [1.6673211808E12, 225.6], [1.667321189E12, 167.50000000000006], [1.6673186747E12, 135.47058823529414], [1.6673186829E12, 161.0625], [1.6673211809E12, 174.9047619047619], [1.6673211891E12, 144.14285714285717], [1.6673211807E12, 127.0], [1.6673186831E12, 167.64285714285714], [1.6673186749E12, 142.89473684210526], [1.6673211889E12, 170.68749999999997], [1.6673211806E12, 153.46666666666667], [1.6673186832E12, 178.49999999999997], [1.667318675E12, 162.70588235294116], [1.6673211888E12, 139.94444444444446], [1.6673211805E12, 153.23076923076923], [1.6673211887E12, 141.76470588235293], [1.6673186833E12, 169.58823529411765], [1.6673186751E12, 137.33333333333334], [1.6673186753E12, 148.69230769230768], [1.6673211885E12, 158.00000000000003], [1.6673186835E12, 149.1764705882353], [1.6673211803E12, 140.4], [1.6673186752E12, 160.0], [1.6673211804E12, 163.99999999999997], [1.6673211886E12, 145.86666666666665], [1.6673186834E12, 165.20000000000002], [1.6673186754E12, 164.27777777777777], [1.6673186836E12, 152.0], [1.6673211884E12, 158.94444444444443], [1.6673211802E12, 147.77777777777777], [1.6673211821E12, 187.41176470588235], [1.6673211903E12, 135.45], [1.6673186817E12, 176.66666666666669], [1.6673186735E12, 87.42857142857143], [1.6673211822E12, 127.50000000000003], [1.6673186816E12, 171.42857142857142], [1.6673186736E12, 137.59999999999997], [1.667321182E12, 163.9375], [1.6673211902E12, 122.46666666666668], [1.6673186818E12, 152.5625], [1.6673186737E12, 115.75000000000001], [1.6673211901E12, 142.0], [1.6673186819E12, 167.16666666666666], [1.6673211819E12, 171.49999999999997], [1.6673186739E12, 155.66666666666669], [1.6673186821E12, 175.2941176470588], [1.6673211817E12, 152.0588235294118], [1.6673211899E12, 156.81249999999997], [1.6673186738E12, 114.0], [1.667318682E12, 164.16666666666666], [1.66732119E12, 144.73333333333332], [1.6673211818E12, 136.71428571428572], [1.6673186822E12, 170.9230769230769], [1.667318674E12, 193.92857142857144], [1.6673211816E12, 142.3125], [1.6673211898E12, 158.125], [1.6673211815E12, 148.93333333333334], [1.6673186823E12, 172.41666666666669], [1.6673186741E12, 176.0], [1.6673211897E12, 148.71428571428572], [1.6673186743E12, 161.0666666666667], [1.6673211814E12, 155.99999999999997], [1.6673186824E12, 143.73684210526315], [1.6673186742E12, 144.07142857142856], [1.6673211896E12, 145.3529411764706], [1.6673186744E12, 152.78947368421052], [1.6673211812E12, 139.0], [1.6673211894E12, 151.4], [1.6673186826E12, 183.53333333333333], [1.6673211813E12, 132.85714285714283], [1.6673211895E12, 150.52631578947367], [1.6673186825E12, 165.40000000000003], [1.6673186766E12, 131.64285714285714], [1.6673186847E12, 156.75], [1.6673186765E12, 104.11764705882354], [1.6673211832E12, 143.07142857142858], [1.667321183E12, 142.31578947368422], [1.6673186849E12, 156.41176470588235], [1.6673186767E12, 171.82352941176475], [1.6673211831E12, 147.53333333333333], [1.6673186848E12, 175.76470588235293], [1.6673186768E12, 155.0], [1.6673211829E12, 157.1111111111111], [1.6673211911E12, 19.5], [1.667318685E12, 131.94444444444443], [1.6673186769E12, 147.46666666666664], [1.6673211828E12, 184.08333333333331], [1.667321191E12, 38.88888888888888], [1.6673186851E12, 143.2142857142857], [1.6673186771E12, 164.11764705882354], [1.6673186853E12, 110.6875], [1.6673211908E12, 98.64705882352939], [1.6673211826E12, 142.21052631578948], [1.667318677E12, 141.57142857142858], [1.6673186852E12, 145.0], [1.6673211909E12, 57.8235294117647], [1.6673211827E12, 146.31250000000003], [1.6673186854E12, 122.66666666666667], [1.6673186772E12, 163.05882352941177], [1.6673211825E12, 165.83333333333334], [1.6673211907E12, 103.88888888888889], [1.6673186855E12, 120.42857142857143], [1.6673186773E12, 143.06250000000003], [1.6673211824E12, 144.41666666666669], [1.6673211906E12, 112.94736842105263], [1.6673186775E12, 186.9375], [1.6673211904E12, 136.33333333333334], [1.6673211823E12, 144.60000000000002], [1.6673186856E12, 106.94117647058823], [1.6673186774E12, 172.70000000000002], [1.6673211905E12, 114.00000000000001], [1.6673186755E12, 144.38095238095235], [1.6673186837E12, 164.5], [1.6673211842E12, 154.35714285714286], [1.6673186839E12, 161.0588235294118], [1.6673186757E12, 150.2857142857143], [1.667321184E12, 149.23529411764707], [1.6673186838E12, 140.7142857142857], [1.6673186756E12, 128.93749999999997], [1.6673211841E12, 146.18750000000003], [1.6673211839E12, 202.0], [1.667318684E12, 144.57142857142858], [1.6673186758E12, 129.53846153846152], [1.6673211838E12, 122.8235294117647], [1.6673186841E12, 162.73684210526315], [1.6673186759E12, 176.71428571428572], [1.667318676E12, 161.375], [1.6673211837E12, 142.10526315789474], [1.6673186842E12, 156.46153846153842], [1.6673186762E12, 157.99999999999997], [1.6673186844E12, 148.25], [1.6673211835E12, 154.36363636363637], [1.6673186761E12, 186.6153846153846], [1.6673211836E12, 183.21052631578945], [1.6673186843E12, 170.41176470588238], [1.6673186763E12, 137.44444444444446], [1.6673186845E12, 159.53333333333336], [1.6673211834E12, 149.0625], [1.6673186846E12, 165.62500000000003], [1.6673186764E12, 183.95833333333337], [1.6673211833E12, 172.88235294117646], [1.6673211852E12, 154.25], [1.6673186786E12, 169.33333333333334], [1.6673186787E12, 145.66666666666666], [1.6673211851E12, 192.62500000000003], [1.6673186789E12, 136.76923076923077], [1.6673211849E12, 168.9333333333333], [1.6673186788E12, 185.10000000000005], [1.667321185E12, 171.30769230769232], [1.667318679E12, 160.0], [1.6673211848E12, 136.76470588235293], [1.6673211847E12, 181.14285714285717], [1.6673186791E12, 172.55555555555554], [1.6673211846E12, 134.28571428571428], [1.6673186792E12, 145.4], [1.6673211844E12, 174.77777777777777], [1.6673186794E12, 146.8461538461538], [1.6673211845E12, 158.4], [1.6673186793E12, 183.90476190476187], [1.6673186795E12, 168.25000000000003], [1.6673211843E12, 148.76470588235293], [1.6673211862E12, 137.86666666666667], [1.6673186776E12, 183.66666666666666], [1.6673186858E12, 88.42857142857143], [1.6673211863E12, 151.0], [1.6673186857E12, 94.05882352941175], [1.6673211861E12, 196.70588235294122], [1.6673186777E12, 133.44444444444443], [1.6673186859E12, 60.13333333333335], [1.667318686E12, 42.44444444444445], [1.667321186E12, 131.5], [1.6673186778E12, 150.0], [1.667318678E12, 141.0666666666667], [1.6673211858E12, 179.95000000000002], [1.6673186861E12, 21.0], [1.6673186779E12, 148.76470588235293], [1.6673211859E12, 146.0476190476191], [1.6673186781E12, 152.1], [1.6673211857E12, 154.875], [1.6673186782E12, 175.47619047619048], [1.6673211856E12, 185.35714285714286], [1.6673211855E12, 147.88235294117644], [1.6673186783E12, 137.0625], [1.6673211853E12, 138.25], [1.6673186785E12, 143.0], [1.6673211854E12, 168.4], [1.6673186784E12, 164.11764705882354], [1.6673186807E12, 135.05555555555557], [1.6673211872E12, 187.85714285714286], [1.6673211791E12, 144.18749999999997], [1.6673186806E12, 189.43749999999997], [1.6673211873E12, 181.33333333333331], [1.6673211789E12, 124.0], [1.6673211871E12, 169.35714285714283], [1.6673186808E12, 124.46666666666665], [1.667321179E12, 122.00000000000001], [1.6673211788E12, 108.38461538461539], [1.667321187E12, 141.83333333333334], [1.6673186809E12, 204.28571428571428], [1.6673211869E12, 158.6875], [1.667318681E12, 147.1875], [1.6673211787E12, 96.66666666666667], [1.6673186812E12, 181.3846153846154], [1.6673211785E12, 55.909090909090914], [1.6673211867E12, 176.44444444444443], [1.6673211868E12, 176.58333333333334], [1.6673186811E12, 161.39999999999995], [1.6673211786E12, 80.38461538461539], [1.6673186813E12, 165.82352941176467], [1.6673211784E12, 86.5], [1.6673211866E12, 156.08333333333334], [1.6673186814E12, 151.26315789473685], [1.6673211865E12, 141.5625], [1.6673186734E12, 68.69230769230771], [1.6673186815E12, 148.0], [1.6673186733E12, 70.6470588235294], [1.6673211864E12, 138.47058823529414], [1.6673186796E12, 189.2], [1.6673211801E12, 142.06250000000003], [1.6673211883E12, 152.85714285714283], [1.6673186798E12, 130.20000000000002], [1.6673211881E12, 165.12500000000003], [1.6673186797E12, 149.85714285714286], [1.66732118E12, 169.19999999999996], [1.6673211882E12, 157.38888888888889], [1.6673211798E12, 190.93333333333334], [1.6673186799E12, 154.45454545454547], [1.667321188E12, 151.11764705882354], [1.6673211799E12, 203.33333333333331], [1.6673211797E12, 173.36363636363637], [1.6673211879E12, 171.66666666666666], [1.66731868E12, 210.05882352941177], [1.6673211796E12, 160.78571428571428], [1.6673211878E12, 184.66666666666669], [1.6673186801E12, 143.08333333333331], [1.6673211876E12, 173.16666666666666], [1.6673186803E12, 164.5], [1.6673211794E12, 166.13333333333333], [1.6673211877E12, 163.46153846153845], [1.6673186802E12, 160.6428571428571], [1.6673211795E12, 182.81250000000003], [1.6673186804E12, 151.11111111111111], [1.6673211793E12, 160.16666666666666], [1.6673211875E12, 153.0], [1.6673186805E12, 129.46666666666664], [1.6673211792E12, 145.73333333333335], [1.6673211874E12, 137.33333333333334]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673211911E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.6673186733E12, "maxY": 27.375, "series": [{"data": [[1.6673186745E12, 0.0], [1.6673211893E12, 0.0], [1.6673186827E12, 0.0], [1.6673211811E12, 0.0], [1.6673186746E12, 0.0], [1.6673186828E12, 0.0], [1.6673211892E12, 0.0], [1.667321181E12, 0.0], [1.667318683E12, 0.0], [1.6673186748E12, 0.0], [1.6673211808E12, 0.0], [1.667321189E12, 0.0], [1.6673186747E12, 0.0], [1.6673186829E12, 0.0], [1.6673211809E12, 0.0], [1.6673211891E12, 0.0], [1.6673211807E12, 0.0], [1.6673186831E12, 0.0], [1.6673186749E12, 0.0], [1.6673211889E12, 0.0], [1.6673211806E12, 0.0], [1.6673186832E12, 0.0], [1.667318675E12, 0.0], [1.6673211888E12, 0.0], [1.6673211805E12, 0.0], [1.6673211887E12, 0.0], [1.6673186833E12, 0.0], [1.6673186751E12, 0.0], [1.6673186753E12, 0.0], [1.6673211885E12, 0.0], [1.6673186835E12, 0.0], [1.6673211803E12, 0.0], [1.6673186752E12, 0.0], [1.6673211804E12, 0.0], [1.6673211886E12, 0.0], [1.6673186834E12, 0.0], [1.6673186754E12, 0.0], [1.6673186836E12, 0.0], [1.6673211884E12, 0.0], [1.6673211802E12, 0.0], [1.6673211821E12, 0.0], [1.6673211903E12, 0.0], [1.6673186817E12, 0.0], [1.6673186735E12, 0.0], [1.6673211822E12, 0.0], [1.6673186816E12, 0.0], [1.6673186736E12, 0.4], [1.667321182E12, 0.0], [1.6673211902E12, 0.0], [1.6673186818E12, 0.0], [1.6673186737E12, 0.18749999999999997], [1.6673211901E12, 0.0], [1.6673186819E12, 0.0], [1.6673211819E12, 0.0], [1.6673186739E12, 0.16666666666666669], [1.6673186821E12, 0.0], [1.6673211817E12, 0.0], [1.6673211899E12, 0.0], [1.6673186738E12, 0.08333333333333334], [1.667318682E12, 0.0], [1.66732119E12, 0.0], [1.6673211818E12, 0.0], [1.6673186822E12, 0.0], [1.667318674E12, 0.5714285714285714], [1.6673211816E12, 0.0], [1.6673211898E12, 0.0], [1.6673211815E12, 0.0], [1.6673186823E12, 0.0], [1.6673186741E12, 0.11764705882352944], [1.6673211897E12, 0.0], [1.6673186743E12, 0.0], [1.6673211814E12, 0.0], [1.6673186824E12, 0.0], [1.6673186742E12, 0.0], [1.6673211896E12, 0.0], [1.6673186744E12, 0.0], [1.6673211812E12, 0.0], [1.6673211894E12, 0.0], [1.6673186826E12, 0.0], [1.6673211813E12, 0.0], [1.6673211895E12, 0.0], [1.6673186825E12, 0.0], [1.6673186766E12, 0.0], [1.6673186847E12, 0.0], [1.6673186765E12, 0.0], [1.6673211832E12, 0.0], [1.667321183E12, 0.0], [1.6673186849E12, 0.0], [1.6673186767E12, 0.0], [1.6673211831E12, 0.0], [1.6673186848E12, 0.0], [1.6673186768E12, 0.0], [1.6673211829E12, 0.0], [1.6673211911E12, 0.0], [1.667318685E12, 0.0], [1.6673186769E12, 0.0], [1.6673211828E12, 0.0], [1.667321191E12, 0.0], [1.6673186851E12, 0.0], [1.6673186771E12, 0.0], [1.6673186853E12, 0.0], [1.6673211908E12, 0.0], [1.6673211826E12, 0.0], [1.667318677E12, 0.0], [1.6673186852E12, 0.0], [1.6673211909E12, 0.0], [1.6673211827E12, 0.0], [1.6673186854E12, 0.0], [1.6673186772E12, 0.0], [1.6673211825E12, 0.0], [1.6673211907E12, 0.0], [1.6673186855E12, 0.0], [1.6673186773E12, 0.0], [1.6673211824E12, 0.0], [1.6673211906E12, 0.0], [1.6673186775E12, 0.0], [1.6673211904E12, 0.0], [1.6673211823E12, 0.0], [1.6673186856E12, 0.0], [1.6673186774E12, 0.0], [1.6673211905E12, 0.0], [1.6673186755E12, 0.0], [1.6673186837E12, 0.0], [1.6673211842E12, 0.0], [1.6673186839E12, 0.0], [1.6673186757E12, 0.0], [1.667321184E12, 0.0], [1.6673186838E12, 0.0], [1.6673186756E12, 0.0], [1.6673211841E12, 0.0], [1.6673211839E12, 0.0], [1.667318684E12, 0.0], [1.6673186758E12, 0.0], [1.6673211838E12, 0.0], [1.6673186841E12, 0.0], [1.6673186759E12, 0.0], [1.667318676E12, 0.0], [1.6673211837E12, 0.0], [1.6673186842E12, 0.0], [1.6673186762E12, 0.0], [1.6673186844E12, 0.0], [1.6673211835E12, 0.0], [1.6673186761E12, 0.0], [1.6673211836E12, 0.0], [1.6673186843E12, 0.0], [1.6673186763E12, 0.0], [1.6673186845E12, 0.0], [1.6673211834E12, 0.0], [1.6673186846E12, 0.0], [1.6673186764E12, 0.0], [1.6673211833E12, 0.0], [1.6673211852E12, 0.0], [1.6673186786E12, 0.0], [1.6673186787E12, 0.0], [1.6673211851E12, 0.0], [1.6673186789E12, 0.0], [1.6673211849E12, 0.0], [1.6673186788E12, 0.0], [1.667321185E12, 0.0], [1.667318679E12, 0.0], [1.6673211848E12, 0.0], [1.6673211847E12, 0.0], [1.6673186791E12, 0.0], [1.6673211846E12, 0.0], [1.6673186792E12, 0.0], [1.6673211844E12, 0.0], [1.6673186794E12, 0.0], [1.6673211845E12, 0.0], [1.6673186793E12, 0.0], [1.6673186795E12, 0.0], [1.6673211843E12, 0.0], [1.6673211862E12, 0.0], [1.6673186776E12, 0.0], [1.6673186858E12, 0.0], [1.6673211863E12, 0.0], [1.6673186857E12, 0.0], [1.6673211861E12, 0.0], [1.6673186777E12, 0.0], [1.6673186859E12, 0.0], [1.667318686E12, 0.0], [1.667321186E12, 0.0], [1.6673186778E12, 0.0], [1.667318678E12, 0.0], [1.6673211858E12, 0.0], [1.6673186861E12, 0.0], [1.6673186779E12, 0.0], [1.6673211859E12, 0.0], [1.6673186781E12, 0.0], [1.6673211857E12, 0.0], [1.6673186782E12, 0.0], [1.6673211856E12, 0.0], [1.6673211855E12, 0.0], [1.6673186783E12, 0.0], [1.6673211853E12, 0.0], [1.6673186785E12, 0.0], [1.6673211854E12, 0.0], [1.6673186784E12, 0.0], [1.6673186807E12, 0.0], [1.6673211872E12, 0.0], [1.6673211791E12, 0.12500000000000003], [1.6673186806E12, 0.0], [1.6673211873E12, 0.0], [1.6673211789E12, 0.3125], [1.6673211871E12, 0.0], [1.6673186808E12, 0.0], [1.667321179E12, 0.125], [1.6673211788E12, 0.2307692307692308], [1.667321187E12, 0.0], [1.6673186809E12, 0.0], [1.6673211869E12, 0.0], [1.667318681E12, 0.0], [1.6673211787E12, 0.19999999999999998], [1.6673186812E12, 0.0], [1.6673211785E12, 0.09090909090909091], [1.6673211867E12, 0.0], [1.6673211868E12, 0.0], [1.6673186811E12, 0.0], [1.6673211786E12, 0.3846153846153847], [1.6673186813E12, 0.0], [1.6673211784E12, 27.375], [1.6673211866E12, 0.0], [1.6673186814E12, 0.0], [1.6673211865E12, 0.0], [1.6673186734E12, 0.46153846153846156], [1.6673186815E12, 0.0], [1.6673186733E12, 15.529411764705882], [1.6673211864E12, 0.0], [1.6673186796E12, 0.0], [1.6673211801E12, 0.0], [1.6673211883E12, 0.0], [1.6673186798E12, 0.0], [1.6673211881E12, 0.0], [1.6673186797E12, 0.0], [1.66732118E12, 0.0], [1.6673211882E12, 0.0], [1.6673211798E12, 0.0], [1.6673186799E12, 0.0], [1.667321188E12, 0.0], [1.6673211799E12, 0.0], [1.6673211797E12, 0.0], [1.6673211879E12, 0.0], [1.66731868E12, 0.0], [1.6673211796E12, 0.0], [1.6673211878E12, 0.0], [1.6673186801E12, 0.0], [1.6673211876E12, 0.0], [1.6673186803E12, 0.0], [1.6673211794E12, 0.0], [1.6673211877E12, 0.0], [1.6673186802E12, 0.0], [1.6673211795E12, 0.0], [1.6673186804E12, 0.0], [1.6673211793E12, 0.16666666666666669], [1.6673211875E12, 0.0], [1.6673186805E12, 0.0], [1.6673211792E12, 0.13333333333333333], [1.6673211874E12, 0.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673211911E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 15.0, "minX": 1.6673186733E12, "maxY": 424.0, "series": [{"data": [[1.6673186745E12, 234.0], [1.6673211893E12, 192.0], [1.6673186827E12, 282.0], [1.6673211811E12, 332.0], [1.6673186746E12, 256.0], [1.6673186828E12, 254.0], [1.6673211892E12, 313.0], [1.667321181E12, 217.0], [1.667318683E12, 202.0], [1.6673186748E12, 307.0], [1.6673211808E12, 378.0], [1.667321189E12, 222.0], [1.6673186747E12, 208.0], [1.6673186829E12, 216.0], [1.6673211809E12, 284.0], [1.6673211891E12, 231.0], [1.6673211807E12, 228.0], [1.6673186831E12, 269.0], [1.6673186749E12, 252.0], [1.6673211889E12, 347.0], [1.6673211806E12, 294.0], [1.6673186832E12, 242.0], [1.667318675E12, 284.0], [1.6673211888E12, 241.0], [1.6673211805E12, 398.0], [1.6673211887E12, 220.0], [1.6673186833E12, 280.0], [1.6673186751E12, 220.0], [1.6673186753E12, 231.0], [1.6673211885E12, 261.0], [1.6673186835E12, 213.0], [1.6673211803E12, 251.0], [1.6673186752E12, 251.0], [1.6673211804E12, 391.0], [1.6673211886E12, 260.0], [1.6673186834E12, 279.0], [1.6673186754E12, 261.0], [1.6673186836E12, 257.0], [1.6673211884E12, 267.0], [1.6673211802E12, 254.0], [1.6673211821E12, 264.0], [1.6673211903E12, 261.0], [1.6673186817E12, 285.0], [1.6673186735E12, 138.0], [1.6673211822E12, 187.0], [1.6673186816E12, 283.0], [1.6673186736E12, 230.0], [1.667321182E12, 248.0], [1.6673211902E12, 165.0], [1.6673186818E12, 271.0], [1.6673186737E12, 184.0], [1.6673211901E12, 192.0], [1.6673186819E12, 269.0], [1.6673211819E12, 374.0], [1.6673186739E12, 205.0], [1.6673186821E12, 286.0], [1.6673211817E12, 256.0], [1.6673211899E12, 220.0], [1.6673186738E12, 180.0], [1.667318682E12, 286.0], [1.66732119E12, 211.0], [1.6673211818E12, 247.0], [1.6673186822E12, 285.0], [1.667318674E12, 280.0], [1.6673211816E12, 163.0], [1.6673211898E12, 211.0], [1.6673211815E12, 207.0], [1.6673186823E12, 278.0], [1.6673186741E12, 221.0], [1.6673211897E12, 244.0], [1.6673186743E12, 237.0], [1.6673211814E12, 268.0], [1.6673186824E12, 236.0], [1.6673186742E12, 186.0], [1.6673211896E12, 297.0], [1.6673186744E12, 200.0], [1.6673211812E12, 285.0], [1.6673211894E12, 277.0], [1.6673186826E12, 349.0], [1.6673211813E12, 162.0], [1.6673211895E12, 276.0], [1.6673186825E12, 251.0], [1.6673186766E12, 209.0], [1.6673186847E12, 274.0], [1.6673186765E12, 175.0], [1.6673211832E12, 275.0], [1.667321183E12, 287.0], [1.6673186849E12, 312.0], [1.6673186767E12, 232.0], [1.6673211831E12, 316.0], [1.6673186848E12, 240.0], [1.6673186768E12, 265.0], [1.6673211829E12, 277.0], [1.6673211911E12, 24.0], [1.667318685E12, 219.0], [1.6673186769E12, 267.0], [1.6673211828E12, 295.0], [1.667321191E12, 80.0], [1.6673186851E12, 281.0], [1.6673186771E12, 272.0], [1.6673186853E12, 173.0], [1.6673211908E12, 173.0], [1.6673211826E12, 261.0], [1.667318677E12, 250.0], [1.6673186852E12, 294.0], [1.6673211909E12, 95.0], [1.6673211827E12, 258.0], [1.6673186854E12, 192.0], [1.6673186772E12, 237.0], [1.6673211825E12, 215.0], [1.6673211907E12, 164.0], [1.6673186855E12, 179.0], [1.6673186773E12, 192.0], [1.6673211824E12, 224.0], [1.6673211906E12, 179.0], [1.6673186775E12, 317.0], [1.6673211904E12, 260.0], [1.6673211823E12, 205.0], [1.6673186856E12, 252.0], [1.6673186774E12, 191.0], [1.6673211905E12, 238.0], [1.6673186755E12, 240.0], [1.6673186837E12, 262.0], [1.6673211842E12, 268.0], [1.6673186839E12, 227.0], [1.6673186757E12, 288.0], [1.667321184E12, 224.0], [1.6673186838E12, 227.0], [1.6673186756E12, 201.0], [1.6673211841E12, 199.0], [1.6673211839E12, 274.0], [1.667318684E12, 254.0], [1.6673186758E12, 238.0], [1.6673211838E12, 171.0], [1.6673186841E12, 281.0], [1.6673186759E12, 252.0], [1.667318676E12, 279.0], [1.6673211837E12, 227.0], [1.6673186842E12, 209.0], [1.6673186762E12, 298.0], [1.6673186844E12, 212.0], [1.6673211835E12, 246.0], [1.6673186761E12, 308.0], [1.6673211836E12, 244.0], [1.6673186843E12, 220.0], [1.6673186763E12, 233.0], [1.6673186845E12, 235.0], [1.6673211834E12, 192.0], [1.6673186846E12, 306.0], [1.6673186764E12, 289.0], [1.6673211833E12, 255.0], [1.6673211852E12, 384.0], [1.6673186786E12, 340.0], [1.6673186787E12, 246.0], [1.6673211851E12, 256.0], [1.6673186789E12, 224.0], [1.6673211849E12, 303.0], [1.6673186788E12, 242.0], [1.667321185E12, 266.0], [1.667318679E12, 230.0], [1.6673211848E12, 213.0], [1.6673211847E12, 270.0], [1.6673186791E12, 286.0], [1.6673211846E12, 158.0], [1.6673186792E12, 169.0], [1.6673211844E12, 373.0], [1.6673186794E12, 233.0], [1.6673211845E12, 261.0], [1.6673186793E12, 262.0], [1.6673186795E12, 258.0], [1.6673211843E12, 269.0], [1.6673211862E12, 229.0], [1.6673186776E12, 317.0], [1.6673186858E12, 132.0], [1.6673211863E12, 268.0], [1.6673186857E12, 160.0], [1.6673211861E12, 349.0], [1.6673186777E12, 268.0], [1.6673186859E12, 97.0], [1.667318686E12, 64.0], [1.667321186E12, 167.0], [1.6673186778E12, 247.0], [1.667318678E12, 345.0], [1.6673211858E12, 284.0], [1.6673186861E12, 21.0], [1.6673186779E12, 200.0], [1.6673211859E12, 228.0], [1.6673186781E12, 188.0], [1.6673211857E12, 198.0], [1.6673186782E12, 301.0], [1.6673211856E12, 356.0], [1.6673211855E12, 343.0], [1.6673186783E12, 256.0], [1.6673211853E12, 154.0], [1.6673186785E12, 238.0], [1.6673211854E12, 309.0], [1.6673186784E12, 393.0], [1.6673186807E12, 193.0], [1.6673211872E12, 319.0], [1.6673211791E12, 241.0], [1.6673186806E12, 279.0], [1.6673211873E12, 285.0], [1.6673211789E12, 223.0], [1.6673211871E12, 280.0], [1.6673186808E12, 150.0], [1.667321179E12, 180.0], [1.6673211788E12, 173.0], [1.667321187E12, 212.0], [1.6673186809E12, 289.0], [1.6673211869E12, 275.0], [1.667318681E12, 217.0], [1.6673211787E12, 133.0], [1.6673186812E12, 290.0], [1.6673211785E12, 98.0], [1.6673211867E12, 376.0], [1.6673211868E12, 233.0], [1.6673186811E12, 343.0], [1.6673211786E12, 113.0], [1.6673186813E12, 216.0], [1.6673211784E12, 114.0], [1.6673211866E12, 246.0], [1.6673186814E12, 248.0], [1.6673211865E12, 226.0], [1.6673186734E12, 116.0], [1.6673186815E12, 158.0], [1.6673186733E12, 124.0], [1.6673211864E12, 250.0], [1.6673186796E12, 289.0], [1.6673211801E12, 204.0], [1.6673211883E12, 267.0], [1.6673186798E12, 156.0], [1.6673211881E12, 222.0], [1.6673186797E12, 229.0], [1.66732118E12, 220.0], [1.6673211882E12, 279.0], [1.6673211798E12, 424.0], [1.6673186799E12, 208.0], [1.667321188E12, 224.0], [1.6673211799E12, 311.0], [1.6673211797E12, 311.0], [1.6673211879E12, 249.0], [1.66731868E12, 337.0], [1.6673211796E12, 240.0], [1.6673211878E12, 277.0], [1.6673186801E12, 220.0], [1.6673211876E12, 293.0], [1.6673186803E12, 295.0], [1.6673211794E12, 266.0], [1.6673211877E12, 260.0], [1.6673186802E12, 245.0], [1.6673211795E12, 246.0], [1.6673186804E12, 261.0], [1.6673211793E12, 265.0], [1.6673211875E12, 260.0], [1.6673186805E12, 153.0], [1.6673211792E12, 218.0], [1.6673211874E12, 225.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6673186745E12, 211.60000000000002], [1.6673211893E12, 188.70000000000002], [1.6673186827E12, 271.5], [1.6673211811E12, 322.1], [1.6673186746E12, 254.4], [1.6673186828E12, 252.8], [1.6673211892E12, 275.90000000000003], [1.667321181E12, 199.00000000000006], [1.667318683E12, 199.6], [1.6673186748E12, 273.40000000000003], [1.6673211808E12, 367.40000000000003], [1.667321189E12, 216.5], [1.6673186747E12, 183.2], [1.6673186829E12, 209.0], [1.6673211809E12, 254.40000000000003], [1.6673211891E12, 215.0], [1.6673211807E12, 207.0], [1.6673186831E12, 263.0], [1.6673186749E12, 247.0], [1.6673211889E12, 277.00000000000006], [1.6673211806E12, 216.60000000000005], [1.6673186832E12, 239.0], [1.667318675E12, 245.59999999999997], [1.6673211888E12, 214.90000000000003], [1.6673211805E12, 316.3999999999999], [1.6673211887E12, 202.39999999999998], [1.6673186833E12, 272.0], [1.6673186751E12, 216.4], [1.6673186753E12, 223.79999999999998], [1.6673211885E12, 255.4], [1.6673186835E12, 201.0], [1.6673211803E12, 191.60000000000002], [1.6673186752E12, 246.5], [1.6673211804E12, 303.0], [1.6673211886E12, 253.4], [1.6673186834E12, 274.2], [1.6673186754E12, 261.0], [1.6673186836E12, 236.00000000000003], [1.6673211884E12, 255.3], [1.6673211802E12, 248.60000000000002], [1.6673211821E12, 253.6], [1.6673211903E12, 210.0], [1.6673186817E12, 276.6], [1.6673186735E12, 138.0], [1.6673211822E12, 177.0], [1.6673186816E12, 278.0], [1.6673186736E12, 212.60000000000002], [1.667321182E12, 243.8], [1.6673211902E12, 159.6], [1.6673186818E12, 263.3], [1.6673186737E12, 183.3], [1.6673211901E12, 189.3], [1.6673186819E12, 263.6], [1.6673211819E12, 297.70000000000005], [1.6673186739E12, 203.20000000000002], [1.6673186821E12, 256.4], [1.6673211817E12, 253.6], [1.6673211899E12, 213.0], [1.6673186738E12, 178.20000000000002], [1.667318682E12, 272.20000000000005], [1.66732119E12, 202.6], [1.6673211818E12, 195.5], [1.6673186822E12, 278.2], [1.667318674E12, 273.0], [1.6673211816E12, 163.0], [1.6673211898E12, 211.0], [1.6673211815E12, 199.8], [1.6673186823E12, 264.80000000000007], [1.6673186741E12, 219.4], [1.6673211897E12, 208.5], [1.6673186743E12, 214.8], [1.6673211814E12, 250.20000000000002], [1.6673186824E12, 188.0], [1.6673186742E12, 186.0], [1.6673211896E12, 243.39999999999995], [1.6673186744E12, 184.0], [1.6673211812E12, 245.40000000000006], [1.6673211894E12, 273.4], [1.6673186826E12, 313.6], [1.6673211813E12, 160.5], [1.6673211895E12, 202.0], [1.6673186825E12, 249.2], [1.6673186766E12, 202.0], [1.6673186847E12, 266.5], [1.6673186765E12, 143.79999999999998], [1.6673211832E12, 220.5], [1.667321183E12, 263.0], [1.6673186849E12, 278.4], [1.6673186767E12, 223.2], [1.6673211831E12, 221.20000000000005], [1.6673186848E12, 235.2], [1.6673186768E12, 243.39999999999998], [1.6673211829E12, 214.9000000000001], [1.6673211911E12, 24.0], [1.667318685E12, 186.60000000000005], [1.6673186769E12, 237.60000000000002], [1.6673211828E12, 295.0], [1.667321191E12, 62.00000000000003], [1.6673186851E12, 220.5], [1.6673186771E12, 267.2], [1.6673186853E12, 148.50000000000003], [1.6673211908E12, 166.6], [1.6673211826E12, 208.0], [1.667318677E12, 203.5], [1.6673186852E12, 166.70000000000002], [1.6673211909E12, 82.99999999999999], [1.6673211827E12, 190.10000000000008], [1.6673186854E12, 191.1], [1.6673186772E12, 227.39999999999998], [1.6673211825E12, 211.4], [1.6673211907E12, 146.00000000000003], [1.6673186855E12, 163.5], [1.6673186773E12, 186.4], [1.6673211824E12, 221.3], [1.6673211906E12, 179.0], [1.6673186775E12, 310.7], [1.6673211904E12, 228.8], [1.6673211823E12, 203.50000000000003], [1.6673186856E12, 178.39999999999992], [1.6673186774E12, 190.6], [1.6673211905E12, 213.99999999999997], [1.6673186755E12, 222.60000000000002], [1.6673186837E12, 250.3], [1.6673211842E12, 264.0], [1.6673186839E12, 219.79999999999998], [1.6673186757E12, 250.20000000000002], [1.667321184E12, 196.79999999999998], [1.6673186838E12, 224.0], [1.6673186756E12, 166.70000000000005], [1.6673211841E12, 181.50000000000003], [1.6673211839E12, 264.8], [1.667318684E12, 247.5], [1.6673186758E12, 230.79999999999998], [1.6673211838E12, 165.4], [1.6673186841E12, 258.0], [1.6673186759E12, 244.5], [1.667318676E12, 255.20000000000002], [1.6673211837E12, 206.0], [1.6673186842E12, 203.0], [1.6673186762E12, 286.50000000000006], [1.6673186844E12, 200.8], [1.6673211835E12, 243.0], [1.6673186761E12, 296.8], [1.6673211836E12, 234.0], [1.6673186843E12, 220.0], [1.6673186763E12, 233.0], [1.6673186845E12, 233.8], [1.6673211834E12, 189.2], [1.6673186846E12, 280.8], [1.6673186764E12, 254.0], [1.6673211833E12, 249.4], [1.6673211852E12, 229.30000000000015], [1.6673186786E12, 247.20000000000002], [1.6673186787E12, 246.0], [1.6673211851E12, 254.6], [1.6673186789E12, 215.6], [1.6673211849E12, 302.4], [1.6673186788E12, 239.8], [1.667321185E12, 262.8], [1.667318679E12, 227.2], [1.6673211848E12, 193.79999999999998], [1.6673211847E12, 260.8], [1.6673186791E12, 278.8], [1.6673211846E12, 158.0], [1.6673186792E12, 169.0], [1.6673211844E12, 371.2], [1.6673186794E12, 228.2], [1.6673211845E12, 250.20000000000002], [1.6673186793E12, 240.8], [1.6673186795E12, 253.8], [1.6673211843E12, 177.79999999999993], [1.6673211862E12, 219.4], [1.6673186776E12, 301.70000000000005], [1.6673186858E12, 130.5], [1.6673211863E12, 219.40000000000012], [1.6673186857E12, 157.6], [1.6673211861E12, 312.2], [1.6673186777E12, 157.30000000000018], [1.6673186859E12, 92.8], [1.667318686E12, 62.2], [1.667321186E12, 165.8], [1.6673186778E12, 207.40000000000003], [1.667318678E12, 233.40000000000006], [1.6673211858E12, 227.70000000000002], [1.6673186861E12, 21.0], [1.6673186779E12, 188.0], [1.6673211859E12, 226.2], [1.6673186781E12, 186.10000000000002], [1.6673211857E12, 198.0], [1.6673186782E12, 293.6], [1.6673211856E12, 314.0], [1.6673211855E12, 246.1999999999999], [1.6673186783E12, 251.8], [1.6673211853E12, 152.6], [1.6673186785E12, 216.79999999999998], [1.6673211854E12, 277.8], [1.6673186784E12, 312.19999999999993], [1.6673186807E12, 176.8], [1.6673211872E12, 310.5], [1.6673211791E12, 214.40000000000003], [1.6673186806E12, 276.9], [1.6673211873E12, 276.0], [1.6673211789E12, 193.60000000000002], [1.6673211871E12, 266.0], [1.6673186808E12, 149.4], [1.667321179E12, 175.8], [1.6673211788E12, 161.39999999999998], [1.667321187E12, 204.8], [1.6673186809E12, 277.0], [1.6673211869E12, 231.60000000000005], [1.667318681E12, 210.70000000000002], [1.6673211787E12, 132.4], [1.6673186812E12, 268.79999999999995], [1.6673211785E12, 94.00000000000001], [1.6673211867E12, 245.5000000000002], [1.6673211868E12, 225.20000000000002], [1.6673186811E12, 311.8], [1.6673211786E12, 111.0], [1.6673186813E12, 214.4], [1.6673211784E12, 114.0], [1.6673211866E12, 244.20000000000002], [1.6673186814E12, 220.0], [1.6673211865E12, 222.5], [1.6673186734E12, 103.99999999999999], [1.6673186815E12, 157.1], [1.6673186733E12, 123.2], [1.6673211864E12, 222.79999999999998], [1.6673186796E12, 277.6], [1.6673211801E12, 200.5], [1.6673211883E12, 262.0], [1.6673186798E12, 155.4], [1.6673211881E12, 207.3], [1.6673186797E12, 225.8], [1.66732118E12, 217.40000000000003], [1.6673211882E12, 277.2], [1.6673211798E12, 365.8], [1.6673186799E12, 204.4], [1.667321188E12, 212.0], [1.6673211799E12, 309.8], [1.6673211797E12, 288.0000000000001], [1.6673211879E12, 230.4], [1.66731868E12, 296.99999999999994], [1.6673211796E12, 238.5], [1.6673211878E12, 263.50000000000006], [1.6673186801E12, 214.3], [1.6673211876E12, 259.70000000000005], [1.6673186803E12, 249.90000000000003], [1.6673211794E12, 261.2], [1.6673211877E12, 239.2], [1.6673186802E12, 245.0], [1.6673211795E12, 244.6], [1.6673186804E12, 239.40000000000003], [1.6673211793E12, 255.10000000000002], [1.6673211875E12, 244.0], [1.6673186805E12, 153.0], [1.6673211792E12, 209.0], [1.6673211874E12, 170.10000000000008]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6673186745E12, 234.0], [1.6673211893E12, 192.0], [1.6673186827E12, 282.0], [1.6673211811E12, 332.0], [1.6673186746E12, 256.0], [1.6673186828E12, 254.0], [1.6673211892E12, 313.0], [1.667321181E12, 217.0], [1.667318683E12, 202.0], [1.6673186748E12, 307.0], [1.6673211808E12, 378.0], [1.667321189E12, 222.0], [1.6673186747E12, 208.0], [1.6673186829E12, 216.0], [1.6673211809E12, 284.0], [1.6673211891E12, 231.0], [1.6673211807E12, 228.0], [1.6673186831E12, 269.0], [1.6673186749E12, 252.0], [1.6673211889E12, 347.0], [1.6673211806E12, 294.0], [1.6673186832E12, 242.0], [1.667318675E12, 284.0], [1.6673211888E12, 241.0], [1.6673211805E12, 398.0], [1.6673211887E12, 220.0], [1.6673186833E12, 280.0], [1.6673186751E12, 220.0], [1.6673186753E12, 231.0], [1.6673211885E12, 261.0], [1.6673186835E12, 213.0], [1.6673211803E12, 251.0], [1.6673186752E12, 251.0], [1.6673211804E12, 391.0], [1.6673211886E12, 260.0], [1.6673186834E12, 279.0], [1.6673186754E12, 261.0], [1.6673186836E12, 257.0], [1.6673211884E12, 267.0], [1.6673211802E12, 254.0], [1.6673211821E12, 264.0], [1.6673211903E12, 261.0], [1.6673186817E12, 285.0], [1.6673186735E12, 138.0], [1.6673211822E12, 187.0], [1.6673186816E12, 283.0], [1.6673186736E12, 230.0], [1.667321182E12, 248.0], [1.6673211902E12, 165.0], [1.6673186818E12, 271.0], [1.6673186737E12, 184.0], [1.6673211901E12, 192.0], [1.6673186819E12, 269.0], [1.6673211819E12, 374.0], [1.6673186739E12, 205.0], [1.6673186821E12, 286.0], [1.6673211817E12, 256.0], [1.6673211899E12, 220.0], [1.6673186738E12, 180.0], [1.667318682E12, 286.0], [1.66732119E12, 211.0], [1.6673211818E12, 247.0], [1.6673186822E12, 285.0], [1.667318674E12, 280.0], [1.6673211816E12, 163.0], [1.6673211898E12, 211.0], [1.6673211815E12, 207.0], [1.6673186823E12, 278.0], [1.6673186741E12, 221.0], [1.6673211897E12, 244.0], [1.6673186743E12, 237.0], [1.6673211814E12, 268.0], [1.6673186824E12, 236.0], [1.6673186742E12, 186.0], [1.6673211896E12, 297.0], [1.6673186744E12, 200.0], [1.6673211812E12, 285.0], [1.6673211894E12, 277.0], [1.6673186826E12, 349.0], [1.6673211813E12, 162.0], [1.6673211895E12, 276.0], [1.6673186825E12, 251.0], [1.6673186766E12, 209.0], [1.6673186847E12, 274.0], [1.6673186765E12, 175.0], [1.6673211832E12, 275.0], [1.667321183E12, 287.0], [1.6673186849E12, 312.0], [1.6673186767E12, 232.0], [1.6673211831E12, 316.0], [1.6673186848E12, 240.0], [1.6673186768E12, 265.0], [1.6673211829E12, 277.0], [1.6673211911E12, 24.0], [1.667318685E12, 219.0], [1.6673186769E12, 267.0], [1.6673211828E12, 295.0], [1.667321191E12, 80.0], [1.6673186851E12, 281.0], [1.6673186771E12, 272.0], [1.6673186853E12, 173.0], [1.6673211908E12, 173.0], [1.6673211826E12, 261.0], [1.667318677E12, 250.0], [1.6673186852E12, 294.0], [1.6673211909E12, 95.0], [1.6673211827E12, 258.0], [1.6673186854E12, 192.0], [1.6673186772E12, 237.0], [1.6673211825E12, 215.0], [1.6673211907E12, 164.0], [1.6673186855E12, 179.0], [1.6673186773E12, 192.0], [1.6673211824E12, 224.0], [1.6673211906E12, 179.0], [1.6673186775E12, 317.0], [1.6673211904E12, 260.0], [1.6673211823E12, 205.0], [1.6673186856E12, 252.0], [1.6673186774E12, 191.0], [1.6673211905E12, 238.0], [1.6673186755E12, 240.0], [1.6673186837E12, 262.0], [1.6673211842E12, 268.0], [1.6673186839E12, 227.0], [1.6673186757E12, 288.0], [1.667321184E12, 224.0], [1.6673186838E12, 227.0], [1.6673186756E12, 201.0], [1.6673211841E12, 199.0], [1.6673211839E12, 274.0], [1.667318684E12, 254.0], [1.6673186758E12, 238.0], [1.6673211838E12, 171.0], [1.6673186841E12, 281.0], [1.6673186759E12, 252.0], [1.667318676E12, 279.0], [1.6673211837E12, 227.0], [1.6673186842E12, 209.0], [1.6673186762E12, 298.0], [1.6673186844E12, 212.0], [1.6673211835E12, 246.0], [1.6673186761E12, 308.0], [1.6673211836E12, 244.0], [1.6673186843E12, 220.0], [1.6673186763E12, 233.0], [1.6673186845E12, 235.0], [1.6673211834E12, 192.0], [1.6673186846E12, 306.0], [1.6673186764E12, 289.0], [1.6673211833E12, 255.0], [1.6673211852E12, 384.0], [1.6673186786E12, 340.0], [1.6673186787E12, 246.0], [1.6673211851E12, 256.0], [1.6673186789E12, 224.0], [1.6673211849E12, 303.0], [1.6673186788E12, 242.0], [1.667321185E12, 266.0], [1.667318679E12, 230.0], [1.6673211848E12, 213.0], [1.6673211847E12, 270.0], [1.6673186791E12, 286.0], [1.6673211846E12, 158.0], [1.6673186792E12, 169.0], [1.6673211844E12, 373.0], [1.6673186794E12, 233.0], [1.6673211845E12, 261.0], [1.6673186793E12, 262.0], [1.6673186795E12, 258.0], [1.6673211843E12, 269.0], [1.6673211862E12, 229.0], [1.6673186776E12, 317.0], [1.6673186858E12, 132.0], [1.6673211863E12, 268.0], [1.6673186857E12, 160.0], [1.6673211861E12, 349.0], [1.6673186777E12, 268.0], [1.6673186859E12, 97.0], [1.667318686E12, 64.0], [1.667321186E12, 167.0], [1.6673186778E12, 247.0], [1.667318678E12, 345.0], [1.6673211858E12, 284.0], [1.6673186861E12, 21.0], [1.6673186779E12, 200.0], [1.6673211859E12, 228.0], [1.6673186781E12, 188.0], [1.6673211857E12, 198.0], [1.6673186782E12, 301.0], [1.6673211856E12, 356.0], [1.6673211855E12, 343.0], [1.6673186783E12, 256.0], [1.6673211853E12, 154.0], [1.6673186785E12, 238.0], [1.6673211854E12, 309.0], [1.6673186784E12, 393.0], [1.6673186807E12, 193.0], [1.6673211872E12, 319.0], [1.6673211791E12, 241.0], [1.6673186806E12, 279.0], [1.6673211873E12, 285.0], [1.6673211789E12, 223.0], [1.6673211871E12, 280.0], [1.6673186808E12, 150.0], [1.667321179E12, 180.0], [1.6673211788E12, 173.0], [1.667321187E12, 212.0], [1.6673186809E12, 289.0], [1.6673211869E12, 275.0], [1.667318681E12, 217.0], [1.6673211787E12, 133.0], [1.6673186812E12, 290.0], [1.6673211785E12, 98.0], [1.6673211867E12, 376.0], [1.6673211868E12, 233.0], [1.6673186811E12, 343.0], [1.6673211786E12, 113.0], [1.6673186813E12, 216.0], [1.6673211784E12, 114.0], [1.6673211866E12, 246.0], [1.6673186814E12, 248.0], [1.6673211865E12, 226.0], [1.6673186734E12, 116.0], [1.6673186815E12, 158.0], [1.6673186733E12, 124.0], [1.6673211864E12, 250.0], [1.6673186796E12, 289.0], [1.6673211801E12, 204.0], [1.6673211883E12, 267.0], [1.6673186798E12, 156.0], [1.6673211881E12, 222.0], [1.6673186797E12, 229.0], [1.66732118E12, 220.0], [1.6673211882E12, 279.0], [1.6673211798E12, 424.0], [1.6673186799E12, 208.0], [1.667321188E12, 224.0], [1.6673211799E12, 311.0], [1.6673211797E12, 311.0], [1.6673211879E12, 249.0], [1.66731868E12, 337.0], [1.6673211796E12, 240.0], [1.6673211878E12, 277.0], [1.6673186801E12, 220.0], [1.6673211876E12, 293.0], [1.6673186803E12, 295.0], [1.6673211794E12, 266.0], [1.6673211877E12, 260.0], [1.6673186802E12, 245.0], [1.6673211795E12, 246.0], [1.6673186804E12, 261.0], [1.6673211793E12, 265.0], [1.6673211875E12, 260.0], [1.6673186805E12, 153.0], [1.6673211792E12, 218.0], [1.6673211874E12, 225.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6673186745E12, 234.0], [1.6673211893E12, 191.85], [1.6673186827E12, 282.0], [1.6673211811E12, 332.0], [1.6673186746E12, 256.0], [1.6673186828E12, 254.0], [1.6673211892E12, 313.0], [1.667321181E12, 217.0], [1.667318683E12, 202.0], [1.6673186748E12, 307.0], [1.6673211808E12, 378.0], [1.667321189E12, 222.0], [1.6673186747E12, 208.0], [1.6673186829E12, 216.0], [1.6673211809E12, 281.79999999999995], [1.6673211891E12, 231.0], [1.6673211807E12, 228.0], [1.6673186831E12, 269.0], [1.6673186749E12, 252.0], [1.6673211889E12, 347.0], [1.6673211806E12, 294.0], [1.6673186832E12, 242.0], [1.667318675E12, 284.0], [1.6673211888E12, 241.0], [1.6673211805E12, 398.0], [1.6673211887E12, 220.0], [1.6673186833E12, 280.0], [1.6673186751E12, 220.0], [1.6673186753E12, 231.0], [1.6673211885E12, 261.0], [1.6673186835E12, 213.0], [1.6673211803E12, 251.0], [1.6673186752E12, 251.0], [1.6673211804E12, 391.0], [1.6673211886E12, 260.0], [1.6673186834E12, 279.0], [1.6673186754E12, 261.0], [1.6673186836E12, 257.0], [1.6673211884E12, 267.0], [1.6673211802E12, 254.0], [1.6673211821E12, 264.0], [1.6673211903E12, 258.44999999999993], [1.6673186817E12, 285.0], [1.6673186735E12, 138.0], [1.6673211822E12, 187.0], [1.6673186816E12, 283.0], [1.6673186736E12, 230.0], [1.667321182E12, 248.0], [1.6673211902E12, 165.0], [1.6673186818E12, 271.0], [1.6673186737E12, 184.0], [1.6673211901E12, 192.0], [1.6673186819E12, 269.0], [1.6673211819E12, 374.0], [1.6673186739E12, 205.0], [1.6673186821E12, 286.0], [1.6673211817E12, 256.0], [1.6673211899E12, 220.0], [1.6673186738E12, 180.0], [1.667318682E12, 286.0], [1.66732119E12, 211.0], [1.6673211818E12, 247.0], [1.6673186822E12, 285.0], [1.667318674E12, 280.0], [1.6673211816E12, 163.0], [1.6673211898E12, 211.0], [1.6673211815E12, 207.0], [1.6673186823E12, 278.0], [1.6673186741E12, 221.0], [1.6673211897E12, 244.0], [1.6673186743E12, 237.0], [1.6673211814E12, 266.9], [1.6673186824E12, 236.0], [1.6673186742E12, 186.0], [1.6673211896E12, 297.0], [1.6673186744E12, 200.0], [1.6673211812E12, 285.0], [1.6673211894E12, 277.0], [1.6673186826E12, 349.0], [1.6673211813E12, 162.0], [1.6673211895E12, 276.0], [1.6673186825E12, 251.0], [1.6673186766E12, 209.0], [1.6673186847E12, 274.0], [1.6673186765E12, 175.0], [1.6673211832E12, 275.0], [1.667321183E12, 287.0], [1.6673186849E12, 312.0], [1.6673186767E12, 232.0], [1.6673211831E12, 316.0], [1.6673186848E12, 240.0], [1.6673186768E12, 265.0], [1.6673211829E12, 277.0], [1.6673211911E12, 24.0], [1.667318685E12, 219.0], [1.6673186769E12, 267.0], [1.6673211828E12, 295.0], [1.667321191E12, 80.0], [1.6673186851E12, 281.0], [1.6673186771E12, 272.0], [1.6673186853E12, 173.0], [1.6673211908E12, 173.0], [1.6673211826E12, 261.0], [1.667318677E12, 250.0], [1.6673186852E12, 287.6499999999999], [1.6673211909E12, 95.0], [1.6673211827E12, 258.0], [1.6673186854E12, 192.0], [1.6673186772E12, 237.0], [1.6673211825E12, 215.0], [1.6673211907E12, 164.0], [1.6673186855E12, 179.0], [1.6673186773E12, 192.0], [1.6673211824E12, 224.0], [1.6673211906E12, 179.0], [1.6673186775E12, 317.0], [1.6673211904E12, 260.0], [1.6673211823E12, 205.0], [1.6673186856E12, 252.0], [1.6673186774E12, 191.0], [1.6673211905E12, 238.0], [1.6673186755E12, 238.7], [1.6673186837E12, 262.0], [1.6673211842E12, 268.0], [1.6673186839E12, 227.0], [1.6673186757E12, 284.4], [1.667321184E12, 224.0], [1.6673186838E12, 227.0], [1.6673186756E12, 201.0], [1.6673211841E12, 199.0], [1.6673211839E12, 274.0], [1.667318684E12, 254.0], [1.6673186758E12, 238.0], [1.6673211838E12, 171.0], [1.6673186841E12, 281.0], [1.6673186759E12, 252.0], [1.667318676E12, 279.0], [1.6673211837E12, 227.0], [1.6673186842E12, 209.0], [1.6673186762E12, 297.5], [1.6673186844E12, 212.0], [1.6673211835E12, 246.0], [1.6673186761E12, 308.0], [1.6673211836E12, 244.0], [1.6673186843E12, 220.0], [1.6673186763E12, 233.0], [1.6673186845E12, 235.0], [1.6673211834E12, 192.0], [1.6673186846E12, 306.0], [1.6673186764E12, 285.0], [1.6673211833E12, 255.0], [1.6673211852E12, 384.0], [1.6673186786E12, 331.39999999999986], [1.6673186787E12, 246.0], [1.6673211851E12, 256.0], [1.6673186789E12, 224.0], [1.6673211849E12, 303.0], [1.6673186788E12, 241.9], [1.667321185E12, 266.0], [1.667318679E12, 230.0], [1.6673211848E12, 213.0], [1.6673211847E12, 269.09999999999997], [1.6673186791E12, 286.0], [1.6673211846E12, 158.0], [1.6673186792E12, 169.0], [1.6673211844E12, 373.0], [1.6673186794E12, 233.0], [1.6673211845E12, 261.0], [1.6673186793E12, 259.9], [1.6673186795E12, 258.0], [1.6673211843E12, 269.0], [1.6673211862E12, 229.0], [1.6673186776E12, 317.0], [1.6673186858E12, 132.0], [1.6673211863E12, 265.84999999999997], [1.6673186857E12, 160.0], [1.6673211861E12, 349.0], [1.6673186777E12, 268.0], [1.6673186859E12, 97.0], [1.667318686E12, 64.0], [1.667321186E12, 167.0], [1.6673186778E12, 247.0], [1.667318678E12, 345.0], [1.6673211858E12, 281.19999999999993], [1.6673186861E12, 21.0], [1.6673186779E12, 200.0], [1.6673211859E12, 227.9], [1.6673186781E12, 188.0], [1.6673211857E12, 198.0], [1.6673186782E12, 301.0], [1.6673211856E12, 356.0], [1.6673211855E12, 343.0], [1.6673186783E12, 256.0], [1.6673211853E12, 154.0], [1.6673186785E12, 238.0], [1.6673211854E12, 309.0], [1.6673186784E12, 393.0], [1.6673186807E12, 193.0], [1.6673211872E12, 319.0], [1.6673211791E12, 241.0], [1.6673186806E12, 279.0], [1.6673211873E12, 285.0], [1.6673211789E12, 223.0], [1.6673211871E12, 280.0], [1.6673186808E12, 150.0], [1.667321179E12, 180.0], [1.6673211788E12, 173.0], [1.667321187E12, 212.0], [1.6673186809E12, 289.0], [1.6673211869E12, 275.0], [1.667318681E12, 217.0], [1.6673211787E12, 133.0], [1.6673186812E12, 290.0], [1.6673211785E12, 98.0], [1.6673211867E12, 376.0], [1.6673211868E12, 233.0], [1.6673186811E12, 343.0], [1.6673211786E12, 113.0], [1.6673186813E12, 216.0], [1.6673211784E12, 114.0], [1.6673211866E12, 246.0], [1.6673186814E12, 248.0], [1.6673211865E12, 226.0], [1.6673186734E12, 116.0], [1.6673186815E12, 158.0], [1.6673186733E12, 124.0], [1.6673211864E12, 250.0], [1.6673186796E12, 289.0], [1.6673211801E12, 204.0], [1.6673211883E12, 267.0], [1.6673186798E12, 156.0], [1.6673211881E12, 222.0], [1.6673186797E12, 228.8], [1.66732118E12, 219.95], [1.6673211882E12, 279.0], [1.6673211798E12, 424.0], [1.6673186799E12, 208.0], [1.667321188E12, 224.0], [1.6673211799E12, 311.0], [1.6673211797E12, 311.0], [1.6673211879E12, 249.0], [1.66731868E12, 337.0], [1.6673211796E12, 240.0], [1.6673211878E12, 277.0], [1.6673186801E12, 220.0], [1.6673211876E12, 293.0], [1.6673186803E12, 292.79999999999995], [1.6673211794E12, 266.0], [1.6673211877E12, 260.0], [1.6673186802E12, 245.0], [1.6673211795E12, 246.0], [1.6673186804E12, 261.0], [1.6673211793E12, 265.0], [1.6673211875E12, 260.0], [1.6673186805E12, 153.0], [1.6673211792E12, 218.0], [1.6673211874E12, 225.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6673186745E12, 60.0], [1.6673211893E12, 76.0], [1.6673186827E12, 93.0], [1.6673211811E12, 80.0], [1.6673186746E12, 79.0], [1.6673186828E12, 62.0], [1.6673211892E12, 92.0], [1.667321181E12, 89.0], [1.667318683E12, 45.0], [1.6673186748E12, 82.0], [1.6673211808E12, 92.0], [1.667321189E12, 68.0], [1.6673186747E12, 94.0], [1.6673186829E12, 133.0], [1.6673211809E12, 93.0], [1.6673211891E12, 70.0], [1.6673211807E12, 55.0], [1.6673186831E12, 59.0], [1.6673186749E12, 65.0], [1.6673211889E12, 99.0], [1.6673211806E12, 128.0], [1.6673186832E12, 123.0], [1.667318675E12, 101.0], [1.6673211888E12, 64.0], [1.6673211805E12, 51.0], [1.6673211887E12, 72.0], [1.6673186833E12, 127.0], [1.6673186751E12, 37.0], [1.6673186753E12, 93.0], [1.6673211885E12, 104.0], [1.6673186835E12, 80.0], [1.6673211803E12, 121.0], [1.6673186752E12, 92.0], [1.6673211804E12, 64.0], [1.6673211886E12, 111.0], [1.6673186834E12, 80.0], [1.6673186754E12, 61.0], [1.6673186836E12, 78.0], [1.6673211884E12, 39.0], [1.6673211802E12, 74.0], [1.6673211821E12, 121.0], [1.6673211903E12, 82.0], [1.6673186817E12, 122.0], [1.6673186735E12, 25.0], [1.6673211822E12, 48.0], [1.6673186816E12, 143.0], [1.6673186736E12, 84.0], [1.667321182E12, 67.0], [1.6673211902E12, 93.0], [1.6673186818E12, 118.0], [1.6673186737E12, 88.0], [1.6673211901E12, 92.0], [1.6673186819E12, 49.0], [1.6673211819E12, 75.0], [1.6673186739E12, 108.0], [1.6673186821E12, 105.0], [1.6673211817E12, 39.0], [1.6673211899E12, 85.0], [1.6673186738E12, 78.0], [1.667318682E12, 62.0], [1.66732119E12, 103.0], [1.6673211818E12, 52.0], [1.6673186822E12, 96.0], [1.667318674E12, 138.0], [1.6673211816E12, 125.0], [1.6673211898E12, 71.0], [1.6673211815E12, 107.0], [1.6673186823E12, 42.0], [1.6673186741E12, 132.0], [1.6673211897E12, 63.0], [1.6673186743E12, 89.0], [1.6673211814E12, 87.0], [1.6673186824E12, 36.0], [1.6673186742E12, 92.0], [1.6673211896E12, 108.0], [1.6673186744E12, 94.0], [1.6673211812E12, 101.0], [1.6673211894E12, 110.0], [1.6673186826E12, 96.0], [1.6673211813E12, 101.0], [1.6673211895E12, 74.0], [1.6673186825E12, 84.0], [1.6673186766E12, 19.0], [1.6673186847E12, 69.0], [1.6673186765E12, 68.0], [1.6673211832E12, 108.0], [1.667321183E12, 23.0], [1.6673186849E12, 89.0], [1.6673186767E12, 101.0], [1.6673211831E12, 95.0], [1.6673186848E12, 76.0], [1.6673186768E12, 33.0], [1.6673211829E12, 83.0], [1.6673211911E12, 15.0], [1.667318685E12, 73.0], [1.6673186769E12, 43.0], [1.6673211828E12, 131.0], [1.667321191E12, 18.0], [1.6673186851E12, 102.0], [1.6673186771E12, 84.0], [1.6673186853E12, 48.0], [1.6673211908E12, 31.0], [1.6673211826E12, 24.0], [1.667318677E12, 63.0], [1.6673186852E12, 78.0], [1.6673211909E12, 25.0], [1.6673211827E12, 118.0], [1.6673186854E12, 69.0], [1.6673186772E12, 91.0], [1.6673211825E12, 109.0], [1.6673211907E12, 35.0], [1.6673186855E12, 62.0], [1.6673186773E12, 22.0], [1.6673211824E12, 48.0], [1.6673211906E12, 25.0], [1.6673186775E12, 135.0], [1.6673211904E12, 87.0], [1.6673211823E12, 43.0], [1.6673186856E12, 63.0], [1.6673186774E12, 152.0], [1.6673211905E12, 47.0], [1.6673186755E12, 31.0], [1.6673186837E12, 133.0], [1.6673211842E12, 122.0], [1.6673186839E12, 107.0], [1.6673186757E12, 92.0], [1.667321184E12, 79.0], [1.6673186838E12, 102.0], [1.6673186756E12, 46.0], [1.6673211841E12, 41.0], [1.6673211839E12, 75.0], [1.667318684E12, 77.0], [1.6673186758E12, 49.0], [1.6673211838E12, 104.0], [1.6673186841E12, 98.0], [1.6673186759E12, 109.0], [1.667318676E12, 75.0], [1.6673211837E12, 33.0], [1.6673186842E12, 85.0], [1.6673186762E12, 44.0], [1.6673186844E12, 64.0], [1.6673211835E12, 91.0], [1.6673186761E12, 39.0], [1.6673211836E12, 123.0], [1.6673186843E12, 102.0], [1.6673186763E12, 116.0], [1.6673186845E12, 123.0], [1.6673211834E12, 123.0], [1.6673186846E12, 77.0], [1.6673186764E12, 113.0], [1.6673211833E12, 95.0], [1.6673211852E12, 103.0], [1.6673186786E12, 88.0], [1.6673186787E12, 60.0], [1.6673211851E12, 97.0], [1.6673186789E12, 40.0], [1.6673211849E12, 120.0], [1.6673186788E12, 105.0], [1.667321185E12, 91.0], [1.667318679E12, 115.0], [1.6673211848E12, 109.0], [1.6673211847E12, 49.0], [1.6673186791E12, 57.0], [1.6673211846E12, 81.0], [1.6673186792E12, 124.0], [1.6673211844E12, 119.0], [1.6673186794E12, 102.0], [1.6673211845E12, 87.0], [1.6673186793E12, 104.0], [1.6673186795E12, 35.0], [1.6673211843E12, 117.0], [1.6673211862E12, 49.0], [1.6673186776E12, 115.0], [1.6673186858E12, 39.0], [1.6673211863E12, 122.0], [1.6673186857E12, 61.0], [1.6673211861E12, 20.0], [1.6673186777E12, 82.0], [1.6673186859E12, 32.0], [1.667318686E12, 24.0], [1.667321186E12, 87.0], [1.6673186778E12, 89.0], [1.667318678E12, 29.0], [1.6673211858E12, 129.0], [1.6673186861E12, 21.0], [1.6673186779E12, 121.0], [1.6673211859E12, 106.0], [1.6673186781E12, 65.0], [1.6673211857E12, 105.0], [1.6673186782E12, 26.0], [1.6673211856E12, 133.0], [1.6673211855E12, 109.0], [1.6673186783E12, 87.0], [1.6673211853E12, 120.0], [1.6673186785E12, 67.0], [1.6673211854E12, 100.0], [1.6673186784E12, 98.0], [1.6673186807E12, 104.0], [1.6673211872E12, 99.0], [1.6673211791E12, 95.0], [1.6673186806E12, 114.0], [1.6673211873E12, 125.0], [1.6673211789E12, 79.0], [1.6673211871E12, 94.0], [1.6673186808E12, 47.0], [1.667321179E12, 65.0], [1.6673211788E12, 49.0], [1.667321187E12, 26.0], [1.6673186809E12, 120.0], [1.6673211869E12, 89.0], [1.667318681E12, 45.0], [1.6673211787E12, 67.0], [1.6673186812E12, 121.0], [1.6673211785E12, 28.0], [1.6673211867E12, 50.0], [1.6673211868E12, 114.0], [1.6673186811E12, 84.0], [1.6673211786E12, 40.0], [1.6673186813E12, 67.0], [1.6673211784E12, 37.0], [1.6673211866E12, 121.0], [1.6673186814E12, 106.0], [1.6673211865E12, 105.0], [1.6673186734E12, 35.0], [1.6673186815E12, 137.0], [1.6673186733E12, 33.0], [1.6673211864E12, 38.0], [1.6673186796E12, 110.0], [1.6673211801E12, 94.0], [1.6673211883E12, 120.0], [1.6673186798E12, 27.0], [1.6673211881E12, 129.0], [1.6673186797E12, 81.0], [1.66732118E12, 99.0], [1.6673211882E12, 116.0], [1.6673211798E12, 53.0], [1.6673186799E12, 80.0], [1.667321188E12, 33.0], [1.6673211799E12, 99.0], [1.6673211797E12, 95.0], [1.6673211879E12, 100.0], [1.66731868E12, 103.0], [1.6673211796E12, 30.0], [1.6673211878E12, 96.0], [1.6673186801E12, 111.0], [1.6673211876E12, 104.0], [1.6673186803E12, 61.0], [1.6673211794E12, 119.0], [1.6673211877E12, 109.0], [1.6673186802E12, 53.0], [1.6673211795E12, 112.0], [1.6673186804E12, 40.0], [1.6673211793E12, 112.0], [1.6673211875E12, 60.0], [1.6673186805E12, 56.0], [1.6673211792E12, 30.0], [1.6673211874E12, 38.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6673186745E12, 156.0], [1.6673211893E12, 148.0], [1.6673186827E12, 186.0], [1.6673211811E12, 197.5], [1.6673186746E12, 144.0], [1.6673186828E12, 163.0], [1.6673211892E12, 160.5], [1.667321181E12, 120.5], [1.667318683E12, 151.0], [1.6673186748E12, 137.0], [1.6673211808E12, 230.0], [1.667321189E12, 176.0], [1.6673186747E12, 128.0], [1.6673186829E12, 151.5], [1.6673211809E12, 177.0], [1.6673211891E12, 145.5], [1.6673211807E12, 117.0], [1.6673186831E12, 160.0], [1.6673186749E12, 137.0], [1.6673211889E12, 162.0], [1.6673211806E12, 143.0], [1.6673186832E12, 184.0], [1.667318675E12, 152.0], [1.6673211888E12, 122.5], [1.6673211805E12, 138.0], [1.6673211887E12, 149.0], [1.6673186833E12, 144.0], [1.6673186751E12, 127.0], [1.6673186753E12, 142.0], [1.6673211885E12, 147.0], [1.6673186835E12, 153.0], [1.6673211803E12, 132.0], [1.6673186752E12, 164.5], [1.6673211804E12, 144.0], [1.6673211886E12, 129.0], [1.6673186834E12, 146.0], [1.6673186754E12, 168.5], [1.6673186836E12, 147.5], [1.6673211884E12, 131.0], [1.6673211802E12, 135.5], [1.6673211821E12, 186.0], [1.6673211903E12, 117.5], [1.6673186817E12, 148.0], [1.6673186735E12, 85.0], [1.6673211822E12, 137.5], [1.6673186816E12, 155.0], [1.6673186736E12, 123.0], [1.667321182E12, 166.5], [1.6673211902E12, 114.0], [1.6673186818E12, 136.0], [1.6673186737E12, 98.5], [1.6673211901E12, 140.5], [1.6673186819E12, 145.0], [1.6673211819E12, 143.5], [1.6673186739E12, 146.0], [1.6673186821E12, 172.0], [1.6673211817E12, 133.0], [1.6673211899E12, 158.5], [1.6673186738E12, 106.5], [1.667318682E12, 154.0], [1.66732119E12, 143.0], [1.6673211818E12, 135.0], [1.6673186822E12, 154.0], [1.667318674E12, 191.5], [1.6673211816E12, 143.0], [1.6673211898E12, 166.5], [1.6673211815E12, 139.0], [1.6673186823E12, 170.5], [1.6673186741E12, 172.0], [1.6673211897E12, 148.5], [1.6673186743E12, 171.0], [1.6673211814E12, 155.0], [1.6673186824E12, 147.0], [1.6673186742E12, 146.5], [1.6673211896E12, 125.0], [1.6673186744E12, 152.0], [1.6673211812E12, 115.0], [1.6673211894E12, 134.0], [1.6673186826E12, 164.0], [1.6673211813E12, 133.0], [1.6673211895E12, 150.0], [1.6673186825E12, 140.0], [1.6673186766E12, 130.5], [1.6673186847E12, 157.0], [1.6673186765E12, 99.0], [1.6673211832E12, 132.0], [1.667321183E12, 141.0], [1.6673186849E12, 143.0], [1.6673186767E12, 177.0], [1.6673211831E12, 144.0], [1.6673186848E12, 185.0], [1.6673186768E12, 142.0], [1.6673211829E12, 150.0], [1.6673211911E12, 19.5], [1.667318685E12, 127.0], [1.6673186769E12, 140.0], [1.6673211828E12, 152.5], [1.667321191E12, 36.5], [1.6673186851E12, 137.5], [1.6673186771E12, 162.0], [1.6673186853E12, 110.5], [1.6673211908E12, 101.0], [1.6673211826E12, 132.0], [1.667318677E12, 138.0], [1.6673186852E12, 147.0], [1.6673211909E12, 60.0], [1.6673211827E12, 141.5], [1.6673186854E12, 103.0], [1.6673186772E12, 174.0], [1.6673211825E12, 169.5], [1.6673211907E12, 106.5], [1.6673186855E12, 131.0], [1.6673186773E12, 156.5], [1.6673211824E12, 142.0], [1.6673211906E12, 124.0], [1.6673186775E12, 162.0], [1.6673211904E12, 118.0], [1.6673211823E12, 148.0], [1.6673186856E12, 87.0], [1.6673186774E12, 175.0], [1.6673211905E12, 100.0], [1.6673186755E12, 136.0], [1.6673186837E12, 146.5], [1.6673211842E12, 135.0], [1.6673186839E12, 140.0], [1.6673186757E12, 135.0], [1.667321184E12, 142.0], [1.6673186838E12, 139.0], [1.6673186756E12, 137.0], [1.6673211841E12, 148.5], [1.6673211839E12, 230.0], [1.667318684E12, 136.5], [1.6673186758E12, 132.0], [1.6673211838E12, 116.0], [1.6673186841E12, 161.0], [1.6673186759E12, 178.0], [1.667318676E12, 148.5], [1.6673211837E12, 138.0], [1.6673186842E12, 156.0], [1.6673186762E12, 134.5], [1.6673186844E12, 143.0], [1.6673211835E12, 159.0], [1.6673186761E12, 196.0], [1.6673211836E12, 178.0], [1.6673186843E12, 183.0], [1.6673186763E12, 127.0], [1.6673186845E12, 148.0], [1.6673211834E12, 149.5], [1.6673186846E12, 130.0], [1.6673186764E12, 183.5], [1.6673211833E12, 158.0], [1.6673211852E12, 140.0], [1.6673186786E12, 180.0], [1.6673186787E12, 165.0], [1.6673211851E12, 208.0], [1.6673186789E12, 138.0], [1.6673211849E12, 141.0], [1.6673186788E12, 186.5], [1.667321185E12, 169.0], [1.667318679E12, 148.0], [1.6673211848E12, 130.0], [1.6673211847E12, 190.0], [1.6673186791E12, 147.5], [1.6673211846E12, 139.0], [1.6673186792E12, 144.0], [1.6673211844E12, 132.0], [1.6673186794E12, 131.0], [1.6673211845E12, 147.0], [1.6673186793E12, 193.0], [1.6673186795E12, 161.0], [1.6673211843E12, 143.0], [1.6673211862E12, 151.0], [1.6673186776E12, 134.0], [1.6673186858E12, 87.0], [1.6673211863E12, 142.5], [1.6673186857E12, 88.0], [1.6673211861E12, 194.0], [1.6673186777E12, 129.0], [1.6673186859E12, 58.0], [1.667318686E12, 39.0], [1.667321186E12, 143.5], [1.6673186778E12, 152.0], [1.667318678E12, 144.0], [1.6673211858E12, 159.0], [1.6673186861E12, 21.0], [1.6673186779E12, 137.0], [1.6673211859E12, 135.0], [1.6673186781E12, 158.0], [1.6673211857E12, 158.0], [1.6673186782E12, 188.0], [1.6673211856E12, 150.0], [1.6673211855E12, 133.0], [1.6673186783E12, 123.0], [1.6673211853E12, 140.0], [1.6673186785E12, 151.0], [1.6673211854E12, 147.0], [1.6673186784E12, 136.0], [1.6673186807E12, 122.5], [1.6673211872E12, 163.0], [1.6673211791E12, 139.0], [1.6673186806E12, 178.0], [1.6673211873E12, 167.0], [1.6673211789E12, 105.0], [1.6673211871E12, 155.5], [1.6673186808E12, 137.0], [1.667321179E12, 118.5], [1.6673211788E12, 101.0], [1.667321187E12, 139.0], [1.6673186809E12, 197.5], [1.6673211869E12, 150.0], [1.667318681E12, 144.5], [1.6673211787E12, 93.0], [1.6673186812E12, 170.0], [1.6673211785E12, 55.0], [1.6673211867E12, 175.5], [1.6673211868E12, 176.5], [1.6673186811E12, 138.0], [1.6673211786E12, 80.0], [1.6673186813E12, 176.0], [1.6673211784E12, 100.0], [1.6673211866E12, 140.5], [1.6673186814E12, 138.0], [1.6673211865E12, 117.5], [1.6673186734E12, 67.0], [1.6673186815E12, 148.5], [1.6673186733E12, 67.0], [1.6673211864E12, 141.0], [1.6673186796E12, 186.0], [1.6673211801E12, 135.0], [1.6673211883E12, 133.5], [1.6673186798E12, 137.0], [1.6673211881E12, 157.5], [1.6673186797E12, 135.0], [1.66732118E12, 184.5], [1.6673211882E12, 139.0], [1.6673211798E12, 164.0], [1.6673186799E12, 151.0], [1.667321188E12, 161.0], [1.6673211799E12, 178.5], [1.6673211797E12, 164.0], [1.6673211879E12, 170.0], [1.66731868E12, 219.0], [1.6673211796E12, 166.5], [1.6673211878E12, 187.5], [1.6673186801E12, 121.5], [1.6673211876E12, 147.0], [1.6673186803E12, 162.0], [1.6673211794E12, 154.0], [1.6673211877E12, 155.0], [1.6673186802E12, 145.0], [1.6673211795E12, 181.5], [1.6673186804E12, 140.5], [1.6673211793E12, 148.0], [1.6673211875E12, 151.0], [1.6673186805E12, 142.0], [1.6673211792E12, 146.0], [1.6673211874E12, 137.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673211911E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 19.0, "maxY": 162.0, "series": [{"data": [[142.0, 161.0], [151.0, 150.0], [148.0, 162.0], [150.0, 151.0], [158.0, 151.5], [155.0, 149.0], [159.0, 149.0], [157.0, 144.0], [156.0, 148.0], [163.0, 133.5], [162.0, 145.0], [161.0, 143.0], [160.0, 146.0], [165.0, 140.0], [171.0, 116.0], [19.0, 38.0], [76.0, 98.5], [22.0, 32.0], [92.0, 102.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 171.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 32.0, "minX": 19.0, "maxY": 162.0, "series": [{"data": [[142.0, 161.0], [151.0, 149.0], [148.0, 162.0], [150.0, 150.0], [158.0, 151.5], [155.0, 149.0], [159.0, 149.0], [157.0, 144.0], [156.0, 148.0], [163.0, 133.5], [162.0, 145.0], [161.0, 143.0], [160.0, 146.0], [165.0, 140.0], [171.0, 116.0], [19.0, 38.0], [76.0, 97.5], [22.0, 32.0], [92.0, 99.5]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 171.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 20.0, "minX": 1.6673186732E12, "maxY": 240.0, "series": [{"data": [[1.6673186745E12, 160.0], [1.6673211893E12, 200.0], [1.6673186827E12, 140.0], [1.6673211811E12, 180.0], [1.6673186746E12, 170.0], [1.6673186828E12, 150.0], [1.6673211892E12, 160.0], [1.667321181E12, 120.0], [1.667318683E12, 170.0], [1.6673186748E12, 150.0], [1.6673211808E12, 100.0], [1.667321189E12, 140.0], [1.6673186747E12, 170.0], [1.6673186829E12, 160.0], [1.6673211809E12, 210.0], [1.6673211891E12, 140.0], [1.6673211807E12, 150.0], [1.6673186831E12, 140.0], [1.6673186749E12, 190.0], [1.6673211889E12, 160.0], [1.6673211806E12, 150.0], [1.6673186832E12, 120.0], [1.667318675E12, 170.0], [1.6673211888E12, 180.0], [1.6673211805E12, 130.0], [1.6673211887E12, 170.0], [1.6673186833E12, 170.0], [1.6673186751E12, 150.0], [1.6673186753E12, 130.0], [1.6673211885E12, 150.0], [1.6673186835E12, 170.0], [1.6673211803E12, 150.0], [1.6673186752E12, 140.0], [1.6673211804E12, 190.0], [1.6673211886E12, 160.0], [1.6673186834E12, 150.0], [1.6673186754E12, 180.0], [1.6673186836E12, 160.0], [1.6673211884E12, 190.0], [1.6673211802E12, 180.0], [1.6673211821E12, 170.0], [1.6673211903E12, 180.0], [1.6673186817E12, 150.0], [1.6673186735E12, 100.0], [1.6673211822E12, 140.0], [1.6673186816E12, 140.0], [1.6673186736E12, 180.0], [1.667321182E12, 160.0], [1.6673211902E12, 150.0], [1.6673186818E12, 160.0], [1.6673186737E12, 180.0], [1.6673211901E12, 180.0], [1.6673186819E12, 180.0], [1.6673211819E12, 160.0], [1.6673186739E12, 140.0], [1.6673186821E12, 170.0], [1.6673211817E12, 180.0], [1.6673211899E12, 160.0], [1.6673186738E12, 140.0], [1.667318682E12, 120.0], [1.66732119E12, 150.0], [1.6673211818E12, 140.0], [1.6673186822E12, 130.0], [1.667318674E12, 140.0], [1.6673211816E12, 150.0], [1.6673211898E12, 160.0], [1.6673211815E12, 150.0], [1.6673186823E12, 120.0], [1.6673186741E12, 170.0], [1.6673211897E12, 140.0], [1.6673186743E12, 150.0], [1.6673211814E12, 210.0], [1.6673186824E12, 190.0], [1.6673186742E12, 140.0], [1.6673211896E12, 160.0], [1.6673186744E12, 190.0], [1.6673211812E12, 180.0], [1.6673211894E12, 150.0], [1.6673186826E12, 150.0], [1.6673211813E12, 140.0], [1.6673211895E12, 180.0], [1.6673186825E12, 150.0], [1.6673186766E12, 140.0], [1.6673186847E12, 110.0], [1.6673186765E12, 170.0], [1.6673211832E12, 140.0], [1.667321183E12, 190.0], [1.6673186849E12, 170.0], [1.6673186767E12, 170.0], [1.6673211831E12, 150.0], [1.6673186848E12, 170.0], [1.6673186768E12, 160.0], [1.6673211829E12, 180.0], [1.6673211911E12, 20.0], [1.667318685E12, 170.0], [1.6673186769E12, 160.0], [1.6673211828E12, 120.0], [1.667321191E12, 120.0], [1.6673186851E12, 140.0], [1.6673186771E12, 170.0], [1.6673186853E12, 160.0], [1.6673211908E12, 150.0], [1.6673211826E12, 190.0], [1.667318677E12, 140.0], [1.6673186852E12, 160.0], [1.6673211909E12, 130.0], [1.6673211827E12, 160.0], [1.6673186854E12, 160.0], [1.6673186772E12, 160.0], [1.6673211825E12, 180.0], [1.6673211907E12, 140.0], [1.6673186855E12, 140.0], [1.6673186773E12, 170.0], [1.6673211824E12, 120.0], [1.6673211906E12, 170.0], [1.6673186775E12, 160.0], [1.6673211904E12, 140.0], [1.6673211823E12, 200.0], [1.6673186856E12, 160.0], [1.6673186774E12, 100.0], [1.6673211905E12, 170.0], [1.6673186755E12, 210.0], [1.6673186837E12, 180.0], [1.6673211842E12, 140.0], [1.6673186839E12, 170.0], [1.6673186757E12, 210.0], [1.667321184E12, 170.0], [1.6673186838E12, 140.0], [1.6673186756E12, 160.0], [1.6673211841E12, 160.0], [1.6673211839E12, 130.0], [1.667318684E12, 140.0], [1.6673186758E12, 130.0], [1.6673211838E12, 170.0], [1.6673186841E12, 190.0], [1.6673186759E12, 140.0], [1.667318676E12, 160.0], [1.6673211837E12, 190.0], [1.6673186842E12, 130.0], [1.6673186762E12, 200.0], [1.6673186844E12, 170.0], [1.6673211835E12, 110.0], [1.6673186761E12, 130.0], [1.6673211836E12, 190.0], [1.6673186843E12, 160.0], [1.6673186763E12, 90.0], [1.6673186845E12, 150.0], [1.6673211834E12, 160.0], [1.6673186846E12, 160.0], [1.6673186764E12, 240.0], [1.6673211833E12, 170.0], [1.6673211852E12, 160.0], [1.6673186786E12, 210.0], [1.6673186787E12, 90.0], [1.6673211851E12, 160.0], [1.6673186789E12, 130.0], [1.6673211849E12, 150.0], [1.6673186788E12, 200.0], [1.667321185E12, 130.0], [1.667318679E12, 160.0], [1.6673211848E12, 170.0], [1.6673211847E12, 210.0], [1.6673186791E12, 180.0], [1.6673211846E12, 70.0], [1.6673186792E12, 50.0], [1.6673211844E12, 180.0], [1.6673186794E12, 130.0], [1.6673211845E12, 150.0], [1.6673186793E12, 210.0], [1.6673186795E12, 160.0], [1.6673211843E12, 170.0], [1.6673211862E12, 160.0], [1.6673186776E12, 180.0], [1.6673186858E12, 120.0], [1.6673211863E12, 200.0], [1.6673186857E12, 130.0], [1.6673211861E12, 160.0], [1.6673186777E12, 180.0], [1.6673186859E12, 120.0], [1.667318686E12, 120.0], [1.667321186E12, 120.0], [1.6673186778E12, 150.0], [1.667318678E12, 150.0], [1.6673211858E12, 200.0], [1.6673186779E12, 170.0], [1.6673211859E12, 210.0], [1.6673186781E12, 100.0], [1.6673211857E12, 80.0], [1.6673186782E12, 210.0], [1.6673211856E12, 140.0], [1.6673211855E12, 170.0], [1.6673186783E12, 160.0], [1.6673211853E12, 160.0], [1.6673186785E12, 130.0], [1.6673211854E12, 150.0], [1.6673186784E12, 170.0], [1.6673186807E12, 180.0], [1.6673211872E12, 140.0], [1.6673211791E12, 160.0], [1.6673186806E12, 160.0], [1.6673211873E12, 150.0], [1.6673211789E12, 190.0], [1.6673211871E12, 140.0], [1.6673186808E12, 150.0], [1.667321179E12, 190.0], [1.6673211788E12, 150.0], [1.667321187E12, 180.0], [1.6673186809E12, 140.0], [1.6673211869E12, 160.0], [1.667318681E12, 160.0], [1.6673211787E12, 180.0], [1.6673186812E12, 130.0], [1.6673211785E12, 130.0], [1.6673211867E12, 180.0], [1.6673211868E12, 120.0], [1.6673186811E12, 150.0], [1.6673211786E12, 160.0], [1.6673186813E12, 170.0], [1.6673211784E12, 110.0], [1.6673211866E12, 120.0], [1.6673211783E12, 60.0], [1.6673186814E12, 190.0], [1.6673186732E12, 80.0], [1.6673211865E12, 160.0], [1.6673186734E12, 150.0], [1.6673186815E12, 120.0], [1.6673186733E12, 200.0], [1.6673211864E12, 170.0], [1.6673186796E12, 150.0], [1.6673211801E12, 160.0], [1.6673211883E12, 130.0], [1.6673186798E12, 150.0], [1.6673211881E12, 160.0], [1.6673186797E12, 210.0], [1.66732118E12, 200.0], [1.6673211882E12, 180.0], [1.6673211798E12, 150.0], [1.6673186799E12, 110.0], [1.667321188E12, 170.0], [1.6673211799E12, 120.0], [1.6673211797E12, 110.0], [1.6673211879E12, 150.0], [1.66731868E12, 170.0], [1.6673211796E12, 140.0], [1.6673211878E12, 120.0], [1.6673186801E12, 120.0], [1.6673211876E12, 180.0], [1.6673186803E12, 200.0], [1.6673211794E12, 170.0], [1.6673211877E12, 130.0], [1.6673186802E12, 140.0], [1.6673211795E12, 160.0], [1.6673186804E12, 180.0], [1.6673211793E12, 100.0], [1.6673211875E12, 130.0], [1.6673186805E12, 150.0], [1.6673211792E12, 150.0], [1.6673211874E12, 180.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673211911E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673186733E12, "maxY": 240.0, "series": [{"data": [[1.6673186745E12, 160.0], [1.6673211893E12, 200.0], [1.6673186827E12, 140.0], [1.6673211811E12, 180.0], [1.6673186746E12, 170.0], [1.6673186828E12, 150.0], [1.6673211892E12, 160.0], [1.667321181E12, 120.0], [1.667318683E12, 170.0], [1.6673186748E12, 150.0], [1.6673211808E12, 100.0], [1.667321189E12, 140.0], [1.6673186747E12, 170.0], [1.6673186829E12, 160.0], [1.6673211809E12, 210.0], [1.6673211891E12, 140.0], [1.6673211807E12, 150.0], [1.6673186831E12, 140.0], [1.6673186749E12, 190.0], [1.6673211889E12, 160.0], [1.6673211806E12, 150.0], [1.6673186832E12, 120.0], [1.667318675E12, 170.0], [1.6673211888E12, 180.0], [1.6673211805E12, 130.0], [1.6673211887E12, 170.0], [1.6673186833E12, 170.0], [1.6673186751E12, 150.0], [1.6673186753E12, 130.0], [1.6673211885E12, 160.0], [1.6673186835E12, 170.0], [1.6673211803E12, 150.0], [1.6673186752E12, 140.0], [1.6673211804E12, 190.0], [1.6673211886E12, 150.0], [1.6673186834E12, 150.0], [1.6673186754E12, 180.0], [1.6673186836E12, 160.0], [1.6673211884E12, 180.0], [1.6673211802E12, 180.0], [1.6673211821E12, 170.0], [1.6673211903E12, 200.0], [1.6673186817E12, 150.0], [1.6673186735E12, 70.0], [1.6673211822E12, 140.0], [1.6673186816E12, 140.0], [1.6673186736E12, 150.0], [1.667321182E12, 160.0], [1.6673211902E12, 150.0], [1.6673186818E12, 160.0], [1.6673186737E12, 160.0], [1.6673211901E12, 180.0], [1.6673186819E12, 180.0], [1.6673211819E12, 160.0], [1.6673186739E12, 120.0], [1.6673186821E12, 170.0], [1.6673211817E12, 170.0], [1.6673211899E12, 160.0], [1.6673186738E12, 120.0], [1.667318682E12, 120.0], [1.66732119E12, 150.0], [1.6673211818E12, 140.0], [1.6673186822E12, 130.0], [1.667318674E12, 140.0], [1.6673211816E12, 160.0], [1.6673211898E12, 160.0], [1.6673211815E12, 150.0], [1.6673186823E12, 120.0], [1.6673186741E12, 170.0], [1.6673211897E12, 140.0], [1.6673186743E12, 150.0], [1.6673211814E12, 210.0], [1.6673186824E12, 190.0], [1.6673186742E12, 140.0], [1.6673211896E12, 170.0], [1.6673186744E12, 190.0], [1.6673211812E12, 180.0], [1.6673211894E12, 150.0], [1.6673186826E12, 150.0], [1.6673211813E12, 140.0], [1.6673211895E12, 190.0], [1.6673186825E12, 150.0], [1.6673186766E12, 140.0], [1.6673186847E12, 120.0], [1.6673186765E12, 170.0], [1.6673211832E12, 140.0], [1.667321183E12, 190.0], [1.6673186849E12, 170.0], [1.6673186767E12, 170.0], [1.6673211831E12, 150.0], [1.6673186848E12, 170.0], [1.6673186768E12, 170.0], [1.6673211829E12, 180.0], [1.6673211911E12, 40.0], [1.667318685E12, 180.0], [1.6673186769E12, 150.0], [1.6673211828E12, 120.0], [1.667321191E12, 180.0], [1.6673186851E12, 140.0], [1.6673186771E12, 170.0], [1.6673186853E12, 160.0], [1.6673211908E12, 170.0], [1.6673211826E12, 190.0], [1.667318677E12, 140.0], [1.6673186852E12, 200.0], [1.6673211909E12, 170.0], [1.6673211827E12, 160.0], [1.6673186854E12, 180.0], [1.6673186772E12, 170.0], [1.6673211825E12, 180.0], [1.6673211907E12, 180.0], [1.6673186855E12, 140.0], [1.6673186773E12, 160.0], [1.6673211824E12, 120.0], [1.6673211906E12, 190.0], [1.6673186775E12, 160.0], [1.6673211904E12, 150.0], [1.6673211823E12, 200.0], [1.6673186856E12, 170.0], [1.6673186774E12, 100.0], [1.6673211905E12, 170.0], [1.6673186755E12, 210.0], [1.6673186837E12, 180.0], [1.6673211842E12, 140.0], [1.6673186839E12, 170.0], [1.6673186757E12, 210.0], [1.667321184E12, 170.0], [1.6673186838E12, 140.0], [1.6673186756E12, 160.0], [1.6673211841E12, 160.0], [1.6673211839E12, 130.0], [1.667318684E12, 140.0], [1.6673186758E12, 130.0], [1.6673211838E12, 170.0], [1.6673186841E12, 190.0], [1.6673186759E12, 140.0], [1.667318676E12, 160.0], [1.6673211837E12, 190.0], [1.6673186842E12, 130.0], [1.6673186762E12, 200.0], [1.6673186844E12, 160.0], [1.6673211835E12, 110.0], [1.6673186761E12, 130.0], [1.6673211836E12, 190.0], [1.6673186843E12, 170.0], [1.6673186763E12, 90.0], [1.6673186845E12, 150.0], [1.6673211834E12, 160.0], [1.6673186846E12, 160.0], [1.6673186764E12, 240.0], [1.6673211833E12, 170.0], [1.6673211852E12, 160.0], [1.6673186786E12, 210.0], [1.6673186787E12, 90.0], [1.6673211851E12, 160.0], [1.6673186789E12, 130.0], [1.6673211849E12, 150.0], [1.6673186788E12, 200.0], [1.667321185E12, 130.0], [1.667318679E12, 160.0], [1.6673211848E12, 170.0], [1.6673211847E12, 210.0], [1.6673186791E12, 180.0], [1.6673211846E12, 70.0], [1.6673186792E12, 50.0], [1.6673211844E12, 180.0], [1.6673186794E12, 130.0], [1.6673211845E12, 150.0], [1.6673186793E12, 210.0], [1.6673186795E12, 160.0], [1.6673211843E12, 170.0], [1.6673211862E12, 150.0], [1.6673186776E12, 180.0], [1.6673186858E12, 140.0], [1.6673211863E12, 200.0], [1.6673186857E12, 170.0], [1.6673211861E12, 170.0], [1.6673186777E12, 180.0], [1.6673186859E12, 150.0], [1.667318686E12, 180.0], [1.667321186E12, 120.0], [1.6673186778E12, 150.0], [1.667318678E12, 150.0], [1.6673211858E12, 200.0], [1.6673186861E12, 10.0], [1.6673186779E12, 170.0], [1.6673211859E12, 210.0], [1.6673186781E12, 100.0], [1.6673211857E12, 80.0], [1.6673186782E12, 210.0], [1.6673211856E12, 140.0], [1.6673211855E12, 170.0], [1.6673186783E12, 160.0], [1.6673211853E12, 160.0], [1.6673186785E12, 130.0], [1.6673211854E12, 150.0], [1.6673186784E12, 170.0], [1.6673186807E12, 180.0], [1.6673211872E12, 140.0], [1.6673211791E12, 160.0], [1.6673186806E12, 160.0], [1.6673211873E12, 150.0], [1.6673211789E12, 160.0], [1.6673211871E12, 140.0], [1.6673186808E12, 150.0], [1.667321179E12, 160.0], [1.6673211788E12, 130.0], [1.667321187E12, 180.0], [1.6673186809E12, 140.0], [1.6673211869E12, 160.0], [1.667318681E12, 160.0], [1.6673211787E12, 150.0], [1.6673186812E12, 130.0], [1.6673211785E12, 110.0], [1.6673211867E12, 180.0], [1.6673211868E12, 120.0], [1.6673186811E12, 150.0], [1.6673211786E12, 130.0], [1.6673186813E12, 170.0], [1.6673211784E12, 80.0], [1.6673211866E12, 120.0], [1.6673186814E12, 190.0], [1.6673211865E12, 160.0], [1.6673186734E12, 130.0], [1.6673186815E12, 120.0], [1.6673186733E12, 170.0], [1.6673211864E12, 170.0], [1.6673186796E12, 150.0], [1.6673211801E12, 160.0], [1.6673211883E12, 140.0], [1.6673186798E12, 150.0], [1.6673211881E12, 160.0], [1.6673186797E12, 210.0], [1.66732118E12, 200.0], [1.6673211882E12, 180.0], [1.6673211798E12, 150.0], [1.6673186799E12, 110.0], [1.667321188E12, 170.0], [1.6673211799E12, 120.0], [1.6673211797E12, 110.0], [1.6673211879E12, 150.0], [1.66731868E12, 170.0], [1.6673211796E12, 140.0], [1.6673211878E12, 120.0], [1.6673186801E12, 120.0], [1.6673211876E12, 180.0], [1.6673186803E12, 200.0], [1.6673211794E12, 150.0], [1.6673211877E12, 130.0], [1.6673186802E12, 140.0], [1.6673211795E12, 160.0], [1.6673186804E12, 180.0], [1.6673211793E12, 120.0], [1.6673211875E12, 130.0], [1.6673186805E12, 150.0], [1.6673211792E12, 150.0], [1.6673211874E12, 180.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 100, "maxX": 1.6673211911E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673186733E12, "maxY": 240.0, "series": [{"data": [[1.6673186745E12, 160.0], [1.6673211893E12, 200.0], [1.6673186827E12, 140.0], [1.6673211811E12, 180.0], [1.6673186746E12, 170.0], [1.6673186828E12, 150.0], [1.6673211892E12, 160.0], [1.667321181E12, 120.0], [1.667318683E12, 170.0], [1.6673186748E12, 150.0], [1.6673211808E12, 100.0], [1.667321189E12, 140.0], [1.6673186747E12, 170.0], [1.6673186829E12, 160.0], [1.6673211809E12, 210.0], [1.6673211891E12, 140.0], [1.6673211807E12, 150.0], [1.6673186831E12, 140.0], [1.6673186749E12, 190.0], [1.6673211889E12, 160.0], [1.6673211806E12, 150.0], [1.6673186832E12, 120.0], [1.667318675E12, 170.0], [1.6673211888E12, 180.0], [1.6673211805E12, 130.0], [1.6673211887E12, 170.0], [1.6673186833E12, 170.0], [1.6673186751E12, 150.0], [1.6673186753E12, 130.0], [1.6673211885E12, 160.0], [1.6673186835E12, 170.0], [1.6673211803E12, 150.0], [1.6673186752E12, 140.0], [1.6673211804E12, 190.0], [1.6673211886E12, 150.0], [1.6673186834E12, 150.0], [1.6673186754E12, 180.0], [1.6673186836E12, 160.0], [1.6673211884E12, 180.0], [1.6673211802E12, 180.0], [1.6673211821E12, 170.0], [1.6673211903E12, 200.0], [1.6673186817E12, 150.0], [1.6673186735E12, 70.0], [1.6673211822E12, 140.0], [1.6673186816E12, 140.0], [1.6673186736E12, 150.0], [1.667321182E12, 160.0], [1.6673211902E12, 150.0], [1.6673186818E12, 160.0], [1.6673186737E12, 160.0], [1.6673211901E12, 180.0], [1.6673186819E12, 180.0], [1.6673211819E12, 160.0], [1.6673186739E12, 120.0], [1.6673186821E12, 170.0], [1.6673211817E12, 170.0], [1.6673211899E12, 160.0], [1.6673186738E12, 120.0], [1.667318682E12, 120.0], [1.66732119E12, 150.0], [1.6673211818E12, 140.0], [1.6673186822E12, 130.0], [1.667318674E12, 140.0], [1.6673211816E12, 160.0], [1.6673211898E12, 160.0], [1.6673211815E12, 150.0], [1.6673186823E12, 120.0], [1.6673186741E12, 170.0], [1.6673211897E12, 140.0], [1.6673186743E12, 150.0], [1.6673211814E12, 210.0], [1.6673186824E12, 190.0], [1.6673186742E12, 140.0], [1.6673211896E12, 170.0], [1.6673186744E12, 190.0], [1.6673211812E12, 180.0], [1.6673211894E12, 150.0], [1.6673186826E12, 150.0], [1.6673211813E12, 140.0], [1.6673211895E12, 190.0], [1.6673186825E12, 150.0], [1.6673186766E12, 140.0], [1.6673186847E12, 120.0], [1.6673186765E12, 170.0], [1.6673211832E12, 140.0], [1.667321183E12, 190.0], [1.6673186849E12, 170.0], [1.6673186767E12, 170.0], [1.6673211831E12, 150.0], [1.6673186848E12, 170.0], [1.6673186768E12, 170.0], [1.6673211829E12, 180.0], [1.6673211911E12, 40.0], [1.667318685E12, 180.0], [1.6673186769E12, 150.0], [1.6673211828E12, 120.0], [1.667321191E12, 180.0], [1.6673186851E12, 140.0], [1.6673186771E12, 170.0], [1.6673186853E12, 160.0], [1.6673211908E12, 170.0], [1.6673211826E12, 190.0], [1.667318677E12, 140.0], [1.6673186852E12, 200.0], [1.6673211909E12, 170.0], [1.6673211827E12, 160.0], [1.6673186854E12, 180.0], [1.6673186772E12, 170.0], [1.6673211825E12, 180.0], [1.6673211907E12, 180.0], [1.6673186855E12, 140.0], [1.6673186773E12, 160.0], [1.6673211824E12, 120.0], [1.6673211906E12, 190.0], [1.6673186775E12, 160.0], [1.6673211904E12, 150.0], [1.6673211823E12, 200.0], [1.6673186856E12, 170.0], [1.6673186774E12, 100.0], [1.6673211905E12, 170.0], [1.6673186755E12, 210.0], [1.6673186837E12, 180.0], [1.6673211842E12, 140.0], [1.6673186839E12, 170.0], [1.6673186757E12, 210.0], [1.667321184E12, 170.0], [1.6673186838E12, 140.0], [1.6673186756E12, 160.0], [1.6673211841E12, 160.0], [1.6673211839E12, 130.0], [1.667318684E12, 140.0], [1.6673186758E12, 130.0], [1.6673211838E12, 170.0], [1.6673186841E12, 190.0], [1.6673186759E12, 140.0], [1.667318676E12, 160.0], [1.6673211837E12, 190.0], [1.6673186842E12, 130.0], [1.6673186762E12, 200.0], [1.6673186844E12, 160.0], [1.6673211835E12, 110.0], [1.6673186761E12, 130.0], [1.6673211836E12, 190.0], [1.6673186843E12, 170.0], [1.6673186763E12, 90.0], [1.6673186845E12, 150.0], [1.6673211834E12, 160.0], [1.6673186846E12, 160.0], [1.6673186764E12, 240.0], [1.6673211833E12, 170.0], [1.6673211852E12, 160.0], [1.6673186786E12, 210.0], [1.6673186787E12, 90.0], [1.6673211851E12, 160.0], [1.6673186789E12, 130.0], [1.6673211849E12, 150.0], [1.6673186788E12, 200.0], [1.667321185E12, 130.0], [1.667318679E12, 160.0], [1.6673211848E12, 170.0], [1.6673211847E12, 210.0], [1.6673186791E12, 180.0], [1.6673211846E12, 70.0], [1.6673186792E12, 50.0], [1.6673211844E12, 180.0], [1.6673186794E12, 130.0], [1.6673211845E12, 150.0], [1.6673186793E12, 210.0], [1.6673186795E12, 160.0], [1.6673211843E12, 170.0], [1.6673211862E12, 150.0], [1.6673186776E12, 180.0], [1.6673186858E12, 140.0], [1.6673211863E12, 200.0], [1.6673186857E12, 170.0], [1.6673211861E12, 170.0], [1.6673186777E12, 180.0], [1.6673186859E12, 150.0], [1.667318686E12, 180.0], [1.667321186E12, 120.0], [1.6673186778E12, 150.0], [1.667318678E12, 150.0], [1.6673211858E12, 200.0], [1.6673186861E12, 10.0], [1.6673186779E12, 170.0], [1.6673211859E12, 210.0], [1.6673186781E12, 100.0], [1.6673211857E12, 80.0], [1.6673186782E12, 210.0], [1.6673211856E12, 140.0], [1.6673211855E12, 170.0], [1.6673186783E12, 160.0], [1.6673211853E12, 160.0], [1.6673186785E12, 130.0], [1.6673211854E12, 150.0], [1.6673186784E12, 170.0], [1.6673186807E12, 180.0], [1.6673211872E12, 140.0], [1.6673211791E12, 160.0], [1.6673186806E12, 160.0], [1.6673211873E12, 150.0], [1.6673211789E12, 160.0], [1.6673211871E12, 140.0], [1.6673186808E12, 150.0], [1.667321179E12, 160.0], [1.6673211788E12, 130.0], [1.667321187E12, 180.0], [1.6673186809E12, 140.0], [1.6673211869E12, 160.0], [1.667318681E12, 160.0], [1.6673211787E12, 150.0], [1.6673186812E12, 130.0], [1.6673211785E12, 110.0], [1.6673211867E12, 180.0], [1.6673211868E12, 120.0], [1.6673186811E12, 150.0], [1.6673211786E12, 130.0], [1.6673186813E12, 170.0], [1.6673211784E12, 80.0], [1.6673211866E12, 120.0], [1.6673186814E12, 190.0], [1.6673211865E12, 160.0], [1.6673186734E12, 130.0], [1.6673186815E12, 120.0], [1.6673186733E12, 170.0], [1.6673211864E12, 170.0], [1.6673186796E12, 150.0], [1.6673211801E12, 160.0], [1.6673211883E12, 140.0], [1.6673186798E12, 150.0], [1.6673211881E12, 160.0], [1.6673186797E12, 210.0], [1.66732118E12, 200.0], [1.6673211882E12, 180.0], [1.6673211798E12, 150.0], [1.6673186799E12, 110.0], [1.667321188E12, 170.0], [1.6673211799E12, 120.0], [1.6673211797E12, 110.0], [1.6673211879E12, 150.0], [1.66731868E12, 170.0], [1.6673211796E12, 140.0], [1.6673211878E12, 120.0], [1.6673186801E12, 120.0], [1.6673211876E12, 180.0], [1.6673186803E12, 200.0], [1.6673211794E12, 150.0], [1.6673211877E12, 130.0], [1.6673186802E12, 140.0], [1.6673211795E12, 160.0], [1.6673186804E12, 180.0], [1.6673211793E12, 120.0], [1.6673211875E12, 130.0], [1.6673186805E12, 150.0], [1.6673211792E12, 150.0], [1.6673211874E12, 180.0]], "isOverall": false, "label": "HTTP Request-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673211911E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 10.0, "minX": 1.6673186733E12, "maxY": 240.0, "series": [{"data": [[1.6673186745E12, 160.0], [1.6673211893E12, 200.0], [1.6673186827E12, 140.0], [1.6673211811E12, 180.0], [1.6673186746E12, 170.0], [1.6673186828E12, 150.0], [1.6673211892E12, 160.0], [1.667321181E12, 120.0], [1.667318683E12, 170.0], [1.6673186748E12, 150.0], [1.6673211808E12, 100.0], [1.667321189E12, 140.0], [1.6673186747E12, 170.0], [1.6673186829E12, 160.0], [1.6673211809E12, 210.0], [1.6673211891E12, 140.0], [1.6673211807E12, 150.0], [1.6673186831E12, 140.0], [1.6673186749E12, 190.0], [1.6673211889E12, 160.0], [1.6673211806E12, 150.0], [1.6673186832E12, 120.0], [1.667318675E12, 170.0], [1.6673211888E12, 180.0], [1.6673211805E12, 130.0], [1.6673211887E12, 170.0], [1.6673186833E12, 170.0], [1.6673186751E12, 150.0], [1.6673186753E12, 130.0], [1.6673211885E12, 160.0], [1.6673186835E12, 170.0], [1.6673211803E12, 150.0], [1.6673186752E12, 140.0], [1.6673211804E12, 190.0], [1.6673211886E12, 150.0], [1.6673186834E12, 150.0], [1.6673186754E12, 180.0], [1.6673186836E12, 160.0], [1.6673211884E12, 180.0], [1.6673211802E12, 180.0], [1.6673211821E12, 170.0], [1.6673211903E12, 200.0], [1.6673186817E12, 150.0], [1.6673186735E12, 70.0], [1.6673211822E12, 140.0], [1.6673186816E12, 140.0], [1.6673186736E12, 150.0], [1.667321182E12, 160.0], [1.6673211902E12, 150.0], [1.6673186818E12, 160.0], [1.6673186737E12, 160.0], [1.6673211901E12, 180.0], [1.6673186819E12, 180.0], [1.6673211819E12, 160.0], [1.6673186739E12, 120.0], [1.6673186821E12, 170.0], [1.6673211817E12, 170.0], [1.6673211899E12, 160.0], [1.6673186738E12, 120.0], [1.667318682E12, 120.0], [1.66732119E12, 150.0], [1.6673211818E12, 140.0], [1.6673186822E12, 130.0], [1.667318674E12, 140.0], [1.6673211816E12, 160.0], [1.6673211898E12, 160.0], [1.6673211815E12, 150.0], [1.6673186823E12, 120.0], [1.6673186741E12, 170.0], [1.6673211897E12, 140.0], [1.6673186743E12, 150.0], [1.6673211814E12, 210.0], [1.6673186824E12, 190.0], [1.6673186742E12, 140.0], [1.6673211896E12, 170.0], [1.6673186744E12, 190.0], [1.6673211812E12, 180.0], [1.6673211894E12, 150.0], [1.6673186826E12, 150.0], [1.6673211813E12, 140.0], [1.6673211895E12, 190.0], [1.6673186825E12, 150.0], [1.6673186766E12, 140.0], [1.6673186847E12, 120.0], [1.6673186765E12, 170.0], [1.6673211832E12, 140.0], [1.667321183E12, 190.0], [1.6673186849E12, 170.0], [1.6673186767E12, 170.0], [1.6673211831E12, 150.0], [1.6673186848E12, 170.0], [1.6673186768E12, 170.0], [1.6673211829E12, 180.0], [1.6673211911E12, 40.0], [1.667318685E12, 180.0], [1.6673186769E12, 150.0], [1.6673211828E12, 120.0], [1.667321191E12, 180.0], [1.6673186851E12, 140.0], [1.6673186771E12, 170.0], [1.6673186853E12, 160.0], [1.6673211908E12, 170.0], [1.6673211826E12, 190.0], [1.667318677E12, 140.0], [1.6673186852E12, 200.0], [1.6673211909E12, 170.0], [1.6673211827E12, 160.0], [1.6673186854E12, 180.0], [1.6673186772E12, 170.0], [1.6673211825E12, 180.0], [1.6673211907E12, 180.0], [1.6673186855E12, 140.0], [1.6673186773E12, 160.0], [1.6673211824E12, 120.0], [1.6673211906E12, 190.0], [1.6673186775E12, 160.0], [1.6673211904E12, 150.0], [1.6673211823E12, 200.0], [1.6673186856E12, 170.0], [1.6673186774E12, 100.0], [1.6673211905E12, 170.0], [1.6673186755E12, 210.0], [1.6673186837E12, 180.0], [1.6673211842E12, 140.0], [1.6673186839E12, 170.0], [1.6673186757E12, 210.0], [1.667321184E12, 170.0], [1.6673186838E12, 140.0], [1.6673186756E12, 160.0], [1.6673211841E12, 160.0], [1.6673211839E12, 130.0], [1.667318684E12, 140.0], [1.6673186758E12, 130.0], [1.6673211838E12, 170.0], [1.6673186841E12, 190.0], [1.6673186759E12, 140.0], [1.667318676E12, 160.0], [1.6673211837E12, 190.0], [1.6673186842E12, 130.0], [1.6673186762E12, 200.0], [1.6673186844E12, 160.0], [1.6673211835E12, 110.0], [1.6673186761E12, 130.0], [1.6673211836E12, 190.0], [1.6673186843E12, 170.0], [1.6673186763E12, 90.0], [1.6673186845E12, 150.0], [1.6673211834E12, 160.0], [1.6673186846E12, 160.0], [1.6673186764E12, 240.0], [1.6673211833E12, 170.0], [1.6673211852E12, 160.0], [1.6673186786E12, 210.0], [1.6673186787E12, 90.0], [1.6673211851E12, 160.0], [1.6673186789E12, 130.0], [1.6673211849E12, 150.0], [1.6673186788E12, 200.0], [1.667321185E12, 130.0], [1.667318679E12, 160.0], [1.6673211848E12, 170.0], [1.6673211847E12, 210.0], [1.6673186791E12, 180.0], [1.6673211846E12, 70.0], [1.6673186792E12, 50.0], [1.6673211844E12, 180.0], [1.6673186794E12, 130.0], [1.6673211845E12, 150.0], [1.6673186793E12, 210.0], [1.6673186795E12, 160.0], [1.6673211843E12, 170.0], [1.6673211862E12, 150.0], [1.6673186776E12, 180.0], [1.6673186858E12, 140.0], [1.6673211863E12, 200.0], [1.6673186857E12, 170.0], [1.6673211861E12, 170.0], [1.6673186777E12, 180.0], [1.6673186859E12, 150.0], [1.667318686E12, 180.0], [1.667321186E12, 120.0], [1.6673186778E12, 150.0], [1.667318678E12, 150.0], [1.6673211858E12, 200.0], [1.6673186861E12, 10.0], [1.6673186779E12, 170.0], [1.6673211859E12, 210.0], [1.6673186781E12, 100.0], [1.6673211857E12, 80.0], [1.6673186782E12, 210.0], [1.6673211856E12, 140.0], [1.6673211855E12, 170.0], [1.6673186783E12, 160.0], [1.6673211853E12, 160.0], [1.6673186785E12, 130.0], [1.6673211854E12, 150.0], [1.6673186784E12, 170.0], [1.6673186807E12, 180.0], [1.6673211872E12, 140.0], [1.6673211791E12, 160.0], [1.6673186806E12, 160.0], [1.6673211873E12, 150.0], [1.6673211789E12, 160.0], [1.6673211871E12, 140.0], [1.6673186808E12, 150.0], [1.667321179E12, 160.0], [1.6673211788E12, 130.0], [1.667321187E12, 180.0], [1.6673186809E12, 140.0], [1.6673211869E12, 160.0], [1.667318681E12, 160.0], [1.6673211787E12, 150.0], [1.6673186812E12, 130.0], [1.6673211785E12, 110.0], [1.6673211867E12, 180.0], [1.6673211868E12, 120.0], [1.6673186811E12, 150.0], [1.6673211786E12, 130.0], [1.6673186813E12, 170.0], [1.6673211784E12, 80.0], [1.6673211866E12, 120.0], [1.6673186814E12, 190.0], [1.6673211865E12, 160.0], [1.6673186734E12, 130.0], [1.6673186815E12, 120.0], [1.6673186733E12, 170.0], [1.6673211864E12, 170.0], [1.6673186796E12, 150.0], [1.6673211801E12, 160.0], [1.6673211883E12, 140.0], [1.6673186798E12, 150.0], [1.6673211881E12, 160.0], [1.6673186797E12, 210.0], [1.66732118E12, 200.0], [1.6673211882E12, 180.0], [1.6673211798E12, 150.0], [1.6673186799E12, 110.0], [1.667321188E12, 170.0], [1.6673211799E12, 120.0], [1.6673211797E12, 110.0], [1.6673211879E12, 150.0], [1.66731868E12, 170.0], [1.6673211796E12, 140.0], [1.6673211878E12, 120.0], [1.6673186801E12, 120.0], [1.6673211876E12, 180.0], [1.6673186803E12, 200.0], [1.6673211794E12, 150.0], [1.6673211877E12, 130.0], [1.6673186802E12, 140.0], [1.6673211795E12, 160.0], [1.6673186804E12, 180.0], [1.6673211793E12, 120.0], [1.6673211875E12, 130.0], [1.6673186805E12, 150.0], [1.6673211792E12, 150.0], [1.6673211874E12, 180.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1.6673211911E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

